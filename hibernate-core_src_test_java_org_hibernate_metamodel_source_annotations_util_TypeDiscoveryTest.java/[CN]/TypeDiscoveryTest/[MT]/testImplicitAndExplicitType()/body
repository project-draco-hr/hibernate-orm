{
  Index index=JandexHelper.indexForClass(service,Entity.class);
  Set<ConfiguredClassHierarchy> hierarchies=ConfiguredClassHierarchyBuilder.createEntityHierarchies(index,serviceRegistry);
  assertEquals("There should be only one hierarchy",1,hierarchies.size());
  Iterator<EntityClass> iter=hierarchies.iterator().next().iterator();
  ConfiguredClass configuredClass=iter.next();
  MappedAttribute property=configuredClass.getMappedAttribute("id");
  assertEquals("Unexpected property type","int",property.getType());
  property=configuredClass.getMappedAttribute("string");
  assertEquals("Unexpected property type",String.class.getName(),property.getType());
  property=configuredClass.getMappedAttribute("customString");
  assertEquals("Unexpected property type","my.custom.Type",property.getType());
  Map<String,String> typeParameters=property.getTypeParameters();
  assertEquals("There should be a type parameter","bar",typeParameters.get("foo"));
}
