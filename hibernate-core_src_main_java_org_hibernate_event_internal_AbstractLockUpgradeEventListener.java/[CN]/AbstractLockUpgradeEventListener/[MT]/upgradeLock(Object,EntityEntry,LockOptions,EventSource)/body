{
  LockMode requestedLockMode=lockOptions.getLockMode();
  if (requestedLockMode.greaterThan(entry.getLockMode())) {
    if (entry.getStatus() != Status.MANAGED) {
      throw new ObjectDeletedException("attempted to lock a deleted instance",entry.getId(),entry.getPersister().getEntityName());
    }
    final EntityPersister persister=entry.getPersister();
    if (log.isTraceEnabled()) {
      log.tracev("Locking {0} in mode: {1}",MessageHelper.infoString(persister,entry.getId(),source.getFactory()),requestedLockMode);
    }
    final boolean cachingEnabled=persister.hasCache();
    SoftLock lock=null;
    EntityCacheKey ck=null;
    try {
      if (cachingEnabled) {
        EntityRegionAccessStrategy cache=persister.getCacheAccessStrategy();
        ck=cache.generateCacheKey(entry.getId(),persister,source.getFactory(),source.getTenantIdentifier());
        lock=cache.lockItem(ck,entry.getVersion());
      }
      if (persister.isVersioned() && requestedLockMode == LockMode.FORCE) {
        Object nextVersion=persister.forceVersionIncrement(entry.getId(),entry.getVersion(),source);
        entry.forceLocked(object,nextVersion);
      }
 else {
        persister.lock(entry.getId(),entry.getVersion(),object,lockOptions,source);
      }
      entry.setLockMode(requestedLockMode);
    }
  finally {
      if (cachingEnabled) {
        persister.getCacheAccessStrategy().unlockItem(ck,lock);
      }
    }
  }
}
