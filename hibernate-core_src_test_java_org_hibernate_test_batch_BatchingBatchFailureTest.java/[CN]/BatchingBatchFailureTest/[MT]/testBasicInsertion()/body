{
  Session session=openSession();
  session.getTransaction().begin();
  Session secondSession=session.sessionWithOptions().connection().flushBeforeCompletion(true).autoClose(true).openSession();
  try {
    secondSession.persist(new User(1,"ok"));
    secondSession.persist(new User(2,null));
    secondSession.flush();
    fail("Expecting SQLException");
  }
 catch (  HibernateException expected) {
    secondSession.close();
    try {
      SessionImplementor sessionImplementor=(SessionImplementor)session;
      Field field=sessionImplementor.getTransactionCoordinator().getJdbcCoordinator().getClass().getDeclaredField("currentBatch");
      field.setAccessible(true);
      Batch batch=(Batch)field.get(sessionImplementor.getTransactionCoordinator().getJdbcCoordinator());
      if (batch == null) {
        throw new Exception("Current batch was null");
      }
 else {
        assertEquals(BatchingBatch.class,batch.getClass());
        field=AbstractBatchImpl.class.getDeclaredField("statements");
        field.setAccessible(true);
        assertEquals(0,((Map)field.get(batch)).size());
      }
    }
 catch (    Exception fieldException) {
      fail("Couldn't inspect field " + fieldException.getMessage());
    }
  }
 finally {
    session.getTransaction().rollback();
    session.close();
  }
}
