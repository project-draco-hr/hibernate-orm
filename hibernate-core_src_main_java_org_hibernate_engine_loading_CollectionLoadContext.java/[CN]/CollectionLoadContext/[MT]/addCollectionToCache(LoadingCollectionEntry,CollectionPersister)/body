{
  final SessionImplementor session=getLoadContext().getPersistenceContext().getSession();
  final SessionFactoryImplementor factory=session.getFactory();
  if (LOG.isDebugEnabled())   LOG.cachingCollection(MessageHelper.collectionInfoString(persister,lce.getKey(),factory));
  if (!session.getEnabledFilters().isEmpty() && persister.isAffectedByEnabledFilters(session)) {
    LOG.notAddingToCache();
    return;
  }
  final Object version;
  if (persister.isVersioned()) {
    final Object collectionOwner=getLoadContext().getPersistenceContext().getCollectionOwner(lce.getKey(),persister);
    version=getLoadContext().getPersistenceContext().getEntry(collectionOwner).getVersion();
  }
 else {
    version=null;
  }
  CollectionCacheEntry entry=new CollectionCacheEntry(lce.getCollection(),persister);
  CacheKey cacheKey=new CacheKey(lce.getKey(),persister.getKeyType(),persister.getRole(),session.getEntityMode(),session.getFactory());
  boolean put=persister.getCacheAccessStrategy().putFromLoad(cacheKey,persister.getCacheEntryStructure().structure(entry),session.getTimestamp(),version,factory.getSettings().isMinimalPutsEnabled() && session.getCacheMode() != CacheMode.REFRESH);
  if (put && factory.getStatistics().isStatisticsEnabled()) {
    factory.getStatisticsImplementor().secondLevelCachePut(persister.getCacheAccessStrategy().getRegion().getName());
  }
}
