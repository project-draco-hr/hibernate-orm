{
  if (session.getEnabledFilters().size() == 0 || sql.indexOf(ParserHelper.HQL_VARIABLE_PREFIX) < 0) {
    processedPositionalParameterValues=getPositionalParameterValues();
    processedPositionalParameterTypes=getPositionalParameterTypes();
    processedSQL=sql;
  }
 else {
    Dialect dialect=session.getFactory().getDialect();
    String symbols=new StringBuffer().append(ParserHelper.HQL_SEPARATORS).append(dialect.openQuote()).append(dialect.closeQuote()).toString();
    StringTokenizer tokens=new StringTokenizer(sql,symbols,true);
    StringBuffer result=new StringBuffer();
    List parameters=new ArrayList();
    List parameterTypes=new ArrayList();
    while (tokens.hasMoreTokens()) {
      final String token=tokens.nextToken();
      if (token.startsWith(ParserHelper.HQL_VARIABLE_PREFIX)) {
        String filterParameterName=token.substring(1);
        Object value=session.getFilterParameterValue(filterParameterName);
        Type type=session.getFilterParameterType(filterParameterName);
        if (value != null && Collection.class.isAssignableFrom(value.getClass())) {
          Iterator itr=((Collection)value).iterator();
          while (itr.hasNext()) {
            Object elementValue=itr.next();
            result.append('?');
            parameters.add(elementValue);
            parameterTypes.add(type);
            if (itr.hasNext()) {
              result.append(", ");
            }
          }
        }
 else {
          result.append('?');
          parameters.add(value);
          parameterTypes.add(type);
        }
      }
 else {
        result.append(token);
      }
    }
    parameters.addAll(Arrays.asList(getPositionalParameterValues()));
    parameterTypes.addAll(Arrays.asList(getPositionalParameterTypes()));
    processedPositionalParameterValues=parameters.toArray();
    processedPositionalParameterTypes=(Type[])parameterTypes.toArray(new Type[0]);
    processedSQL=result.toString();
  }
}
