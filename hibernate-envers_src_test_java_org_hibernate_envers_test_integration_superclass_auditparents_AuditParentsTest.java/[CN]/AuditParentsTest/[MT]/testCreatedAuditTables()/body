{
  Table babyCompleteTable=getCfg().getClassMapping("org.hibernate.envers.test.integration.superclass.auditparents.BabyCompleteEntity_AUD").getTable();
  checkTableColumns(TestTools.makeSet("baby","child","parent","relation_id","grandparent","id"),babyCompleteTable);
  Table explicitTransChildTable=getCfg().getClassMapping("org.hibernate.envers.test.integration.superclass.auditparents.ExplicitTransitiveChildEntity_AUD").getTable();
  checkTableColumns(TestTools.makeSet("child","parent","grandparent","id"),explicitTransChildTable);
  Table implicitTransChildTable=getCfg().getClassMapping("org.hibernate.envers.test.integration.superclass.auditparents.ImplicitTransitiveChildEntity_AUD").getTable();
  checkTableColumns(TestTools.makeSet("child","parent","grandparent","id"),implicitTransChildTable);
  Table multipleParentChildTable=getCfg().getClassMapping("org.hibernate.envers.test.integration.superclass.auditparents.ChildMultipleParentsEntity_AUD").getTable();
  checkTableColumns(TestTools.makeSet("child","parent","relation_id","grandparent","id"),multipleParentChildTable);
  Table singleParentChildTable=getCfg().getClassMapping("org.hibernate.envers.test.integration.superclass.auditparents.ChildSingleParentEntity_AUD").getTable();
  checkTableColumns(TestTools.makeSet("child","grandparent","id"),singleParentChildTable);
}
