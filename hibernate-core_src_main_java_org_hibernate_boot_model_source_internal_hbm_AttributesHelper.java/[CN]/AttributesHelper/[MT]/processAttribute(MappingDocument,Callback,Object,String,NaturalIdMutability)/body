{
  if (JAXBElement.class.isInstance(attributeJaxbMapping)) {
    processAttribute(mappingDocument,callback,((JAXBElement)attributeJaxbMapping).getValue(),logicalTableName,naturalIdMutability);
  }
 else   if (JaxbHbmCompositeKeyBasicAttributeType.class.isInstance(attributeJaxbMapping)) {
    callback.addAttributeSource(new CompositeIdentifierSingularAttributeSourceBasicImpl(mappingDocument,callback.getAttributeSourceContainer(),(JaxbHbmCompositeKeyBasicAttributeType)attributeJaxbMapping));
  }
 else   if (JaxbHbmCompositeKeyManyToOneType.class.isInstance(attributeJaxbMapping)) {
    callback.addAttributeSource(new CompositeIdentifierSingularAttributeSourceManyToOneImpl(mappingDocument,callback.getAttributeSourceContainer(),(JaxbHbmCompositeKeyManyToOneType)attributeJaxbMapping));
  }
 else   if (JaxbHbmPropertiesType.class.isInstance(attributeJaxbMapping)) {
    processPropertiesGroup(mappingDocument,callback,(JaxbHbmPropertiesType)attributeJaxbMapping,logicalTableName,naturalIdMutability);
  }
 else   if (JaxbHbmBasicAttributeType.class.isInstance(attributeJaxbMapping)) {
    processBasicAttribute(mappingDocument,callback,(JaxbHbmBasicAttributeType)attributeJaxbMapping,logicalTableName,naturalIdMutability);
  }
 else   if (JaxbHbmCompositeAttributeType.class.isInstance(attributeJaxbMapping)) {
    processEmbeddedAttribute(mappingDocument,callback,(JaxbHbmCompositeAttributeType)attributeJaxbMapping,logicalTableName,naturalIdMutability);
  }
 else   if (JaxbHbmDynamicComponentType.class.isInstance(attributeJaxbMapping)) {
    processDynamicComponentAttribute(mappingDocument,callback,(JaxbHbmDynamicComponentType)attributeJaxbMapping,logicalTableName,naturalIdMutability);
  }
 else   if (JaxbHbmManyToOneType.class.isInstance(attributeJaxbMapping)) {
    processManyToOneAttribute(mappingDocument,callback,(JaxbHbmManyToOneType)attributeJaxbMapping,logicalTableName,naturalIdMutability);
  }
 else   if (JaxbHbmOneToOneType.class.isInstance(attributeJaxbMapping)) {
    processOneToOneAttribute(mappingDocument,callback,(JaxbHbmOneToOneType)attributeJaxbMapping,logicalTableName,naturalIdMutability);
  }
 else   if (JaxbHbmAnyAssociationType.class.isInstance(attributeJaxbMapping)) {
    processAnyAttribute(mappingDocument,callback,(JaxbHbmAnyAssociationType)attributeJaxbMapping,logicalTableName,naturalIdMutability);
  }
 else   if (JaxbHbmMapType.class.isInstance(attributeJaxbMapping)) {
    processMapAttribute(mappingDocument,callback,(JaxbHbmMapType)attributeJaxbMapping);
  }
 else   if (JaxbHbmListType.class.isInstance(attributeJaxbMapping)) {
    processListAttribute(mappingDocument,callback,(JaxbHbmListType)attributeJaxbMapping);
  }
 else   if (JaxbHbmArrayType.class.isInstance(attributeJaxbMapping)) {
    processArrayAttribute(mappingDocument,callback,(JaxbHbmArrayType)attributeJaxbMapping);
  }
 else   if (JaxbHbmPrimitiveArrayType.class.isInstance(attributeJaxbMapping)) {
    processPrimitiveArrayAttribute(mappingDocument,callback,(JaxbHbmPrimitiveArrayType)attributeJaxbMapping);
  }
 else   if (JaxbHbmSetType.class.isInstance(attributeJaxbMapping)) {
    processSetAttribute(mappingDocument,callback,(JaxbHbmSetType)attributeJaxbMapping);
  }
 else   if (JaxbHbmBagCollectionType.class.isInstance(attributeJaxbMapping)) {
    processBagAttribute(mappingDocument,callback,(JaxbHbmBagCollectionType)attributeJaxbMapping);
  }
 else   if (JaxbHbmIdBagCollectionType.class.isInstance(attributeJaxbMapping)) {
    processIdBagAttribute(mappingDocument,callback,(JaxbHbmIdBagCollectionType)attributeJaxbMapping);
  }
 else   if (JaxbHbmNestedCompositeElementType.class.isInstance(attributeJaxbMapping)) {
    processNestedEmbeddedElement(mappingDocument,callback,(JaxbHbmNestedCompositeElementType)attributeJaxbMapping,logicalTableName,naturalIdMutability);
  }
 else {
    throw new MappingException("Encountered unexpected JAXB mapping type for attribute : " + attributeJaxbMapping.getClass().getName(),mappingDocument.getOrigin());
  }
}
