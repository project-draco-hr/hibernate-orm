{
  super.reset();
  namedGenerators=new HashMap<String,IdGenerator>();
  joins=new HashMap<String,Map<String,Join>>();
  classTypes=new HashMap<String,AnnotatedClassType>();
  generatorTables=new HashMap<String,Properties>();
  defaultNamedQueryNames=new HashSet<String>();
  defaultNamedNativeQueryNames=new HashSet<String>();
  defaultSqlResulSetMappingNames=new HashSet<String>();
  defaultNamedGenerators=new HashSet<String>();
  uniqueConstraintHoldersByTable=new HashMap<Table,List<UniqueConstraintHolder>>();
  mappedByResolver=new HashMap<String,String>();
  propertyRefResolver=new HashMap<String,String>();
  annotatedClasses=new ArrayList<XClass>();
  caches=new ArrayList<CacheHolder>();
  hbmEntities=new HashMap<String,Document>();
  annotatedClassEntities=new HashMap<String,XClass>();
  hbmDocuments=new ArrayList<Document>();
  namingStrategy=EJB3NamingStrategy.INSTANCE;
  setEntityResolver(new EJB3DTDEntityResolver());
  anyMetaDefs=new HashMap<String,AnyMetaDef>();
  propertiesAnnotatedWithMapsId=new HashMap<XClass,Map<String,PropertyData>>();
  propertiesAnnotatedWithIdAndToOne=new HashMap<XClass,Map<String,PropertyData>>();
  reflectionManager=new JavaReflectionManager();
  ((MetadataProviderInjector)reflectionManager).setMetadataProvider(new JPAMetadataProvider());
  configurationArtefactPrecedence=Collections.emptyList();
  annotationConfiguredProfiles=new HashSet<FetchProfile>();
}
