{
  Session s=openSession();
  s.beginTransaction();
  GlarchProxy g=new Glarch();
  s.save(g);
  g.setProxyArray(new GlarchProxy[]{g});
  String gid=(String)s.getIdentifier(g);
  ArrayList list=new ArrayList();
  list.add("foo");
  g.setStrings(list);
  HashSet set=new HashSet();
  set.add(g);
  g.setProxySet(set);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  g=(GlarchProxy)s.load(Glarch.class,gid);
  assertTrue(g.getStrings().size() == 1);
  assertTrue(g.getProxyArray().length == 1);
  assertTrue(g.getProxySet().size() == 1);
  assertTrue("versioned collection before",g.getVersion() == 1);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  g=(GlarchProxy)s.load(Glarch.class,gid);
  assertTrue(g.getStrings().get(0).equals("foo"));
  assertTrue(g.getProxyArray()[0] == g);
  assertTrue(g.getProxySet().iterator().next() == g);
  assertTrue("versioned collection before",g.getVersion() == 1);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  g=(GlarchProxy)s.load(Glarch.class,gid);
  assertTrue("versioned collection before",g.getVersion() == 1);
  g.getStrings().add("bar");
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  g=(GlarchProxy)s.load(Glarch.class,gid);
  assertTrue("versioned collection after",g.getVersion() == 2);
  assertTrue("versioned collection after",g.getStrings().size() == 2);
  g.setProxyArray(null);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  g=(GlarchProxy)s.load(Glarch.class,gid);
  assertTrue("versioned collection after",g.getVersion() == 3);
  assertTrue("versioned collection after",g.getProxyArray().length == 0);
  g.setFooComponents(new ArrayList());
  g.setProxyArray(null);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  g=(GlarchProxy)s.load(Glarch.class,gid);
  assertTrue("versioned collection after",g.getVersion() == 4);
  s.delete(g);
  s.flush();
  assertTrue(s.createQuery("from java.lang.Object").list().size() == 0);
  s.getTransaction().commit();
  s.close();
}
