{
  if (isTransactionCallbackRegistered)   return true;
  boolean localCallbacksOnly=owner.getFactory().getSettings().getTransactionFactory().areCallbacksLocalToHibernateTransactions();
  if (localCallbacksOnly)   return false;
  TransactionManager tm=owner.getFactory().getTransactionManager();
  if (tm == null)   return false;
  try {
    if (!isTransactionInProgress()) {
      LOG.trace("TransactionFactory reported no active transaction; Synchronization not registered");
      return false;
    }
    javax.transaction.Transaction tx=tm.getTransaction();
    if (JTAHelper.isMarkedForRollback(tx)) {
      LOG.debugf("Transaction is marked for rollback; skipping Synchronization registration");
      return false;
    }
    if (hibernateTransaction == null)     hibernateTransaction=owner.getFactory().getSettings().getTransactionFactory().createTransaction(this,owner);
    tx.registerSynchronization(new HibernateSynchronizationImpl(getJtaSynchronizationCallbackCoordinator(tx)));
    isTransactionCallbackRegistered=true;
    LOG.debugf("Successfully registered Synchronization");
    return true;
  }
 catch (  HibernateException e) {
    throw e;
  }
catch (  Exception e) {
    throw new TransactionException("could not register synchronization with JTA TransactionManager",e);
  }
}
