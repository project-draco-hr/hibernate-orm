{
  Class<?> callbackSuperclass=callbackClass.getSuperclass();
  if (callbackSuperclass != null) {
    Callback callback=createListenerCallback(entityClass,callbackSuperclass,listener,methodName);
    if (callback != null)     return callback;
  }
  for (  Method method : callbackClass.getDeclaredMethods()) {
    if (!method.getName().equals(methodName))     continue;
    Class<?>[] argTypes=method.getParameterTypes();
    if (argTypes.length != 1)     continue;
    Class<?> argType=argTypes[0];
    if (argType != Object.class && argType != entityClass)     continue;
    if (!method.isAccessible())     method.setAccessible(true);
    return new ListenerCallback(method,listener);
  }
  return null;
}
