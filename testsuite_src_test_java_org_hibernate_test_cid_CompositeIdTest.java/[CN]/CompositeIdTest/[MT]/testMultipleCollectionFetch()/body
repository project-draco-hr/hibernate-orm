{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Product p=new Product();
  p.setProductId("A123");
  p.setDescription("nipple ring");
  p.setPrice(new BigDecimal(1.0));
  p.setNumberAvailable(1004);
  s.persist(p);
  Product p2=new Product();
  p2.setProductId("X525");
  p2.setDescription("nose stud");
  p2.setPrice(new BigDecimal(3.0));
  p2.setNumberAvailable(105);
  s.persist(p2);
  Customer c=new Customer();
  c.setAddress("St Kilda Rd, MEL, 3000");
  c.setName("Virginia");
  c.setCustomerId("C111");
  s.persist(c);
  Order o=new Order(c);
  o.setOrderDate(Calendar.getInstance());
  LineItem li=new LineItem(o,p);
  li.setQuantity(2);
  LineItem li2=new LineItem(o,p2);
  li2.setQuantity(3);
  Order o2=new Order(c);
  o2.setOrderDate(Calendar.getInstance());
  LineItem li3=new LineItem(o2,p);
  li3.setQuantity(1);
  LineItem li4=new LineItem(o2,p2);
  li4.setQuantity(1);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  c=(Customer)s.createQuery("from Customer c left join fetch c.orders o left join fetch o.lineItems li left join fetch li.product p").uniqueResult();
  assertTrue(Hibernate.isInitialized(c.getOrders()));
  assertEquals(c.getOrders().size(),2);
  assertTrue(Hibernate.isInitialized(((Order)c.getOrders().get(0)).getLineItems()));
  assertTrue(Hibernate.isInitialized(((Order)c.getOrders().get(1)).getLineItems()));
  assertEquals(((Order)c.getOrders().get(0)).getLineItems().size(),2);
  assertEquals(((Order)c.getOrders().get(1)).getLineItems().size(),2);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  s.createQuery("delete from LineItem").executeUpdate();
  s.createQuery("delete from Order").executeUpdate();
  s.createQuery("delete from Customer").executeUpdate();
  s.createQuery("delete from Product").executeUpdate();
  t.commit();
  s.close();
}
