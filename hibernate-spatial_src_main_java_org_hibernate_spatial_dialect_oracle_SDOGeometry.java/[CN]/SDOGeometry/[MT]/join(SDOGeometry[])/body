{
  final SDOGeometry sdoCollection=new SDOGeometry();
  if (sdoElements == null || sdoElements.length == 0) {
    sdoCollection.setGType(new SDOGType(2,0,TypeGeometry.COLLECTION));
  }
 else {
    final SDOGeometry firstElement=sdoElements[0];
    final int dim=firstElement.getGType().getDimension();
    final int lrsDim=firstElement.getGType().getLRSDimension();
    sdoCollection.setGType(new SDOGType(dim,lrsDim,TypeGeometry.COLLECTION));
    int ordinatesOffset=1;
    for (int i=0; i < sdoElements.length; i++) {
      final ElemInfo element=sdoElements[i].getInfo();
      final Double[] ordinates=sdoElements[i].getOrdinates().getOrdinateArray();
      if (element != null && element.getSize() > 0) {
        final int shift=ordinatesOffset - element.getOrdinatesOffset(0);
        shiftOrdinateOffset(element,shift);
        sdoCollection.addElement(element);
        sdoCollection.addOrdinates(ordinates);
        ordinatesOffset+=ordinates.length;
      }
    }
  }
  return sdoCollection;
}
