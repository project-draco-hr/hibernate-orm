{
  CacheManager localManager=ClusterAwareRegionFactory.getCacheManager(DualNodeTestCase.LOCAL);
  localCache=localManager.getCache(Account.class.getName());
  TransactionManager localTM=DualNodeJtaTransactionManagerImpl.getInstance(DualNodeTestCase.LOCAL);
  SessionFactory localFactory=getEnvironment().getSessionFactory();
  TransactionManager remoteTM=DualNodeJtaTransactionManagerImpl.getInstance(DualNodeTestCase.REMOTE);
  SessionFactory remoteFactory=getSecondNodeEnvironment().getSessionFactory();
  ClassLoaderTestDAO dao0=new ClassLoaderTestDAO(localFactory,localTM);
  ClassLoaderTestDAO dao1=new ClassLoaderTestDAO(remoteFactory,remoteTM);
  Integer id=new Integer(1);
  dao0.createAccount(dao0.getSmith(),id,new Integer(5),DualNodeTestCase.LOCAL);
  Account acct1=dao1.getAccount(id);
  assertNotNull(acct1);
  assertEquals(DualNodeTestCase.LOCAL,acct1.getBranch());
  dao1.updateAccountBranch(id,DualNodeTestCase.REMOTE);
  Account acct0=dao0.getAccount(id);
  assertNotNull(acct0);
  assertEquals(DualNodeTestCase.LOCAL,acct0.getBranch());
  log.debug("Contents when re-reading from local: " + TestingUtil.printCache(localCache));
  acct0=dao0.getAccountWithRefresh(id);
  assertNotNull(acct0);
  assertEquals(DualNodeTestCase.REMOTE,acct0.getBranch());
  log.debug("Contents after refreshing in remote: " + TestingUtil.printCache(localCache));
  ClassLoaderTestDAO dao0A=new ClassLoaderTestDAO(localFactory,localTM);
  Account acct0A=dao0A.getAccount(id);
  assertNotNull(acct0A);
  assertEquals(DualNodeTestCase.REMOTE,acct0A.getBranch());
  log.debug("Contents after creating a new session: " + TestingUtil.printCache(localCache));
}
