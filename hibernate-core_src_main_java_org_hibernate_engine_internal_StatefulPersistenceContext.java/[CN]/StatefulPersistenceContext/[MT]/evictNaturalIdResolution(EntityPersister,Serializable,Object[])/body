{
  if (!persister.hasNaturalIdentifier()) {
    throw new IllegalArgumentException("Entity did not define a natrual-id");
  }
  if (persister.getNaturalIdentifierProperties().length != deletedNaturalIdValues.length) {
    throw new IllegalArgumentException("Mismatch between expected number of natural-id values and found.");
  }
  NaturalIdResolutionCache entityNaturalIdResolutionCache=naturalIdResolutionCacheMap.get(persister);
  Object[] sessionCachedNaturalIdValues=null;
  if (entityNaturalIdResolutionCache != null) {
    final LocalNaturalIdCacheKey localNaturalIdCacheKey=entityNaturalIdResolutionCache.pkToNaturalIdMap.remove(pk);
    if (localNaturalIdCacheKey != null) {
      entityNaturalIdResolutionCache.naturalIdToPkMap.remove(localNaturalIdCacheKey);
      sessionCachedNaturalIdValues=localNaturalIdCacheKey.getValues();
    }
  }
  if (persister.hasNaturalIdCache()) {
    final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy=persister.getNaturalIdCacheAccessStrategy();
    final NaturalIdCacheKey naturalIdCacheKey=new NaturalIdCacheKey(deletedNaturalIdValues,persister,session);
    naturalIdCacheAccessStrategy.evict(naturalIdCacheKey);
    if (sessionCachedNaturalIdValues != null && !Arrays.equals(sessionCachedNaturalIdValues,deletedNaturalIdValues)) {
      final NaturalIdCacheKey sessionNaturalIdCacheKey=new NaturalIdCacheKey(sessionCachedNaturalIdValues,persister,session);
      naturalIdCacheAccessStrategy.evict(sessionNaturalIdCacheKey);
    }
  }
}
