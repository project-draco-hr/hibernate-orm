{
  if (!persister.hasNaturalIdentifier()) {
    return null;
  }
  persister=locateProperPersister(persister);
  final Object[] cachedValue=naturalIdHelper.findCachedNaturalId(persister,id);
  if (cachedValue != null) {
    return cachedValue;
  }
  if (persister.getEntityMetamodel().hasImmutableNaturalId()) {
    final Object[] dbValue=persister.getNaturalIdentifierSnapshot(id,session);
    naturalIdHelper.cacheNaturalIdCrossReferenceFromLoad(persister,id,dbValue);
    return dbValue;
  }
 else {
    final int[] props=persister.getNaturalIdentifierProperties();
    final Object[] entitySnapshot=getDatabaseSnapshot(id,persister);
    if (entitySnapshot == NO_ROW || entitySnapshot == null) {
      return null;
    }
    final Object[] naturalIdSnapshotSubSet=new Object[props.length];
    for (int i=0; i < props.length; i++) {
      naturalIdSnapshotSubSet[i]=entitySnapshot[props[i]];
    }
    naturalIdHelper.cacheNaturalIdCrossReferenceFromLoad(persister,id,naturalIdSnapshotSubSet);
    return naturalIdSnapshotSubSet;
  }
}
