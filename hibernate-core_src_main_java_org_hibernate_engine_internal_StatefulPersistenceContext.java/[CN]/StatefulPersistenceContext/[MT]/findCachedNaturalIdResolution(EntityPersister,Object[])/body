{
  validateNaturalId(persister,naturalIdValues);
  NaturalIdResolutionCache entityNaturalIdResolutionCache=naturalIdResolutionCacheMap.get(persister);
  Serializable pk;
  final LocalNaturalIdCacheKey localNaturalIdCacheKey=new LocalNaturalIdCacheKey(persister,naturalIdValues);
  if (entityNaturalIdResolutionCache != null) {
    pk=entityNaturalIdResolutionCache.naturalIdToPkMap.get(localNaturalIdCacheKey);
    if (pk != null) {
      if (LOG.isTraceEnabled())       LOG.tracev("Resolved primary key in session cache: {0}",MessageHelper.infoString(persister,Arrays.toString(naturalIdValues),session.getFactory()));
      return pk;
    }
  }
  if (!persister.hasNaturalIdCache()) {
    return null;
  }
  final NaturalIdCacheKey naturalIdCacheKey=new NaturalIdCacheKey(naturalIdValues,persister,session);
  final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy=persister.getNaturalIdCacheAccessStrategy();
  pk=(Serializable)naturalIdCacheAccessStrategy.get(naturalIdCacheKey,session.getTimestamp());
  final SessionFactoryImplementor factory=getSession().getFactory();
  if (pk != null) {
    if (factory.getStatistics().isStatisticsEnabled()) {
      factory.getStatisticsImplementor().naturalIdCacheHit(naturalIdCacheAccessStrategy.getRegion().getName());
    }
    if (LOG.isTraceEnabled())     LOG.tracev("Resolved primary key in second-level cache: {0}",MessageHelper.infoString(persister,naturalIdCacheKey.getNaturalId(),session.getFactory()));
    if (entityNaturalIdResolutionCache == null) {
      entityNaturalIdResolutionCache=new NaturalIdResolutionCache(persister);
      naturalIdResolutionCacheMap.put(persister,entityNaturalIdResolutionCache);
    }
    entityNaturalIdResolutionCache.pkToNaturalIdMap.put(pk,localNaturalIdCacheKey);
    entityNaturalIdResolutionCache.naturalIdToPkMap.put(localNaturalIdCacheKey,pk);
  }
 else   if (factory.getStatistics().isStatisticsEnabled()) {
    factory.getStatisticsImplementor().naturalIdCacheMiss(naturalIdCacheAccessStrategy.getRegion().getName());
  }
  return pk;
}
