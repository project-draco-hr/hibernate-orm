{
  final EntityEntry e;
  if (persister.getEntityEntryFactory() instanceof MutableEntityEntryFactory) {
    e=((MutableEntityEntryFactory)persister.getEntityEntryFactory()).createEntityEntry(status,loadedState,rowId,id,version,lockMode,existsInDatabase,persister,disableVersionIncrement,this);
  }
 else {
    e=((ImmutableEntityEntryFactory)persister.getEntityEntryFactory()).createEntityEntry(status,loadedState,rowId,id,version,lockMode,existsInDatabase,persister,disableVersionIncrement,this);
  }
  entityEntryContext.addEntityEntry(entity,e);
  setHasNonReadOnlyEnties(status);
  return e;
}
