{
  BeanPopulator.getDefaultInstance(ObjectStoreEnvironmentBean.class).setObjectStoreType(VolatileStore.class.getName());
  BeanPopulator.getNamedInstance(ObjectStoreEnvironmentBean.class,"communicationStore").setObjectStoreType(VolatileStore.class.getName());
  BeanPopulator.getNamedInstance(ObjectStoreEnvironmentBean.class,"stateStore").setObjectStoreType(VolatileStore.class.getName());
  TransactionManager transactionManager=com.arjuna.ats.jta.TransactionManager.transactionManager();
  StandardXADataSource dataSource=new StandardXADataSource();
  dataSource.setTransactionManager(transactionManager);
  try {
    dataSource.setDriverName(configValues.get(Environment.DRIVER).toString());
  }
 catch (  SQLException e) {
    throw new RuntimeException("Unable to set DataSource JDBC driver name",e);
  }
  dataSource.setUrl(configValues.get(Environment.URL).toString());
  dataSource.setUser(configValues.get(Environment.USER).toString());
  configValues.remove(Environment.URL);
  configValues.remove(Environment.USER);
  configValues.remove(Environment.DRIVER);
  configValues.put(org.hibernate.cfg.AvailableSettings.JTA_PLATFORM,new JBossStandAloneJtaPlatform());
  configValues.put(Environment.CONNECTION_PROVIDER,DatasourceConnectionProviderImpl.class.getName());
  configValues.put(Environment.DATASOURCE,dataSource);
  configValues.put(AvailableSettings.TRANSACTION_TYPE,"JTA");
  return transactionManager;
}
