{
  Session session=openSession();
  session.getTransaction().begin();
  EntityEnum entityEnum=new EntityEnum();
  entityEnum.setOrdinal(Common.A1);
  Serializable id=session.save(entityEnum);
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=(EntityEnum)session.createCriteria(EntityEnum.class).add(Restrictions.eq("ordinal",Common.A1)).uniqueResult();
  assertEquals(id,entityEnum.getId());
  assertEquals(Common.A1,entityEnum.getOrdinal());
  assertEquals(1,session.createSQLQuery("DELETE FROM EntityEnum where ordinal=0").executeUpdate());
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=new EntityEnum();
  entityEnum.setString(Common.B2);
  id=session.save(entityEnum);
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=(EntityEnum)session.createCriteria(EntityEnum.class).add(Restrictions.eq("string",Common.B2)).uniqueResult();
  assertEquals(id,entityEnum.getId());
  assertEquals(Common.B2,entityEnum.getString());
  assertEquals(1,session.createSQLQuery("DELETE FROM EntityEnum where string='B2'").executeUpdate());
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=new EntityEnum();
  entityEnum.setFirstLetter(FirstLetter.A_LETTER);
  id=session.save(entityEnum);
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=(EntityEnum)session.createCriteria(EntityEnum.class).add(Restrictions.eq("firstLetter",FirstLetter.A_LETTER)).uniqueResult();
  assertEquals(id,entityEnum.getId());
  assertEquals(FirstLetter.A_LETTER,entityEnum.getFirstLetter());
  assertEquals(1,session.createSQLQuery("DELETE FROM EntityEnum where firstLetter='A'").executeUpdate());
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=new EntityEnum();
  entityEnum.setLastNumber(LastNumber.NUMBER_3);
  id=session.save(entityEnum);
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=(EntityEnum)session.createCriteria(EntityEnum.class).add(Restrictions.eq("lastNumber",LastNumber.NUMBER_3)).uniqueResult();
  assertEquals(id,entityEnum.getId());
  assertEquals(LastNumber.NUMBER_3,entityEnum.getLastNumber());
  assertEquals(1,session.createSQLQuery("DELETE FROM EntityEnum where lastNumber='3'").executeUpdate());
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=new EntityEnum();
  entityEnum.setExplicitOverridingImplicit(LastNumber.NUMBER_2);
  id=session.save(entityEnum);
  session.getTransaction().commit();
  session.close();
  session=openSession();
  session.getTransaction().begin();
  entityEnum=(EntityEnum)session.createCriteria(EntityEnum.class).add(Restrictions.eq("explicitOverridingImplicit",LastNumber.NUMBER_2)).uniqueResult();
  assertEquals(id,entityEnum.getId());
  assertEquals(LastNumber.NUMBER_2,entityEnum.getExplicitOverridingImplicit());
  assertEquals(1,session.createSQLQuery("DELETE FROM EntityEnum where explicitOverridingImplicit='NUMBER_2'").executeUpdate());
  session.getTransaction().commit();
  session.close();
}
