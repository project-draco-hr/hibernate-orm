{
  EntityBinding binding=getEntityBinding(Item.class);
  AttributeBinding attributeBinding=binding.locateAttributeBinding("clob");
  HibernateTypeDescriptor descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertEquals("clob",descriptor.getExplicitTypeName());
  assertEquals(Clob.class.getName(),descriptor.getJavaTypeName());
  assertNotNull(descriptor.getResolvedTypeMapping());
  assertEquals(ClobType.class,descriptor.getResolvedTypeMapping().getClass());
  assertNotNull(descriptor.getTypeParameters());
  assertTrue(descriptor.getTypeParameters().isEmpty());
  attributeBinding=binding.locateAttributeBinding("blob");
  descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertEquals("blob",descriptor.getExplicitTypeName());
  assertEquals(Blob.class.getName(),descriptor.getJavaTypeName());
  assertNotNull(descriptor.getResolvedTypeMapping());
  assertEquals(BlobType.class,descriptor.getResolvedTypeMapping().getClass());
  assertNotNull(descriptor.getTypeParameters());
  assertTrue(descriptor.getTypeParameters().isEmpty());
  attributeBinding=binding.locateAttributeBinding("str");
  descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertEquals("materialized_clob",descriptor.getExplicitTypeName());
  assertEquals(String.class.getName(),descriptor.getJavaTypeName());
  assertNotNull(descriptor.getResolvedTypeMapping());
  assertEquals(MaterializedClobType.class,descriptor.getResolvedTypeMapping().getClass());
  assertNotNull(descriptor.getTypeParameters());
  assertTrue(descriptor.getTypeParameters().isEmpty());
  attributeBinding=binding.locateAttributeBinding("characters");
  descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertEquals(CharacterArrayClobType.class.getName(),descriptor.getExplicitTypeName());
  assertEquals(Character[].class.getName(),descriptor.getJavaTypeName());
  assertNotNull(descriptor.getResolvedTypeMapping());
  assertEquals(CharacterArrayClobType.class,descriptor.getResolvedTypeMapping().getClass());
  assertNotNull(descriptor.getTypeParameters());
  assertTrue(descriptor.getTypeParameters().isEmpty());
  attributeBinding=binding.locateAttributeBinding("chars");
  descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertEquals(PrimitiveCharacterArrayClobType.class.getName(),descriptor.getExplicitTypeName());
  assertEquals(char[].class.getName(),descriptor.getJavaTypeName());
  assertNotNull(descriptor.getResolvedTypeMapping());
  assertEquals(PrimitiveCharacterArrayClobType.class,descriptor.getResolvedTypeMapping().getClass());
  assertNotNull(descriptor.getTypeParameters());
  assertTrue(descriptor.getTypeParameters().isEmpty());
  attributeBinding=binding.locateAttributeBinding("bytes");
  descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertEquals(WrappedMaterializedBlobType.class.getName(),descriptor.getExplicitTypeName());
  assertEquals(Byte[].class.getName(),descriptor.getJavaTypeName());
  assertNotNull(descriptor.getResolvedTypeMapping());
  assertEquals(WrappedMaterializedBlobType.class,descriptor.getResolvedTypeMapping().getClass());
  assertNotNull(descriptor.getTypeParameters());
  assertTrue(descriptor.getTypeParameters().isEmpty());
  attributeBinding=binding.locateAttributeBinding("bytes2");
  descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertEquals(StandardBasicTypes.MATERIALIZED_BLOB.getName(),descriptor.getExplicitTypeName());
  assertEquals(byte[].class.getName(),descriptor.getJavaTypeName());
  assertNotNull(descriptor.getResolvedTypeMapping());
  assertEquals(MaterializedBlobType.class,descriptor.getResolvedTypeMapping().getClass());
  assertNotNull(descriptor.getTypeParameters());
  assertTrue(descriptor.getTypeParameters().isEmpty());
  attributeBinding=binding.locateAttributeBinding("serializable");
  descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertEquals(SerializableToBlobType.class.getName(),descriptor.getExplicitTypeName());
  assertEquals(Thing.class.getName(),descriptor.getJavaTypeName());
  assertNotNull(descriptor.getResolvedTypeMapping());
  assertEquals(SerializableToBlobType.class,descriptor.getResolvedTypeMapping().getClass());
  assertNotNull(descriptor.getTypeParameters());
  assertEquals(1,descriptor.getTypeParameters().size());
  assertTrue(descriptor.getTypeParameters().get(SerializableToBlobType.CLASS_NAME).equals(Thing.class.getName()));
  attributeBinding=binding.locateAttributeBinding("noLob");
  descriptor=attributeBinding.getHibernateTypeDescriptor();
  assertNull(descriptor.getExplicitTypeName());
  assertTrue(descriptor.getTypeParameters().isEmpty());
}
