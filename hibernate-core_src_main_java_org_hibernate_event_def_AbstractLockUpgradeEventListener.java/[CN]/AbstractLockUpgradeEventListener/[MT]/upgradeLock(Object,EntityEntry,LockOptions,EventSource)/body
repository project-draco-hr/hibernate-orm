{
  LockMode requestedLockMode=lockOptions.getLockMode();
  if (requestedLockMode.greaterThan(entry.getLockMode())) {
    if (entry.getStatus() != Status.MANAGED) {
      throw new ObjectDeletedException("attempted to lock a deleted instance",entry.getId(),entry.getPersister().getEntityName());
    }
    final EntityPersister persister=entry.getPersister();
    if (LOG.isTraceEnabled())     LOG.trace("Locking " + MessageHelper.infoString(persister,entry.getId(),source.getFactory()) + " in mode: "+ requestedLockMode);
    final SoftLock lock;
    final CacheKey ck;
    if (persister.hasCache()) {
      ck=source.generateCacheKey(entry.getId(),persister.getIdentifierType(),persister.getRootEntityName());
      lock=persister.getCacheAccessStrategy().lockItem(ck,entry.getVersion());
    }
 else {
      ck=null;
      lock=null;
    }
    try {
      if (persister.isVersioned() && requestedLockMode == LockMode.FORCE) {
        Object nextVersion=persister.forceVersionIncrement(entry.getId(),entry.getVersion(),source);
        entry.forceLocked(object,nextVersion);
      }
 else {
        persister.lock(entry.getId(),entry.getVersion(),object,lockOptions,source);
      }
      entry.setLockMode(requestedLockMode);
    }
  finally {
      if (persister.hasCache()) {
        persister.getCacheAccessStrategy().unlockItem(ck,lock);
      }
    }
  }
}
