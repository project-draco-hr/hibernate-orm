{
  boolean hasPrimaryKey=getPrimaryKey().getColumns().iterator().hasNext();
  StringBuilder buf=new StringBuilder(hasPrimaryKey ? dialect.getCreateTableString() : dialect.getCreateMultisetTableString()).append(' ').append(objectName.toText(dialect)).append(" (");
  boolean isPrimaryKeyIdentity=false;
  String pkColName=null;
  if (hasPrimaryKey && isPrimaryKeyIdentity) {
    Column pkColumn=getPrimaryKey().getColumns().iterator().next();
    pkColName=pkColumn.getColumnName().encloseInQuotesIfQuoted(dialect);
  }
  boolean isFirst=true;
  for (  SimpleValue simpleValue : values()) {
    if (!Column.class.isInstance(simpleValue)) {
      continue;
    }
    if (isFirst) {
      isFirst=false;
    }
 else {
      buf.append(", ");
    }
    Column col=(Column)simpleValue;
    String colName=col.getColumnName().encloseInQuotesIfQuoted(dialect);
    buf.append(colName).append(' ');
    if (isPrimaryKeyIdentity && colName.equals(pkColName)) {
      if (dialect.hasDataTypeInIdentityColumn()) {
        buf.append(getTypeString(col,dialect));
      }
      buf.append(' ').append(dialect.getIdentityColumnString(col.getDatatype().getTypeCode()));
    }
 else {
      buf.append(getTypeString(col,dialect));
      String defaultValue=col.getDefaultValue();
      if (defaultValue != null) {
        buf.append(" default ").append(defaultValue);
      }
      if (col.isNullable()) {
        buf.append(dialect.getNullColumnString());
      }
 else {
        buf.append(" not null");
      }
    }
    if (col.isUnique()) {
      UniqueKey uk=getOrCreateUniqueKey(col.getColumnName().encloseInQuotesIfQuoted(dialect) + '_');
      uk.addColumn(col);
      buf.append(dialect.getUniqueDelegate().getColumnDefinitionUniquenessFragment(col));
    }
    if (col.getCheckCondition() != null && dialect.supportsColumnCheck()) {
      buf.append(" check (").append(col.getCheckCondition()).append(")");
    }
    String columnComment=col.getComment();
    if (columnComment != null) {
      buf.append(dialect.getColumnComment(columnComment));
    }
  }
  if (hasPrimaryKey) {
    buf.append(", ").append(getPrimaryKey().sqlConstraintStringInCreateTable(dialect));
  }
  buf.append(dialect.getUniqueDelegate().getTableCreationUniqueConstraintsFragment(this));
  if (dialect.supportsTableCheck()) {
    for (    CheckConstraint checkConstraint : checkConstraints) {
      buf.append(", check (").append(checkConstraint).append(')');
    }
  }
  buf.append(')');
  buf.append(dialect.getTableTypeString());
  String[] sqlStrings=new String[comments.size() + 1];
  sqlStrings[0]=buf.toString();
  for (int i=0; i < comments.size(); i++) {
    sqlStrings[i + 1]=dialect.getTableComment(comments.get(i));
  }
  return sqlStrings;
}
