{
  String mask="";
  boolean negate=false;
switch (spatialRelation) {
case SpatialRelation.INTERSECTS:
    mask="ANYINTERACT";
  break;
case SpatialRelation.CONTAINS:
mask="CONTAINS+COVERS";
break;
case SpatialRelation.CROSSES:
throw new UnsupportedOperationException("Oracle Spatial does't have equivalent CROSSES relationship");
case SpatialRelation.DISJOINT:
mask="ANYINTERACT";
negate=true;
break;
case SpatialRelation.EQUALS:
mask="EQUAL";
break;
case SpatialRelation.OVERLAPS:
mask="OVERLAPBDYDISJOINT+OVERLAPBDYINTERSECT";
break;
case SpatialRelation.TOUCHES:
mask="TOUCH";
break;
case SpatialRelation.WITHIN:
mask="INSIDE+COVEREDBY";
break;
default :
throw new IllegalArgumentException("undefined SpatialRelation passed (" + spatialRelation + ")");
}
StringBuffer buffer;
if (negate) {
buffer=new StringBuffer("CASE WHEN SDO_RELATE(");
}
 else {
buffer=new StringBuffer("SDO_RELATE(");
}
buffer.append(arg1);
buffer.append(",").append(arg2).append(",'mask=" + mask + "') ");
if (negate) {
buffer.append(" = 'TRUE' THEN 'FALSE' ELSE 'TRUE' END");
}
return buffer.toString();
}
