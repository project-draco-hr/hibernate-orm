{
  String canonicalName=dialect.getClass().getCanonicalName();
  if ("org.hibernate.spatial.dialect.postgis.PostgisDialect".equals(canonicalName)) {
    return PostgisTestSupport.class;
  }
  if ("org.hibernate.spatial.dialect.h2geodb.GeoDBDialect".equals(canonicalName)) {
    return GeoDBTestSupport.class;
  }
  if ("org.hibernate.spatial.dialect.sqlserver.SqlServer2008SpatialDialect".equals(canonicalName)) {
    return SQLServerTestSupport.class;
  }
  if ("org.hibernate.spatial.dialect.mysql.MySQLSpatialDialect".equals(canonicalName) || "org.hibernate.spatial.dialect.mysql.MySQLSpatialInnoDBDialect".equals(canonicalName) || "org.hibernate.spatial.dialect.mysql.MySQL5SpatialInnoDBDialect".equals(canonicalName)) {
    return MySQLTestSupport.class;
  }
  if ("org.hibernate.spatial.dialect.oracle.OracleSpatial10gDialect".equals(canonicalName)) {
    return OracleSDOTestSupport.class;
  }
  throw new IllegalArgumentException("Dialect not known in test suite");
}
