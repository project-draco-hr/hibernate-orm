{
  Session s;
  Transaction tx;
  s=openSession();
  tx=s.beginTransaction();
  Store fnac=new Store();
  fnac.setName("Fnac");
  KnownClient emmanuel=new KnownClient();
  emmanuel.setName("Emmanuel");
  emmanuel.setStores(new HashSet<Store>());
  fnac.setCustomers(new HashSet<KnownClient>());
  fnac.getCustomers().add(emmanuel);
  emmanuel.getStores().add(fnac);
  fnac.setImplantedIn(new HashSet<City>());
  City paris=new City();
  fnac.getImplantedIn().add(paris);
  paris.setName("Paris");
  s.persist(fnac);
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  Store store;
  KnownClient knownClient;
  City city;
  store=(Store)s.get(Store.class,fnac.getId());
  assertNotNull(store);
  assertNotNull(store.getCustomers());
  assertEquals(1,store.getCustomers().size());
  knownClient=(KnownClient)store.getCustomers().iterator().next();
  assertEquals(emmanuel.getName(),knownClient.getName());
  assertNotNull(store.getImplantedIn());
  assertEquals(1,store.getImplantedIn().size());
  city=(City)store.getImplantedIn().iterator().next();
  assertEquals(paris.getName(),city.getName());
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  knownClient=(KnownClient)s.get(KnownClient.class,emmanuel.getId());
  assertNotNull(knownClient);
  assertNotNull(knownClient.getStores());
  assertEquals(1,knownClient.getStores().size());
  store=(Store)knownClient.getStores().iterator().next();
  assertEquals(fnac.getName(),store.getName());
  tx.commit();
  s.close();
}
