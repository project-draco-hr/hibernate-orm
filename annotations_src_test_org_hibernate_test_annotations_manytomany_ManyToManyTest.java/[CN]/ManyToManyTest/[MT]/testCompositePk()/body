{
  Session s;
  Transaction tx;
  ManPk m1pk=new ManPk();
  m1pk.setElder(true);
  m1pk.setFirstName("Lucky");
  m1pk.setLastName("Luke");
  ManPk m2pk=new ManPk();
  m2pk.setElder(false);
  m2pk.setFirstName("Joe");
  m2pk.setLastName("Dalton");
  Man m1=new Man();
  m1.setId(m1pk);
  m1.setCarName("Jolly Jumper");
  Man m2=new Man();
  m2.setId(m2pk);
  WomanPk w1pk=new WomanPk();
  w1pk.setFirstName("Ma");
  w1pk.setLastName("Dalton");
  WomanPk w2pk=new WomanPk();
  w2pk.setFirstName("Carla");
  w2pk.setLastName("Bruni");
  Woman w1=new Woman();
  w1.setId(w1pk);
  Woman w2=new Woman();
  w2.setId(w2pk);
  Set<Woman> womens=new HashSet<Woman>();
  womens.add(w1);
  m1.setWomens(womens);
  Set<Woman> womens2=new HashSet<Woman>();
  womens2.add(w1);
  womens2.add(w2);
  m2.setWomens(womens2);
  Set<Man> mens=new HashSet<Man>();
  mens.add(m1);
  mens.add(m2);
  w1.setMens(mens);
  Set<Man> mens2=new HashSet<Man>();
  mens2.add(m2);
  w2.setMens(mens2);
  s=openSession();
  tx=s.beginTransaction();
  s.persist(m1);
  s.persist(m2);
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  m1=(Man)s.load(Man.class,m1pk);
  assertFalse(m1.getWomens().isEmpty());
  assertEquals(1,m1.getWomens().size());
  w1=(Woman)s.load(Woman.class,w1pk);
  assertFalse(w1.getMens().isEmpty());
  assertEquals(2,w1.getMens().size());
  tx.commit();
  s.close();
}
