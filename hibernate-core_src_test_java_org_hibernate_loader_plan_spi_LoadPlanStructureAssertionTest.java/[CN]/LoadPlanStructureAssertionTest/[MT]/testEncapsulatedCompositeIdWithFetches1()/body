{
  Configuration cfg=new Configuration();
  cfg.addAnnotatedClass(Card.class);
  cfg.addAnnotatedClass(CardField.class);
  cfg.addAnnotatedClass(Key.class);
  cfg.addAnnotatedClass(PrimaryKey.class);
  SessionFactoryImplementor sf=(SessionFactoryImplementor)cfg.buildSessionFactory();
  final OuterJoinLoadable cardFieldPersister=(OuterJoinLoadable)sf.getClassMetadata(CardField.class);
  doCompare(sf,cardFieldPersister);
  final LoadPlan loadPlan=LoadPlanStructureAssertionHelper.INSTANCE.buildLoadPlan(sf,cardFieldPersister);
  assertEquals(LoadPlan.Disposition.ENTITY_LOADER,loadPlan.getDisposition());
  assertEquals(1,loadPlan.getReturns().size());
  final EntityReturn cardFieldReturn=assertTyping(EntityReturn.class,loadPlan.getReturns().get(0));
  assertEquals(0,cardFieldReturn.getFetches().length);
  assertEquals(1,cardFieldReturn.getIdentifierDescription().getFetches().length);
  final CompositeFetch cardFieldCompositePkFetch=assertTyping(CompositeFetch.class,cardFieldReturn.getIdentifierDescription().getFetches()[0]);
  assertEquals(2,cardFieldCompositePkFetch.getFetches().length);
  final EntityFetch cardFetch=assertTyping(EntityFetch.class,cardFieldCompositePkFetch.getFetches()[0]);
  assertEquals(0,cardFetch.getFetches().length);
  assertEquals(0,cardFetch.getIdentifierDescription().getFetches().length);
  final EntityFetch keyFetch=assertTyping(EntityFetch.class,cardFieldCompositePkFetch.getFetches()[1]);
  assertEquals(0,keyFetch.getFetches().length);
  assertEquals(0,keyFetch.getIdentifierDescription().getFetches().length);
}
