{
  List list=getAuditReader().createQuery().forRevisionsOfEntity(StringMapEntity.class,false,false).add(AuditEntity.id().eq(sme1_id)).add(AuditEntity.property("strings").hasChanged()).getResultList();
  assertEquals(3,list.size());
  assertEquals(TestTools.makeList(1,2,3),extractRevisionNumbers(list));
  list=getAuditReader().createQuery().forRevisionsOfEntity(StringMapEntity.class,false,false).add(AuditEntity.id().eq(sme2_id)).add(AuditEntity.property("strings").hasChanged()).getResultList();
  assertEquals(2,list.size());
  assertEquals(TestTools.makeList(1,3),extractRevisionNumbers(list));
  list=getAuditReader().createQuery().forRevisionsOfEntity(StringMapEntity.class,false,false).add(AuditEntity.id().eq(sme1_id)).add(AuditEntity.property("strings").hasNotChanged()).getResultList();
  assertEquals(0,list.size());
  list=getAuditReader().createQuery().forRevisionsOfEntity(StringMapEntity.class,false,false).add(AuditEntity.id().eq(sme2_id)).add(AuditEntity.property("strings").hasNotChanged()).getResultList();
  assertEquals(0,list.size());
}
