{
  final Dialect dialect=new SequenceDialect();
  Properties props=buildGeneratorPropertiesBase();
  props.setProperty(SequenceStyleGenerator.OPT_PARAM,OptimizerFactory.StandardOptimizerDescriptor.NONE.getExternalName());
  props.setProperty(SequenceStyleGenerator.INCREMENT_PARAM,"20");
  SequenceStyleGenerator generator=new SequenceStyleGenerator();
  generator.configure(StandardBasicTypes.LONG,props,dialect);
  assertClassAssignability(SequenceStructure.class,generator.getDatabaseStructure().getClass());
  assertClassAssignability(OptimizerFactory.NoopOptimizer.class,generator.getOptimizer().getClass());
  assertEquals(1,generator.getOptimizer().getIncrementSize());
  assertEquals(1,generator.getDatabaseStructure().getIncrementSize());
  props=buildGeneratorPropertiesBase();
  props.setProperty(SequenceStyleGenerator.OPT_PARAM,OptimizerFactory.StandardOptimizerDescriptor.HILO.getExternalName());
  props.setProperty(SequenceStyleGenerator.INCREMENT_PARAM,"20");
  generator=new SequenceStyleGenerator();
  generator.configure(StandardBasicTypes.LONG,props,dialect);
  assertClassAssignability(SequenceStructure.class,generator.getDatabaseStructure().getClass());
  assertClassAssignability(OptimizerFactory.HiLoOptimizer.class,generator.getOptimizer().getClass());
  assertEquals(20,generator.getOptimizer().getIncrementSize());
  assertEquals(20,generator.getDatabaseStructure().getIncrementSize());
  props=buildGeneratorPropertiesBase();
  props.setProperty(SequenceStyleGenerator.OPT_PARAM,OptimizerFactory.StandardOptimizerDescriptor.POOLED.getExternalName());
  props.setProperty(SequenceStyleGenerator.INCREMENT_PARAM,"20");
  generator=new SequenceStyleGenerator();
  generator.configure(StandardBasicTypes.LONG,props,dialect);
  assertClassAssignability(TableStructure.class,generator.getDatabaseStructure().getClass());
  assertClassAssignability(OptimizerFactory.PooledOptimizer.class,generator.getOptimizer().getClass());
  assertEquals(20,generator.getOptimizer().getIncrementSize());
  assertEquals(20,generator.getDatabaseStructure().getIncrementSize());
}
