{
  String strategyClassName=transactionProps.getProperty(Environment.TRANSACTION_STRATEGY);
  if (strategyClassName == null) {
    log.info("Using default transaction strategy (direct JDBC transactions)");
    return new JDBCTransactionFactory();
  }
  log.info("Transaction strategy: " + strategyClassName);
  TransactionFactory factory;
  try {
    factory=(TransactionFactory)ReflectHelper.classForName(strategyClassName).newInstance();
  }
 catch (  ClassNotFoundException e) {
    log.error("TransactionFactory class not found",e);
    throw new HibernateException("TransactionFactory class not found: " + strategyClassName);
  }
catch (  IllegalAccessException e) {
    log.error("Failed to instantiate TransactionFactory",e);
    throw new HibernateException("Failed to instantiate TransactionFactory: " + e);
  }
catch (  java.lang.InstantiationException e) {
    log.error("Failed to instantiate TransactionFactory",e);
    throw new HibernateException("Failed to instantiate TransactionFactory: " + e);
  }
  factory.configure(transactionProps);
  return factory;
}
