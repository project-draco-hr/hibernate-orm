{
  super(ownerClassName,property.getName(),bindingContext,property.getNode(),HbmHelper.extractMetaAttributeContext(property.getMeta(),parentMetaAttributeContext),HbmHelper.getPropertyAccessorName(property.getAccess(),false,bindingContext.getMappingDefaults().getDefaultAccess()),property.isOptimisticLock());
  this.isLazy=property.isLazy();
  this.propertyGeneration=PropertyGeneration.parse(property.getGenerated());
  if (propertyGeneration == PropertyGeneration.ALWAYS || propertyGeneration == PropertyGeneration.INSERT) {
    if (property.isInsert() != null && property.isInsert()) {
      throw new MappingException("cannot specify both insert=\"true\" and generated=\"" + propertyGeneration.getName() + "\" for property: "+ property.getName());
    }
    isInsertable=false;
  }
 else {
    isInsertable=MappingHelper.getBooleanValue(property.isInsert(),true);
  }
  if (propertyGeneration == PropertyGeneration.ALWAYS) {
    if (property.isUpdate() != null && property.isUpdate()) {
      throw new MappingException("cannot specify both update=\"true\" and generated=\"" + propertyGeneration.getName() + "\" for property: "+ property.getName());
    }
    isUpdatable=false;
  }
 else {
    isUpdatable=MappingHelper.getBooleanValue(property.isUpdate(),true);
  }
  if (property.getTypeAttribute() != null) {
    typeName=maybeConvertToTypeDefName(property.getTypeAttribute(),bindingContext.getMappingDefaults());
  }
 else   if (property.getType() != null) {
    typeName=maybeConvertToTypeDefName(property.getType().getName(),bindingContext.getMappingDefaults());
    for (    XMLParamElement typeParameter : property.getType().getParam()) {
      typeParameters.put(typeParameter.getName(),typeParameter.getValue().trim());
    }
  }
 else {
    typeName=getTypeNameByReflection();
  }
}
