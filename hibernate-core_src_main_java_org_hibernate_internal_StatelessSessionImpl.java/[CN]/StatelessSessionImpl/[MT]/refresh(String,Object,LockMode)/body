{
  final EntityPersister persister=this.getEntityPersister(entityName,entity);
  final Serializable id=persister.getIdentifier(entity,this);
  if (LOG.isTraceEnabled()) {
    LOG.tracev("Refreshing transient {0}",MessageHelper.infoString(persister,id,this.getFactory()));
  }
  if (persister.hasCache()) {
    final EntityRegionAccessStrategy cache=persister.getCacheAccessStrategy();
    final Object ck=cache.generateCacheKey(id,persister,getFactory(),getTenantIdentifier());
    cache.evict(ck);
  }
  String previousFetchProfile=this.getLoadQueryInfluencers().getInternalFetchProfile();
  Object result=null;
  try {
    this.getLoadQueryInfluencers().setInternalFetchProfile("refresh");
    result=persister.load(id,entity,getNullSafeLockMode(lockMode),this);
  }
  finally {
    this.getLoadQueryInfluencers().setInternalFetchProfile(previousFetchProfile);
  }
  UnresolvableObjectException.throwIfNull(result,id,persister.getEntityName());
}
