{
  ExtendedMappings mappings=createExtendedMappings();
  keyName=mappings.getObjectNameNormalizer().normalizeIdentifierQuoting(keyName);
  UniqueKey uc;
  int size=columnNames.length;
  Column[] columns=new Column[size];
  Set<Column> unbound=new HashSet<Column>();
  Set<Column> unboundNoLogical=new HashSet<Column>();
  for (int index=0; index < size; index++) {
    final String logicalColumnName=mappings.getObjectNameNormalizer().normalizeIdentifierQuoting(columnNames[index]);
    try {
      final String columnName=mappings.getPhysicalColumnName(logicalColumnName,table);
      columns[index]=new Column(columnName);
      unbound.add(columns[index]);
    }
 catch (    MappingException e) {
      unboundNoLogical.add(new Column(logicalColumnName));
    }
  }
  for (  Column column : columns) {
    if (table.containsColumn(column)) {
      uc=table.getOrCreateUniqueKey(keyName);
      uc.addColumn(table.getColumn(column));
      unbound.remove(column);
    }
  }
  if (unbound.size() > 0 || unboundNoLogical.size() > 0) {
    StringBuilder sb=new StringBuilder("Unable to create unique key constraint (");
    for (    String columnName : columnNames) {
      sb.append(columnName).append(", ");
    }
    sb.setLength(sb.length() - 2);
    sb.append(") on table ").append(table.getName()).append(": ");
    for (    Column column : unbound) {
      sb.append(column.getName()).append(", ");
    }
    for (    Column column : unboundNoLogical) {
      sb.append(column.getName()).append(", ");
    }
    sb.setLength(sb.length() - 2);
    sb.append(" not found");
    throw new AnnotationException(sb.toString());
  }
}
