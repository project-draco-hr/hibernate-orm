{
  boolean ejb3Xml="entity-mappings".equals(doc.getRootElement().getName());
  if (inSecondPass) {
    if (!ejb3Xml) {
      super.add(doc);
    }
  }
 else {
    if (!ejb3Xml) {
      final Element hmNode=doc.getRootElement();
      Attribute packNode=hmNode.attribute("package");
      String defaultPackage=packNode != null ? packNode.getValue() : "";
      Set<String> entityNames=new HashSet<String>();
      findClassNames(defaultPackage,hmNode,entityNames);
      for (      String entity : entityNames) {
        hbmEntities.put(entity,doc);
      }
      hbmDocuments.add(doc);
    }
 else {
      final MetadataProvider metadataProvider=((MetadataProviderInjector)reflectionManager).getMetadataProvider();
      JPAMetadataProvider jpaMetadataProvider=(JPAMetadataProvider)metadataProvider;
      List<String> classnames=jpaMetadataProvider.getXMLContext().addDocument(doc);
      for (      String classname : classnames) {
        try {
          annotatedClasses.add(reflectionManager.classForName(classname,this.getClass()));
        }
 catch (        ClassNotFoundException e) {
          throw new AnnotationException("Unable to load class defined in XML: " + classname,e);
        }
      }
    }
  }
}
