{
  final Class javaType;
  if (bindValue != null) {
    javaType=bindValue.getClass();
  }
 else   if (baseType != null) {
    javaType=baseType.getReturnedClass();
  }
 else {
    javaType=java.sql.Timestamp.class;
  }
switch (temporalType) {
case TIMESTAMP:
{
      return resolveTimestampTemporalTypeVariant(javaType,baseType);
    }
case DATE:
{
    return resolveDateTemporalTypeVariant(javaType,baseType);
  }
case TIME:
{
  return resolveTimeTemporalTypeVariant(javaType,baseType);
}
default :
{
throw new IllegalArgumentException("Unexpected TemporalType [" + temporalType + "]; expecting TIMESTAMP, DATE or TIME");
}
}
}
