{
  ClassLoader cl=YMethodsAndClasses.class.getClassLoader();
  Class xClassClass;
  try {
    xClassClass=cl.loadClass("org.hibernate.annotations.common.reflection.XClass");
  }
 catch (  ClassNotFoundException e) {
    try {
      xClassClass=cl.loadClass("org.hibernate.reflection.XClass");
    }
 catch (    ClassNotFoundException e1) {
      throw new VersionsException("No XClass found.");
    }
  }
  Class xPropertyClass;
  try {
    xPropertyClass=cl.loadClass("org.hibernate.annotations.common.reflection.XProperty");
  }
 catch (  ClassNotFoundException e) {
    try {
      xPropertyClass=cl.loadClass("org.hibernate.reflection.XProperty");
    }
 catch (    ClassNotFoundException e1) {
      throw new VersionsException("No XProperty found.");
    }
  }
  reflectionManager_classForNameMethod=delegateClass.getMethod("classForName",String.class,Class.class);
  reflectionManager_equalsMethod=delegateClass.getMethod("equals",xClassClass,Class.class);
  xClass_getNameMethod=xClassClass.getMethod("getName");
  xClass_getSuperclassMethod=xClassClass.getMethod("getSuperclass");
  xClass_getDeclaredPropertiesMethod=xClassClass.getMethod("getDeclaredProperties",String.class);
  xClass_getAnnotationMethod=xClassClass.getMethod("getAnnotation",Class.class);
  xProperty_getNameMethod=xPropertyClass.getMethod("getName");
  xProperty_getTypeMethod=xPropertyClass.getMethod("getType");
  xProperty_getAnnotationMethod=xPropertyClass.getMethod("getAnnotation",Class.class);
}
