{
  collection.setOwner(entity);
  final CollectionEntry ce=session.getPersistenceContext().getCollectionEntry(collection);
  if (ce == null) {
    throw new HibernateException("Found two representations of same collection: " + type.getRole());
  }
  if (ce.isReached()) {
    throw new HibernateException("Found shared references to a collection: " + type.getRole());
  }
  ce.setReached(true);
  final SessionFactoryImplementor factory=session.getFactory();
  final CollectionPersister persister=factory.getCollectionPersister(type.getRole());
  ce.setCurrentPersister(persister);
  ce.setCurrentKey(type.getKeyOfOwner(entity,session));
  if (LOG.isDebugEnabled()) {
    if (collection.wasInitialized()) {
      LOG.debugf("Collection found: %s, was: %s (initialized)",MessageHelper.collectionInfoString(persister,collection,ce.getCurrentKey(),session),MessageHelper.collectionInfoString(ce.getLoadedPersister(),collection,ce.getLoadedKey(),session));
    }
 else {
      LOG.debugf("Collection found: %s, was: %s (uninitialized)",MessageHelper.collectionInfoString(persister,collection,ce.getCurrentKey(),session),MessageHelper.collectionInfoString(ce.getLoadedPersister(),collection,ce.getLoadedKey(),session));
    }
  }
  prepareCollectionForUpdate(collection,ce,factory);
}
