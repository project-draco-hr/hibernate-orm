{
  Configuration cfg=new Configuration();
  cfg.addAnnotatedClass(Gate.class);
  ServiceRegistry serviceRegistry=ServiceRegistryBuilder.buildServiceRegistry(cfg.getProperties());
  SessionFactory sessionFactory=cfg.buildSessionFactory(serviceRegistry);
  sessionFactory.close();
  serviceRegistry.registerService(PersisterClassResolver.class,new GoofyPersisterClassProvider());
  cfg=new Configuration();
  cfg.addAnnotatedClass(Gate.class);
  try {
    sessionFactory=cfg.buildSessionFactory(serviceRegistry);
    sessionFactory.close();
  }
 catch (  MappingException e) {
    assertEquals("The entity persister should be overridden",GoofyPersisterClassProvider.NoopEntityPersister.class,((GoofyException)e.getCause()).getValue());
  }
  cfg=new Configuration();
  cfg.addAnnotatedClass(Portal.class);
  cfg.addAnnotatedClass(Window.class);
  try {
    sessionFactory=cfg.buildSessionFactory(serviceRegistry);
    sessionFactory.close();
  }
 catch (  MappingException e) {
    assertEquals("The collection persister should be overridden but not the entity persister",GoofyPersisterClassProvider.NoopCollectionPersister.class,((GoofyException)e.getCause()).getValue());
  }
  if (serviceRegistry != null) {
    ServiceRegistryBuilder.destroy(serviceRegistry);
  }
}
