{
  final TypeOverrides cfgOverride;
  int suffixLoc;
  if (!key.equals(INFINISPAN_CONFIG_RESOURCE_PROP) && (suffixLoc=key.indexOf(CONFIG_SUFFIX)) != -1) {
    cfgOverride=getOrCreateConfig(prefixLoc,key,suffixLoc);
    cfgOverride.setCacheName(extractProperty(key,properties));
  }
 else   if ((suffixLoc=key.indexOf(STRATEGY_SUFFIX)) != -1) {
    cfgOverride=getOrCreateConfig(prefixLoc,key,suffixLoc);
    cfgOverride.setEvictionStrategy(extractProperty(key,properties));
  }
 else   if ((suffixLoc=key.indexOf(WAKE_UP_INTERVAL_SUFFIX)) != -1) {
    cfgOverride=getOrCreateConfig(prefixLoc,key,suffixLoc);
    cfgOverride.setEvictionWakeUpInterval(Long.parseLong(extractProperty(key,properties)));
  }
 else   if ((suffixLoc=key.indexOf(MAX_ENTRIES_SUFFIX)) != -1) {
    cfgOverride=getOrCreateConfig(prefixLoc,key,suffixLoc);
    cfgOverride.setEvictionMaxEntries(Integer.parseInt(extractProperty(key,properties)));
  }
 else   if ((suffixLoc=key.indexOf(LIFESPAN_SUFFIX)) != -1) {
    cfgOverride=getOrCreateConfig(prefixLoc,key,suffixLoc);
    cfgOverride.setExpirationLifespan(Long.parseLong(extractProperty(key,properties)));
  }
 else   if ((suffixLoc=key.indexOf(MAX_IDLE_SUFFIX)) != -1) {
    cfgOverride=getOrCreateConfig(prefixLoc,key,suffixLoc);
    cfgOverride.setExpirationMaxIdle(Long.parseLong(extractProperty(key,properties)));
  }
}
