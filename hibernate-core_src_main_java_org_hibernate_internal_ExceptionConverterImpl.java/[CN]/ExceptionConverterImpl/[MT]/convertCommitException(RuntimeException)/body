{
  if (sharedSessionContract.getFactory().getSessionFactoryOptions().isJpaBootstrap()) {
    Throwable wrappedException;
    if (e instanceof PersistenceException) {
      Throwable cause=e.getCause() == null ? e : e.getCause();
      if (cause instanceof HibernateException) {
        wrappedException=convert((HibernateException)cause);
      }
 else {
        wrappedException=cause;
      }
    }
 else     if (e instanceof HibernateException) {
      wrappedException=convert((HibernateException)e);
    }
 else {
      wrappedException=e;
    }
    try {
      sharedSessionContract.getTransaction().rollback();
    }
 catch (    Exception re) {
    }
    return new RollbackException("Error while committing the transaction",wrappedException);
  }
 else {
    return e;
  }
}
