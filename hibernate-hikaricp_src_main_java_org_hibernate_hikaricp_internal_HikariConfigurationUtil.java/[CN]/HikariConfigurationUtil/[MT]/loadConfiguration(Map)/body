{
  Properties hikariProps=new Properties();
  copyProperty(AvailableSettings.ISOLATION,props,"transactionIsolation",hikariProps);
  copyProperty(AvailableSettings.AUTOCOMMIT,props,"autoCommit",hikariProps);
  if (props.containsKey(AvailableSettings.DIALECT) && props.get(AvailableSettings.DIALECT).equals(H2Dialect.class.getName())) {
    copyProperty(AvailableSettings.URL,props,"dataSource.URL",hikariProps);
  }
 else {
    copyProperty(AvailableSettings.URL,props,"dataSource.url",hikariProps);
  }
  copyProperty(AvailableSettings.USER,props,"dataSource.user",hikariProps);
  copyProperty(AvailableSettings.PASS,props,"dataSource.password",hikariProps);
  for (  Object keyo : props.keySet()) {
    String key=(String)keyo;
    if (key.startsWith(CONFIG_PREFIX)) {
      hikariProps.setProperty(key.substring(CONFIG_PREFIX.length()),(String)props.get(key));
    }
  }
  return new HikariConfig(hikariProps);
}
