{
  final Object entityId=delegate.mapToIdFromMap(data);
  Object value=null;
  if (entityId != null) {
    if (versionsReader.getFirstLevelCache().contains(referencedEntityName,revision,entityId)) {
      value=versionsReader.getFirstLevelCache().get(referencedEntityName,revision,entityId);
    }
 else {
      final EntityInfo referencedEntity=getEntityInfo(enversService,referencedEntityName);
      boolean ignoreNotFound=false;
      if (!referencedEntity.isAudited()) {
        final String referencingEntityName=enversService.getEntitiesConfigurations().getEntityNameForVersionsEntityName((String)data.get("$type$"));
        ignoreNotFound=enversService.getEntitiesConfigurations().getRelationDescription(referencingEntityName,getPropertyData().getName()).isIgnoreNotFound();
      }
      if (ignoreNotFound) {
        value=ToOneEntityLoader.loadImmediate(versionsReader,referencedEntity.getEntityClass(),referencedEntityName,entityId,revision,RevisionType.DEL.equals(data.get(enversService.getAuditEntitiesConfiguration().getRevisionTypePropName())),enversService);
      }
 else {
        value=ToOneEntityLoader.createProxyOrLoadImmediate(versionsReader,referencedEntity.getEntityClass(),referencedEntityName,entityId,revision,RevisionType.DEL.equals(data.get(enversService.getAuditEntitiesConfiguration().getRevisionTypePropName())),enversService);
      }
    }
  }
  setPropertyValue(obj,value);
}
