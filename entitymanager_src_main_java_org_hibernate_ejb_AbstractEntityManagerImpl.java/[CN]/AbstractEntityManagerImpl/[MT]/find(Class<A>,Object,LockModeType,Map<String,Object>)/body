{
  CacheMode previousCacheMode=getSession().getCacheMode();
  CacheMode cacheMode=determineAppropriateLocalCacheMode(properties);
  LockOptions lockOptions=null;
  try {
    getSession().setCacheMode(cacheMode);
    if (lockModeType != null) {
      return (A)getSession().get(entityClass,(Serializable)primaryKey,getLockRequest(lockModeType,properties));
    }
 else     return (A)getSession().get(entityClass,(Serializable)primaryKey);
  }
 catch (  ObjectDeletedException e) {
    return null;
  }
catch (  ObjectNotFoundException e) {
    throw new IllegalArgumentException(e.getMessage(),e);
  }
catch (  MappingException e) {
    throw new IllegalArgumentException(e.getMessage(),e);
  }
catch (  TypeMismatchException e) {
    throw new IllegalArgumentException(e.getMessage(),e);
  }
catch (  ClassCastException e) {
    throw new IllegalArgumentException(e.getMessage(),e);
  }
catch (  HibernateException he) {
    throw convert(he,lockOptions);
  }
 finally {
    getSession().setCacheMode(previousCacheMode);
  }
}
