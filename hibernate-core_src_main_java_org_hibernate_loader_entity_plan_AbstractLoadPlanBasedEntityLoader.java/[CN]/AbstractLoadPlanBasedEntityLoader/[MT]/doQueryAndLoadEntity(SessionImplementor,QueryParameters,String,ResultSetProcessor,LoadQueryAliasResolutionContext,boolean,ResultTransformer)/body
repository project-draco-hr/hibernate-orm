{
  final List<AfterLoadAction> afterLoadActions=new ArrayList<AfterLoadAction>();
  final SqlStatementWrapper wrapper=executeQueryStatement(queryParameters,false,afterLoadActions,session);
  try {
    final List results=resultSetProcessor.extractResults(NoOpLoadPlanAdvisor.INSTANCE,wrapper.getResultSet(),session,queryParameters,new NamedParameterContext(){
      @Override public int[] getNamedParameterLocations(      String name){
        return AbstractLoadPlanBasedEntityLoader.this.getNamedParameterLocs(name);
      }
    }
,staticAliasResolutionContext,returnProxies,queryParameters.isReadOnly(),forcedResultTransformer,afterLoadActions);
    if (results.size() == 0) {
      return null;
    }
 else     if (results.size() == 1) {
      return results.get(0);
    }
 else {
      final Object row=results.get(0);
      if (row.getClass().isArray()) {
        final Object[] rowArray=(Object[])row;
        if (rowArray.length == 1) {
          return rowArray[0];
        }
      }
 else {
        return row;
      }
    }
    throw new HibernateException("Unable to interpret given query results in terms of a load-entity query");
  }
  finally {
    session.getTransactionCoordinator().getJdbcCoordinator().release(wrapper.getStatement());
  }
}
