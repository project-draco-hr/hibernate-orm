{
  super(factory);
  this.entityPersister=entityPersister;
  this.uniqueKeyType=uniqueKeyType;
  this.entityName=entityPersister.getEntityName();
  final LoadPlanBuildingAssociationVisitationStrategy strategy;
  if (buildingParameters.getQueryInfluencers().getFetchGraph() != null) {
    strategy=new FetchGraphLoadPlanBuildingStrategy(factory,buildingParameters.getQueryInfluencers(),buildingParameters.getLockMode());
  }
 else   if (buildingParameters.getQueryInfluencers().getLoadGraph() != null) {
    strategy=new LoadGraphLoadPlanBuildingStrategy(factory,buildingParameters.getQueryInfluencers(),buildingParameters.getLockMode());
  }
 else {
    strategy=new FetchStyleLoadPlanBuildingAssociationVisitationStrategy(factory,buildingParameters.getQueryInfluencers(),buildingParameters.getLockMode());
  }
  this.plan=MetamodelDrivenLoadPlanBuilder.buildRootEntityLoadPlan(strategy,entityPersister);
  this.staticLoadQuery=EntityLoadQueryDetails.makeForBatching(plan,uniqueKeyColumnNames,buildingParameters,factory);
}
