{
  super.prepareTest();
  isPlanContractsInverse=((SessionFactoryImpl)getSessions()).getCollectionPersister(Plan.class.getName() + ".contracts").isInverse();
  try {
    ((SessionFactoryImpl)getSessions()).getCollectionPersister(Contract.class.getName() + ".plans");
    isPlanContractsBidirectional=true;
  }
 catch (  MappingException ex) {
    isPlanContractsBidirectional=false;
  }
  isPlanVersioned=((SessionFactoryImpl)getSessions()).getEntityPersister(Plan.class.getName()).isVersioned();
  isContractVersioned=((SessionFactoryImpl)getSessions()).getEntityPersister(Contract.class.getName()).isVersioned();
}
