{
  return new CollectionElementDefinition(){
    @Override public CollectionDefinition getCollectionDefinition(){
      return AbstractCollectionPersister.this;
    }
    @Override public Type getType(){
      return getElementType();
    }
    @Override public EntityDefinition toEntityDefinition(){
      if (getType().isComponentType()) {
        throw new IllegalStateException("Cannot treat composite collection element type as entity");
      }
      return getElementPersister();
    }
    @Override public CompositeCollectionElementDefinition toCompositeElementDefinition(){
      if (!getType().isComponentType()) {
        throw new IllegalStateException("Cannot treat entity collection element type as composite");
      }
      return new CompositeCollectionElementDefinition(){
        @Override public String getName(){
          return "";
        }
        @Override public Type getType(){
          return getElementType();
        }
        @Override public AttributeSource getSource(){
          return getOwnerEntityPersister();
        }
        @Override public Iterable<AttributeDefinition> getAttributes(){
          return CompositionSingularSubAttributesHelper.getCompositeCollectionElementSubAttributes(this);
        }
        @Override public CollectionDefinition getCollectionDefinition(){
          return AbstractCollectionPersister.this;
        }
      }
;
    }
  }
;
}
