{
  return new CollectionElementDefinition(){
    @Override public CollectionDefinition getCollectionDefinition(){
      return AbstractCollectionPersister.this;
    }
    @Override public Type getType(){
      return getElementType();
    }
    @Override public EntityDefinition toEntityDefinition(){
      if (getType().isComponentType()) {
        throw new IllegalStateException("Cannot treat composite collection element type as entity");
      }
      return getElementPersister();
    }
    @Override public CompositionDefinition toCompositeDefinition(){
      if (!getType().isComponentType()) {
        throw new IllegalStateException("Cannot treat entity collection element type as composite");
      }
      throw new NotYetImplementedException();
    }
  }
;
}
