{
  if (!isInverse && isRowInsertEnabled()) {
    if (LOG.isDebugEnabled())     LOG.debug("Inserting rows of collection: " + MessageHelper.collectionInfoString(this,id,getFactory()));
    try {
      collection.preInsert(this);
      Iterator entries=collection.entries(this);
      Expectation expectation=Expectations.appropriateExpectation(getInsertCheckStyle());
      boolean callable=isInsertCallable();
      boolean useBatch=expectation.canBeBatched();
      String sql=getSQLInsertRowString();
      int i=0;
      int count=0;
      while (entries.hasNext()) {
        int offset=1;
        Object entry=entries.next();
        PreparedStatement st=null;
        if (collection.needsInserting(entry,i,elementType)) {
          if (useBatch) {
            if (st == null) {
              st=session.getJDBCContext().getConnectionManager().prepareBatchStatement(this,sql,callable);
            }
          }
 else {
            st=session.getJDBCContext().getConnectionManager().prepareStatement(sql,callable);
          }
          try {
            offset+=expectation.prepare(st);
            offset=writeKey(st,id,offset,session);
            if (hasIdentifier) {
              offset=writeIdentifier(st,collection.getIdentifier(entry,i),offset,session);
            }
            if (hasIndex) {
              offset=writeIndex(st,collection.getIndex(entry,i,this),offset,session);
            }
            writeElement(st,collection.getElement(entry),offset,session);
            if (useBatch) {
              session.getJDBCContext().getConnectionManager().addToBatch(this,sql,expectation);
            }
 else {
              expectation.verifyOutcome(st.executeUpdate(),st,-1);
            }
            collection.afterRowInsert(this,entry,i);
            count++;
          }
 catch (          SQLException sqle) {
            if (useBatch) {
              session.getJDBCContext().getConnectionManager().abortBatch();
            }
            throw sqle;
          }
 finally {
            if (!useBatch) {
              st.close();
            }
          }
        }
        i++;
      }
      LOG.debug("Done inserting rows: " + count + " inserted");
    }
 catch (    SQLException sqle) {
      throw sqlExceptionHelper.convert(sqle,"could not insert collection rows: " + MessageHelper.collectionInfoString(this,id,getFactory()),getSQLInsertRowString());
    }
  }
}
