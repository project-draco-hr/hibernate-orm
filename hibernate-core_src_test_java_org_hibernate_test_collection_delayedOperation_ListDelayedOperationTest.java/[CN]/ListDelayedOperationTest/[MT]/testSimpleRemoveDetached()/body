{
  Session s=openSession();
  s.getTransaction().begin();
  Child c1=s.get(Child.class,childId1);
  Child c2=s.get(Child.class,childId2);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.getTransaction().begin();
  Parent p=s.get(Parent.class,parentId);
  assertFalse(Hibernate.isInitialized(p.getChildren()));
  Hibernate.initialize(p.getChildren());
  p.removeChild(c1);
  for (  Child c : p.getChildren()) {
    if (c.equals(c1)) {
      s.evict(c);
    }
  }
  assertTrue(Hibernate.isInitialized(p.getChildren()));
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.getTransaction().begin();
  p=s.get(Parent.class,parentId);
  assertFalse(Hibernate.isInitialized(p.getChildren()));
  Hibernate.initialize(p.getChildren());
  assertEquals(1,p.getChildren().size());
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.getTransaction().begin();
  p=s.get(Parent.class,parentId);
  assertFalse(Hibernate.isInitialized(p.getChildren()));
  p.removeChild(c2);
  assertFalse(Hibernate.isInitialized(p.getChildren()));
  p=(Parent)s.merge(p);
  Hibernate.initialize(p);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.getTransaction().begin();
  p=s.get(Parent.class,parentId);
  assertFalse(Hibernate.isInitialized(p.getChildren()));
  assertEquals(0,p.getChildren().size());
  s.getTransaction().commit();
  s.close();
}
