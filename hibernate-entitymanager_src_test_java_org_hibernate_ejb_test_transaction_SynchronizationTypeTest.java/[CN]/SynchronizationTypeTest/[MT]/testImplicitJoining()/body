{
  assertFalse("setup problem",JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager()));
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  assertTrue("setup problem",JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager()));
  EntityManager entityManager=entityManagerFactory().createEntityManager(SynchronizationType.UNSYNCHRONIZED,null);
  SessionImplementor session=entityManager.unwrap(SessionImplementor.class);
  Transaction hibernateTransaction=((Session)session).getTransaction();
  ExtraAssertions.assertTyping(CMTTransaction.class,hibernateTransaction);
  assertFalse("EM was auto joined on creation",session.getTransactionCoordinator().isSynchronizationRegistered());
  assertFalse("EM was auto joined on creation",hibernateTransaction.isParticipating());
  session.getFlushMode();
  assertFalse(session.getTransactionCoordinator().isSynchronizationRegistered());
  assertFalse(hibernateTransaction.isParticipating());
  entityManager.joinTransaction();
  assertTrue(JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager()));
  assertTrue(hibernateTransaction.isActive());
  assertTrue(session.getTransactionCoordinator().isSynchronizationRegistered());
  assertTrue(hibernateTransaction.isParticipating());
  assertTrue(entityManager.isOpen());
  assertTrue(session.isOpen());
  entityManager.close();
  assertFalse(entityManager.isOpen());
  assertTrue(session.isOpen());
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
  assertFalse(entityManager.isOpen());
  assertFalse(session.isOpen());
}
