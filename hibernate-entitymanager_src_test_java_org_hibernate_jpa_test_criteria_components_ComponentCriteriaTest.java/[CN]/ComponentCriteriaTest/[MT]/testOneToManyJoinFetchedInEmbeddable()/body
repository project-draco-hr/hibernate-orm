{
  EntityManager em=getOrCreateEntityManager();
  em.getTransaction().begin();
  Client client=new Client(111,"steve","ebersole");
  Alias alias=new Alias("a","guy","work");
  client.getName().getAliases().add(alias);
  em.persist(client);
  em.getTransaction().commit();
  em.close();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  CriteriaBuilder cb=em.getCriteriaBuilder();
  CriteriaQuery<Client> cq=cb.createQuery(Client.class);
  Root<Client> root=cq.from(Client.class);
  root.fetch(Client_.name).fetch(Name_.aliases);
  cq.where(cb.equal(root.get("name").get("firstName"),client.getName().getFirstName()));
  List<Client> list=em.createQuery(cq).getResultList();
  Assert.assertEquals(1,list.size());
  client=list.get(0);
  assertTrue(Hibernate.isInitialized(client.getName().getAliases()));
  em.getTransaction().commit();
  em.close();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  TypedQuery<Client> q=em.createQuery("SELECT c FROM Client c JOIN FETCH c.name.aliases WHERE c.name.firstName = '" + client.getName().getFirstName() + "'",Client.class);
  Assert.assertEquals(1,q.getResultList().size());
  client=list.get(0);
  assertTrue(Hibernate.isInitialized(client.getName().getAliases()));
  em.getTransaction().commit();
  em.close();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  q=em.createQuery("SELECT c FROM Client c JOIN  c.name n join FETCH n.aliases WHERE c.name.firstName = '" + client.getName().getFirstName() + "'",Client.class);
  Assert.assertEquals(1,q.getResultList().size());
  client=list.get(0);
  assertTrue(Hibernate.isInitialized(client.getName().getAliases()));
  em.getTransaction().commit();
  em.close();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  client=em.merge(client);
  em.remove(client);
  em.getTransaction().commit();
  em.close();
}
