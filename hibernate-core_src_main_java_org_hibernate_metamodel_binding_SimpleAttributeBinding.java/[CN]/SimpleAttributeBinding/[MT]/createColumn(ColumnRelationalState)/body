{
  final String explicitName=state.getExplicitColumnName();
  final String logicalColumnName=state.getNamingStrategy().logicalColumnName(explicitName,getAttribute().getName());
  final TableSpecification table=getEntityBinding().getBaseTable();
  final String columnName=explicitName == null ? state.getNamingStrategy().propertyToColumnName(getAttribute().getName()) : state.getNamingStrategy().columnName(explicitName);
  Column columnValue=table.createColumn(columnName);
  columnValue.getSize().initialize(state.getSize());
  columnValue.setNullable(!forceNonNullable() && state.isNullable());
  columnValue.setUnique(!forceUnique() && state.isUnique());
  columnValue.setCheckCondition(state.getCheckCondition());
  columnValue.setDefaultValue(state.getDefault());
  columnValue.setSqlType(state.getSqlType());
  columnValue.setWriteFragment(state.getCustomWriteFragment());
  columnValue.setReadFragment(state.getCustomReadFragment());
  columnValue.setComment(state.getComment());
  for (  String uniqueKey : state.getUniqueKeys()) {
    table.getOrCreateUniqueKey(uniqueKey).addColumn(columnValue);
  }
  for (  String index : state.getIndexes()) {
    table.getOrCreateIndex(index).addColumn(columnValue);
  }
  return columnValue;
}
