{
  final String initialPayloadText="Initial payload";
  final String changedPayloadText="Changed payload";
  final String empty="";
  Session s=openSession();
  s.beginTransaction();
  SerializableHolder holder=new SerializableHolder();
  s.save(holder);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  holder=(SerializableHolder)s.get(SerializableHolder.class,holder.getId());
  assertNull(holder.getSerialData());
  holder.setSerialData(new SerializableData(initialPayloadText));
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  holder=(SerializableHolder)s.get(SerializableHolder.class,holder.getId());
  SerializableData serialData=(SerializableData)holder.getSerialData();
  assertEquals(initialPayloadText,serialData.getPayload());
  holder.setSerialData(new SerializableData(changedPayloadText));
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  holder=(SerializableHolder)s.get(SerializableHolder.class,holder.getId());
  serialData=(SerializableData)holder.getSerialData();
  assertEquals(changedPayloadText,serialData.getPayload());
  holder.setSerialData(null);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  holder=(SerializableHolder)s.get(SerializableHolder.class,holder.getId());
  assertNull(holder.getSerialData());
  holder.setSerialData(new SerializableData(empty));
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  holder=(SerializableHolder)s.get(SerializableHolder.class,holder.getId());
  serialData=(SerializableData)holder.getSerialData();
  assertEquals(empty,serialData.getPayload());
  s.delete(holder);
  s.getTransaction().commit();
  s.close();
}
