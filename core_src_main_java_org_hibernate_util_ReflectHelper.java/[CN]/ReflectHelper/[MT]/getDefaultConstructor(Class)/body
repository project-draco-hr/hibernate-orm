{
  if (isAbstractClass(clazz)) {
    return null;
  }
  try {
    Constructor constructor=clazz.getDeclaredConstructor(NO_PARAM_SIGNATURE);
    if (!isPublic(clazz,constructor)) {
      constructor.setAccessible(true);
    }
    return constructor;
  }
 catch (  NoSuchMethodException nme) {
    throw new PropertyNotFoundException("Object class [" + clazz.getName() + "] must declare a default (no-argument) constructor");
  }
}
