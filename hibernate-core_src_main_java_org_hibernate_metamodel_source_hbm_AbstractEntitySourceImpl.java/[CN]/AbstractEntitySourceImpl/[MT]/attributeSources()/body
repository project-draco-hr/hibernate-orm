{
  List<AttributeSource> attributeSources=new ArrayList<AttributeSource>();
  for (  Object attributeElement : entityElement.getPropertyOrManyToOneOrOneToOne()) {
    if (XMLPropertyElement.class.isInstance(attributeElement)) {
      attributeSources.add(new PropertyAttributeSourceImpl(XMLPropertyElement.class.cast(attributeElement),sourceMappingDocument().getMappingLocalBindingContext()));
    }
 else     if (XMLComponentElement.class.isInstance(attributeElement)) {
      attributeSources.add(new ComponentAttributeSourceImpl((XMLComponentElement)attributeElement,this,sourceMappingDocument.getMappingLocalBindingContext()));
    }
 else     if (XMLManyToOneElement.class.isInstance(attributeElement)) {
      attributeSources.add(new ManyToOneAttributeSourceImpl(XMLManyToOneElement.class.cast(attributeElement),sourceMappingDocument().getMappingLocalBindingContext()));
    }
 else     if (XMLOneToOneElement.class.isInstance(attributeElement)) {
    }
 else     if (XMLAnyElement.class.isInstance(attributeElement)) {
    }
 else     if (XMLBagElement.class.isInstance(attributeElement)) {
      attributeSources.add(new BagAttributeSourceImpl(XMLBagElement.class.cast(attributeElement),this));
    }
 else     if (XMLIdbagElement.class.isInstance(attributeElement)) {
    }
 else     if (XMLSetElement.class.isInstance(attributeElement)) {
      attributeSources.add(new SetAttributeSourceImpl(XMLSetElement.class.cast(attributeElement),this));
    }
 else     if (XMLListElement.class.isInstance(attributeElement)) {
    }
 else     if (XMLMapElement.class.isInstance(attributeElement)) {
    }
 else {
      throw new AssertionFailure("Unexpected attribute element type encountered : " + attributeElement.getClass());
    }
  }
  return attributeSources;
}
