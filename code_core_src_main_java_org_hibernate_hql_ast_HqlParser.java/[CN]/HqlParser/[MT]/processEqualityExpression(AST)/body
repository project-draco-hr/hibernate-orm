{
  if (x == null) {
    log.warn("processEqualityExpression() : No expression to process!");
    return null;
  }
  int type=x.getType();
  if (type == EQ || type == NE) {
    boolean negated=type == NE;
    if (x.getNumberOfChildren() == 2) {
      AST a=x.getFirstChild();
      AST b=a.getNextSibling();
      if (a.getType() == NULL && b.getType() != NULL) {
        return createIsNullParent(b,negated);
      }
 else       if (b.getType() == NULL && a.getType() != NULL) {
        return createIsNullParent(a,negated);
      }
 else       if (b.getType() == EMPTY) {
        return processIsEmpty(a,negated);
      }
 else {
        return x;
      }
    }
 else {
      return x;
    }
  }
 else {
    return x;
  }
}
