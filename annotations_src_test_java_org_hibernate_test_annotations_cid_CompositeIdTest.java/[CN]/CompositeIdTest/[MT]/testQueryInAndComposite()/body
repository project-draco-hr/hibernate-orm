{
  Session s=openSession();
  Transaction transaction=s.beginTransaction();
  SomeEntity someEntity=new SomeEntity();
  someEntity.setId(new SomeEntityId());
  someEntity.getId().setId(1);
  someEntity.getId().setVersion(11);
  someEntity.setProp("aa");
  s.persist(someEntity);
  someEntity=new SomeEntity();
  someEntity.setId(new SomeEntityId());
  someEntity.getId().setId(1);
  someEntity.getId().setVersion(12);
  someEntity.setProp("bb");
  s.persist(someEntity);
  someEntity=new SomeEntity();
  someEntity.setId(new SomeEntityId());
  someEntity.getId().setId(10);
  someEntity.getId().setVersion(21);
  someEntity.setProp("cc1");
  s.persist(someEntity);
  someEntity=new SomeEntity();
  someEntity.setId(new SomeEntityId());
  someEntity.getId().setId(10);
  someEntity.getId().setVersion(22);
  someEntity.setProp("cc2");
  s.persist(someEntity);
  someEntity=new SomeEntity();
  someEntity.setId(new SomeEntityId());
  someEntity.getId().setId(10);
  someEntity.getId().setVersion(23);
  someEntity.setProp("cc3");
  s.persist(someEntity);
  s.flush();
  List ids=new ArrayList<SomeEntityId>(2);
  ids.add(new SomeEntityId(1,12));
  ids.add(new SomeEntityId(10,23));
  Criteria criteria=s.createCriteria(SomeEntity.class);
  Disjunction disjunction=Restrictions.disjunction();
  disjunction.add(Restrictions.in("id",ids));
  criteria.add(disjunction);
  List list=criteria.list();
  assertEquals(2,list.size());
  transaction.rollback();
  s.close();
}
