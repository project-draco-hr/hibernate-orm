{
  if (getFactory().getDialect().dropTemporaryTableAfterUse()) {
    IsolatedWork work=new IsolatedWork(){
      public void doWork(      Connection connection) throws HibernateException {
        final String command=session.getFactory().getDialect().getDropTemporaryTableString() + ' ' + persister.getTemporaryIdTableName();
        try {
          Statement statement=connection.createStatement();
          try {
            statement=connection.createStatement();
            statement.executeUpdate(command);
          }
  finally {
            try {
              statement.close();
            }
 catch (            Throwable ignore) {
            }
          }
        }
 catch (        Exception e) {
          LOG.unableToDropTemporaryIdTable(e.getMessage());
        }
      }
    }
;
    if (shouldIsolateTemporaryTableDDL()) {
      if (getFactory().getSettings().isDataDefinitionInTransactionSupported()) {
        Isolater.doIsolatedWork(work,session);
      }
 else {
        Isolater.doNonTransactedWork(work,session);
      }
    }
 else {
      work.doWork(session.getJDBCContext().getConnectionManager().getConnection());
      session.getJDBCContext().getConnectionManager().afterStatement();
    }
  }
 else {
    PreparedStatement ps=null;
    try {
      ps=session.getJDBCContext().getConnectionManager().prepareStatement("delete from " + persister.getTemporaryIdTableName(),false);
      ps.executeUpdate();
    }
 catch (    Throwable t) {
      LOG.unableToCleanupTemporaryIdTable(t);
    }
 finally {
      if (ps != null) {
        try {
          ps.close();
        }
 catch (        Throwable ignore) {
        }
      }
    }
  }
}
