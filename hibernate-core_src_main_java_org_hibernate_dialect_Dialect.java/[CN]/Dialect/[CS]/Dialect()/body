{
  LOG.usingDialect(this);
  StandardAnsiSqlAggregationFunctions.primeFunctionMap(sqlFunctions);
  registerFunction("substring",new SQLFunctionTemplate(StandardBasicTypes.STRING,"substring(?1, ?2, ?3)"));
  registerFunction("locate",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"locate(?1, ?2, ?3)"));
  registerFunction("trim",new SQLFunctionTemplate(StandardBasicTypes.STRING,"trim(?1 ?2 ?3 ?4)"));
  registerFunction("length",new StandardSQLFunction("length",StandardBasicTypes.INTEGER));
  registerFunction("bit_length",new StandardSQLFunction("bit_length",StandardBasicTypes.INTEGER));
  registerFunction("coalesce",new StandardSQLFunction("coalesce"));
  registerFunction("nullif",new StandardSQLFunction("nullif"));
  registerFunction("abs",new StandardSQLFunction("abs"));
  registerFunction("mod",new StandardSQLFunction("mod",StandardBasicTypes.INTEGER));
  registerFunction("sqrt",new StandardSQLFunction("sqrt",StandardBasicTypes.DOUBLE));
  registerFunction("upper",new StandardSQLFunction("upper"));
  registerFunction("lower",new StandardSQLFunction("lower"));
  registerFunction("cast",new CastFunction());
  registerFunction("extract",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"extract(?1 ?2 ?3)"));
  registerFunction("second",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"extract(second from ?1)"));
  registerFunction("minute",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"extract(minute from ?1)"));
  registerFunction("hour",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"extract(hour from ?1)"));
  registerFunction("day",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"extract(day from ?1)"));
  registerFunction("month",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"extract(month from ?1)"));
  registerFunction("year",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"extract(year from ?1)"));
  registerFunction("str",new SQLFunctionTemplate(StandardBasicTypes.STRING,"cast(?1 as char)"));
  registerHibernateType(Types.BIGINT,StandardBasicTypes.BIG_INTEGER.getName());
  registerHibernateType(Types.BINARY,StandardBasicTypes.BINARY.getName());
  registerHibernateType(Types.BIT,StandardBasicTypes.BOOLEAN.getName());
  registerHibernateType(Types.CHAR,StandardBasicTypes.CHARACTER.getName());
  registerHibernateType(Types.DATE,StandardBasicTypes.DATE.getName());
  registerHibernateType(Types.DOUBLE,StandardBasicTypes.DOUBLE.getName());
  registerHibernateType(Types.FLOAT,StandardBasicTypes.FLOAT.getName());
  registerHibernateType(Types.INTEGER,StandardBasicTypes.INTEGER.getName());
  registerHibernateType(Types.SMALLINT,StandardBasicTypes.SHORT.getName());
  registerHibernateType(Types.TINYINT,StandardBasicTypes.BYTE.getName());
  registerHibernateType(Types.TIME,StandardBasicTypes.TIME.getName());
  registerHibernateType(Types.TIMESTAMP,StandardBasicTypes.TIMESTAMP.getName());
  registerHibernateType(Types.VARCHAR,StandardBasicTypes.STRING.getName());
  registerHibernateType(Types.VARBINARY,StandardBasicTypes.BINARY.getName());
  registerHibernateType(Types.LONGVARCHAR,StandardBasicTypes.TEXT.getName());
  registerHibernateType(Types.LONGVARBINARY,StandardBasicTypes.IMAGE.getName());
  registerHibernateType(Types.NUMERIC,StandardBasicTypes.BIG_DECIMAL.getName());
  registerHibernateType(Types.DECIMAL,StandardBasicTypes.BIG_DECIMAL.getName());
  registerHibernateType(Types.BLOB,StandardBasicTypes.BLOB.getName());
  registerHibernateType(Types.CLOB,StandardBasicTypes.CLOB.getName());
  registerHibernateType(Types.REAL,StandardBasicTypes.FLOAT.getName());
}
