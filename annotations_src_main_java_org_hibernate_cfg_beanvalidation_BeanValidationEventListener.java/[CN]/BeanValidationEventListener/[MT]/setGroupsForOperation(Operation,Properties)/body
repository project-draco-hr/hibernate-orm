{
  Object property=properties.get(JPA_GROUP_PREFIX + operation.getGroupPropertyName());
  Class<?>[] groups;
  if (property == null) {
    groups=operation == Operation.DELETE ? EMPTY_GROUPS : DEFAULT_GROUPS;
  }
 else {
    if (property instanceof String) {
      String stringProperty=(String)property;
      String[] groupNames=stringProperty.split(",");
      if (groupNames.length == 1 && groupNames[0].equals("")) {
        groups=EMPTY_GROUPS;
      }
 else {
        List<Class<?>> groupsList=new ArrayList<Class<?>>(groupNames.length);
        for (        String groupName : groupNames) {
          String cleanedGroupName=groupName.trim();
          if (cleanedGroupName.length() > 0) {
            try {
              groupsList.add(ReflectHelper.classForName(cleanedGroupName));
            }
 catch (            ClassNotFoundException e) {
              throw new HibernateException("Unable to load class " + cleanedGroupName,e);
            }
          }
        }
        groups=groupsList.toArray(new Class<?>[groupsList.size()]);
      }
    }
 else     if (property instanceof Class<?>[]) {
      groups=(Class<?>[])property;
    }
 else {
      throw new HibernateException(JPA_GROUP_PREFIX + operation.getGroupPropertyName() + " is of unknown type: String or Class<?>[] only");
    }
  }
  groupsPerOperation.put(operation,groups);
}
