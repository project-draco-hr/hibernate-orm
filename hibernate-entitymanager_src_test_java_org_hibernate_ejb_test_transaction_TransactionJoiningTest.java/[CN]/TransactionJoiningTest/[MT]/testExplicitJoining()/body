{
  assertFalse(JtaStatusHelper.isActive(TestingJtaBootstrap.INSTANCE.getTransactionManager()));
  EntityManager entityManager=entityManagerFactory().createEntityManager();
  SessionImplementor session=entityManager.unwrap(SessionImplementor.class);
  assertFalse(session.getTransactionCoordinator().isSynchronizationRegistered());
  Transaction hibernateTransaction=((Session)session).getTransaction();
  assertTrue(CMTTransaction.class.isInstance(hibernateTransaction));
  assertFalse(hibernateTransaction.isParticipating());
  session.getFlushMode();
  assertFalse(session.getTransactionCoordinator().isSynchronizationRegistered());
  assertFalse(hibernateTransaction.isParticipating());
  TestingJtaBootstrap.INSTANCE.getTransactionManager().begin();
  assertTrue(JtaStatusHelper.isActive(TestingJtaBootstrap.INSTANCE.getTransactionManager()));
  assertTrue(hibernateTransaction.isActive());
  assertFalse(hibernateTransaction.isParticipating());
  assertFalse(session.getTransactionCoordinator().isSynchronizationRegistered());
  session.getFlushMode();
  assertTrue(JtaStatusHelper.isActive(TestingJtaBootstrap.INSTANCE.getTransactionManager()));
  assertTrue(hibernateTransaction.isActive());
  assertFalse(session.getTransactionCoordinator().isSynchronizationRegistered());
  assertFalse(hibernateTransaction.isParticipating());
  entityManager.joinTransaction();
  assertTrue(JtaStatusHelper.isActive(TestingJtaBootstrap.INSTANCE.getTransactionManager()));
  assertTrue(hibernateTransaction.isActive());
  assertTrue(session.getTransactionCoordinator().isSynchronizationRegistered());
  assertTrue(hibernateTransaction.isParticipating());
  entityManager.close();
  TestingJtaBootstrap.INSTANCE.getTransactionManager().commit();
}
