{
  final AttributeConversionInfo info=new AttributeConversionInfo(convertAnnotation,collectionProperty);
  if (collection.isMap()) {
    boolean specCompliant=StringHelper.isNotEmpty(info.getAttributeName()) && (info.getAttributeName().startsWith("key") || info.getAttributeName().startsWith("value"));
    if (!specCompliant) {
      log.nonCompliantMapConversion(collection.getRole());
    }
  }
  if (StringHelper.isEmpty(info.getAttributeName())) {
    if (canElementBeConverted && canKeyBeConverted) {
      throw new IllegalStateException("@Convert placed on Map attribute [" + collection.getRole() + "] must define attributeName of 'key' or 'value'");
    }
 else     if (canKeyBeConverted) {
      keyAttributeConversionInfoMap.put("",info);
    }
 else     if (canElementBeConverted) {
      elementAttributeConversionInfoMap.put("",info);
    }
  }
 else {
    final String keyPath=removePrefix(info.getAttributeName(),"key");
    final String elementPath=removePrefix(info.getAttributeName(),"value");
    if (canElementBeConverted && canKeyBeConverted && keyPath == null && elementPath == null) {
      throw new IllegalStateException("@Convert placed on Map attribute [" + collection.getRole() + "] must define attributeName of 'key' or 'value'");
    }
    if (keyPath != null) {
      keyAttributeConversionInfoMap.put(keyPath,info);
    }
 else     if (elementPath != null) {
      elementAttributeConversionInfoMap.put(elementPath,info);
    }
  }
}
