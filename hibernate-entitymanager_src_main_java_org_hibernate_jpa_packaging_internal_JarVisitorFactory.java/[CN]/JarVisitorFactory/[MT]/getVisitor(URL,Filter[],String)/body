{
  String protocol=jarUrl.getProtocol();
  if ("jar".equals(protocol)) {
    return new JarProtocolVisitor(jarUrl,filters,entry);
  }
 else   if (StringHelper.isEmpty(protocol) || "file".equals(protocol) || "vfszip".equals(protocol)|| "vfsfile".equals(protocol)) {
    File file;
    try {
      final String filePart=jarUrl.getFile();
      if (filePart != null && filePart.indexOf(' ') != -1) {
        file=new File(jarUrl.getFile());
      }
 else {
        file=new File(jarUrl.toURI().getSchemeSpecificPart());
      }
    }
 catch (    URISyntaxException e) {
      throw new IllegalArgumentException("Unable to visit JAR " + jarUrl + ". Cause: "+ e.getMessage(),e);
    }
    if (file.isDirectory()) {
      return new ExplodedJarVisitor(jarUrl,filters,entry);
    }
 else {
      return new FileZippedJarVisitor(jarUrl,filters,entry);
    }
  }
 else {
    return new InputStreamZippedJarVisitor(jarUrl,filters,entry);
  }
}
