{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Organization ifa=new Organization("IFA");
  Organization jboss=new Organization("JBoss");
  Person gavin=new Person("Gavin");
  Employment emp=new Employment(gavin,jboss,"AU");
  Serializable orgId=s.save(jboss);
  s.save(ifa);
  s.save(gavin);
  s.save(emp);
  t.commit();
  t=s.beginTransaction();
  Person christian=new Person("Christian");
  s.save(christian);
  Employment emp2=new Employment(christian,jboss,"EU");
  s.save(emp2);
  t.commit();
  s.close();
  sessionFactory().getCache().evictEntityRegion(Organization.class);
  sessionFactory().getCache().evictEntityRegion(Person.class);
  sessionFactory().getCache().evictEntityRegion(Employment.class);
  s=openSession();
  t=s.beginTransaction();
  jboss=(Organization)s.get(Organization.class,orgId);
  assertEquals(jboss.getEmployments().size(),2);
  assertEquals(jboss.getName(),"JBOSS");
  emp=(Employment)jboss.getEmployments().iterator().next();
  gavin=emp.getEmployee();
  assertEquals(gavin.getName(),"GAVIN");
  assertEquals(s.getCurrentLockMode(gavin),LockMode.PESSIMISTIC_WRITE);
  emp.setEndDate(new Date());
  Employment emp3=new Employment(gavin,jboss,"US");
  s.save(emp3);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  Iterator itr=s.getNamedQuery("allOrganizationsWithEmployees").list().iterator();
  assertTrue(itr.hasNext());
  Organization o=(Organization)itr.next();
  assertEquals(o.getEmployments().size(),3);
  Iterator itr2=o.getEmployments().iterator();
  while (itr2.hasNext()) {
    Employment e=(Employment)itr2.next();
    s.delete(e);
  }
  itr2=o.getEmployments().iterator();
  while (itr2.hasNext()) {
    Employment e=(Employment)itr2.next();
    s.delete(e.getEmployee());
  }
  s.delete(o);
  assertFalse(itr.hasNext());
  s.delete(ifa);
  t.commit();
  s.close();
}
