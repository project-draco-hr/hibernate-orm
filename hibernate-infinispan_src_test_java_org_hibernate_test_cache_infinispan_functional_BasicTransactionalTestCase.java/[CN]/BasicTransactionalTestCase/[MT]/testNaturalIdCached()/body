{
  saveSomeCitizens();
  BasicTransactionalTestCase.this.cleanupCache();
  withTx(tm,new Callable<Void>(){
    @Override public Void call() throws Exception {
      Session s=openSession();
      Transaction tx=s.beginTransaction();
      State france=BasicTransactionalTestCase.this.getState(s,"Ile de France");
      Criteria criteria=s.createCriteria(Citizen.class);
      criteria.add(Restrictions.naturalId().set("ssn","1234").set("state",france));
      criteria.setCacheable(true);
      Statistics stats=sessionFactory().getStatistics();
      stats.setStatisticsEnabled(true);
      stats.clear();
      assertEquals("Cache hits should be empty",0,stats.getNaturalIdCacheHitCount());
      List results=criteria.list();
      assertEquals(1,results.size());
      assertEquals("NaturalId Cache Hits",0,stats.getNaturalIdCacheHitCount());
      assertEquals("NaturalId Cache Misses",1,stats.getNaturalIdCacheMissCount());
      assertEquals("NaturalId Cache Puts",1,stats.getNaturalIdCachePutCount());
      assertEquals("NaturalId Cache Queries",1,stats.getNaturalIdQueryExecutionCount());
      criteria.list();
      assertEquals("NaturalId Cache Hits",0,stats.getNaturalIdCacheHitCount());
      assertEquals("NaturalId Cache Misses",1,stats.getNaturalIdCacheMissCount());
      assertEquals("NaturalId Cache Puts",1,stats.getNaturalIdCachePutCount());
      assertEquals("NaturalId Cache Queries",1,stats.getNaturalIdQueryExecutionCount());
      tx.rollback();
      s.close();
      return null;
    }
  }
);
}
