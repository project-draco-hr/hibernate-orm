{
  Statistics stats=sessionFactory().getStatistics();
  stats.clear();
  Item item=new Item("chris","Chris's Item");
  beginTx();
  try {
    Session s=openSession();
    s.getTransaction().begin();
    s.persist(item);
    s.getTransaction().commit();
    s.close();
  }
 catch (  Exception e) {
    setRollbackOnlyTx(e);
  }
 finally {
    commitOrRollbackTx();
  }
  log.info("Entry persisted, let's load and delete it.");
  beginTx();
  try {
    Session s=openSession();
    Item found=(Item)s.load(Item.class,item.getId());
    log.info(stats.toString());
    assertEquals(item.getDescription(),found.getDescription());
    assertEquals(0,stats.getSecondLevelCacheMissCount());
    assertEquals(1,stats.getSecondLevelCacheHitCount());
    s.delete(found);
    s.close();
  }
 catch (  Exception e) {
    setRollbackOnlyTx(e);
  }
 finally {
    commitOrRollbackTx();
  }
}
