{
  final Statistics stats=sessionFactory().getStatistics();
  stats.clear();
  final Item item=new Item("chris","Chris's Item");
  withTx(tm,new Callable<Void>(){
    @Override public Void call() throws Exception {
      Session s=openSession();
      s.getTransaction().begin();
      s.persist(item);
      s.getTransaction().commit();
      s.close();
      return null;
    }
  }
);
  log.info("Entry persisted, let's load and delete it.");
  withTx(tm,new Callable<Void>(){
    @Override public Void call() throws Exception {
      Session s=openSession();
      Item found=(Item)s.load(Item.class,item.getId());
      log.info(stats.toString());
      assertEquals(item.getDescription(),found.getDescription());
      assertEquals(0,stats.getSecondLevelCacheMissCount());
      assertEquals(1,stats.getSecondLevelCacheHitCount());
      s.delete(found);
      s.close();
      return null;
    }
  }
);
}
