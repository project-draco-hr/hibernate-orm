{
  Statistics stats=sessionFactory().getStatistics();
  stats.clear();
  SecondLevelCacheStatistics slcs=stats.getSecondLevelCacheStatistics(Item.class.getName());
  sessionFactory().getCache().evictEntityRegion(Item.class.getName());
  assertEquals(0,slcs.getPutCount());
  assertEquals(0,slcs.getElementCountInMemory());
  assertEquals(0,slcs.getEntries().size());
  Session s=null;
  Transaction t=null;
  Item i=null;
  beginTx();
  try {
    s=openSession();
    t=s.beginTransaction();
    i=new Item();
    i.setName("widget");
    i.setDescription("A really top-quality, full-featured widget.");
    s.persist(i);
    t.commit();
    s.close();
  }
 catch (  Exception e) {
    setRollbackOnlyTx(e);
  }
 finally {
    commitOrRollbackTx();
  }
  assertEquals(1,slcs.getPutCount());
  assertEquals(1,slcs.getElementCountInMemory());
  assertEquals(1,slcs.getEntries().size());
  beginTx();
  try {
    s=openSession();
    t=s.beginTransaction();
    i=(Item)s.get(Item.class,i.getId());
    assertEquals(slcs.getHitCount(),1);
    assertEquals(slcs.getMissCount(),0);
    i.setDescription("A bog standard item");
    t.commit();
    s.close();
  }
 catch (  Exception e) {
    setRollbackOnlyTx(e);
  }
 finally {
    commitOrRollbackTx();
  }
  assertEquals(slcs.getPutCount(),2);
  CacheEntry entry=(CacheEntry)slcs.getEntries().get(i.getId());
  Serializable[] ser=entry.getDisassembledState();
  assertTrue(ser[0].equals("widget"));
  assertTrue(ser[1].equals("A bog standard item"));
  beginTx();
  try {
    s=openSession();
    t=s.beginTransaction();
    s.delete(i);
    t.commit();
    s.close();
  }
 catch (  Exception e) {
    setRollbackOnlyTx(e);
  }
 finally {
    commitOrRollbackTx();
  }
}
