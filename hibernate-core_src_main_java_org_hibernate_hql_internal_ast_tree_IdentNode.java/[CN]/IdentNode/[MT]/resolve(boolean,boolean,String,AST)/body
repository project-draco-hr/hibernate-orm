{
  if (!isResolved()) {
    if (getWalker().getCurrentFromClause().isFromElementAlias(getText())) {
      FromElement fromElement=getWalker().getCurrentFromClause().getFromElement(getText());
      if (fromElement.getQueryableCollection() != null && fromElement.getQueryableCollection().getElementType().isComponentType()) {
        if (getWalker().isInSelect()) {
          setFromElement(fromElement);
          super.setDataType(fromElement.getQueryableCollection().getElementType());
          this.columns=resolveColumns(fromElement.getQueryableCollection());
          initText(getColumns());
          setFirstChild(null);
        }
 else {
          resolveAsAlias();
        }
      }
 else       if (resolveAsAlias()) {
        setResolved();
      }
    }
 else     if (getColumns() != null && (getWalker().getAST() instanceof AbstractMapComponentNode || getWalker().getAST() instanceof IndexNode) && getWalker().getCurrentFromClause().isFromElementAlias(getOriginalText())) {
      setText(getOriginalText());
      if (resolveAsAlias()) {
        setResolved();
      }
    }
 else     if (parent != null && parent.getType() == SqlTokenTypes.DOT) {
      DotNode dot=(DotNode)parent;
      if (parent.getFirstChild() == this) {
        if (resolveAsNakedComponentPropertyRefLHS(dot)) {
          setResolved();
        }
      }
 else {
        if (resolveAsNakedComponentPropertyRefRHS(dot)) {
          setResolved();
        }
      }
    }
 else {
      DereferenceType result=resolveAsNakedPropertyRef();
      if (result == DereferenceType.PROPERTY_REF) {
        setResolved();
      }
 else       if (result == DereferenceType.COMPONENT_REF) {
        return;
      }
    }
    if (!isResolved()) {
      try {
        getWalker().getLiteralProcessor().processConstant(this,false);
      }
 catch (      Throwable ignore) {
      }
    }
  }
}
