{
  super();
  registerColumnType(Types.BIT,"smallint");
  registerColumnType(Types.BIGINT,"bigint");
  registerColumnType(Types.SMALLINT,"smallint");
  registerColumnType(Types.TINYINT,"smallint");
  registerColumnType(Types.INTEGER,"integer");
  registerColumnType(Types.CHAR,"char(1)");
  registerColumnType(Types.VARCHAR,"varchar($l)");
  registerColumnType(Types.FLOAT,"float");
  registerColumnType(Types.DOUBLE,"double");
  registerColumnType(Types.DATE,"date");
  registerColumnType(Types.TIME,"time");
  registerColumnType(Types.TIMESTAMP,"timestamp");
  registerColumnType(Types.VARBINARY,"varchar($l) for bit data");
  registerColumnType(Types.NUMERIC,"numeric($p,$s)");
  registerColumnType(Types.BLOB,"blob($l)");
  registerColumnType(Types.CLOB,"clob($l)");
  registerColumnType(Types.LONGVARCHAR,"long varchar");
  registerColumnType(Types.LONGVARBINARY,"long varchar for bit data");
  registerColumnType(Types.BINARY,"varchar($l) for bit data");
  registerColumnType(Types.BINARY,254,"char($l) for bit data");
  registerColumnType(Types.BOOLEAN,"smallint");
  registerFunction("avg",new AvgWithArgumentCastFunction("double"));
  registerFunction("abs",new StandardSQLFunction("abs"));
  registerFunction("absval",new StandardSQLFunction("absval"));
  registerFunction("sign",new StandardSQLFunction("sign",StandardBasicTypes.INTEGER));
  registerFunction("ceiling",new StandardSQLFunction("ceiling"));
  registerFunction("ceil",new StandardSQLFunction("ceil"));
  registerFunction("floor",new StandardSQLFunction("floor"));
  registerFunction("round",new StandardSQLFunction("round"));
  registerFunction("acos",new StandardSQLFunction("acos",StandardBasicTypes.DOUBLE));
  registerFunction("asin",new StandardSQLFunction("asin",StandardBasicTypes.DOUBLE));
  registerFunction("atan",new StandardSQLFunction("atan",StandardBasicTypes.DOUBLE));
  registerFunction("cos",new StandardSQLFunction("cos",StandardBasicTypes.DOUBLE));
  registerFunction("cot",new StandardSQLFunction("cot",StandardBasicTypes.DOUBLE));
  registerFunction("degrees",new StandardSQLFunction("degrees",StandardBasicTypes.DOUBLE));
  registerFunction("exp",new StandardSQLFunction("exp",StandardBasicTypes.DOUBLE));
  registerFunction("float",new StandardSQLFunction("float",StandardBasicTypes.DOUBLE));
  registerFunction("hex",new StandardSQLFunction("hex",StandardBasicTypes.STRING));
  registerFunction("ln",new StandardSQLFunction("ln",StandardBasicTypes.DOUBLE));
  registerFunction("log",new StandardSQLFunction("log",StandardBasicTypes.DOUBLE));
  registerFunction("log10",new StandardSQLFunction("log10",StandardBasicTypes.DOUBLE));
  registerFunction("radians",new StandardSQLFunction("radians",StandardBasicTypes.DOUBLE));
  registerFunction("rand",new NoArgSQLFunction("rand",StandardBasicTypes.DOUBLE));
  registerFunction("sin",new StandardSQLFunction("sin",StandardBasicTypes.DOUBLE));
  registerFunction("soundex",new StandardSQLFunction("soundex",StandardBasicTypes.STRING));
  registerFunction("sqrt",new StandardSQLFunction("sqrt",StandardBasicTypes.DOUBLE));
  registerFunction("stddev",new StandardSQLFunction("stddev",StandardBasicTypes.DOUBLE));
  registerFunction("tan",new StandardSQLFunction("tan",StandardBasicTypes.DOUBLE));
  registerFunction("variance",new StandardSQLFunction("variance",StandardBasicTypes.DOUBLE));
  registerFunction("julian_day",new StandardSQLFunction("julian_day",StandardBasicTypes.INTEGER));
  registerFunction("microsecond",new StandardSQLFunction("microsecond",StandardBasicTypes.INTEGER));
  registerFunction("midnight_seconds",new StandardSQLFunction("midnight_seconds",StandardBasicTypes.INTEGER));
  registerFunction("minute",new StandardSQLFunction("minute",StandardBasicTypes.INTEGER));
  registerFunction("month",new StandardSQLFunction("month",StandardBasicTypes.INTEGER));
  registerFunction("monthname",new StandardSQLFunction("monthname",StandardBasicTypes.STRING));
  registerFunction("quarter",new StandardSQLFunction("quarter",StandardBasicTypes.INTEGER));
  registerFunction("hour",new StandardSQLFunction("hour",StandardBasicTypes.INTEGER));
  registerFunction("second",new StandardSQLFunction("second",StandardBasicTypes.INTEGER));
  registerFunction("current_date",new NoArgSQLFunction("current date",StandardBasicTypes.DATE,false));
  registerFunction("date",new StandardSQLFunction("date",StandardBasicTypes.DATE));
  registerFunction("day",new StandardSQLFunction("day",StandardBasicTypes.INTEGER));
  registerFunction("dayname",new StandardSQLFunction("dayname",StandardBasicTypes.STRING));
  registerFunction("dayofweek",new StandardSQLFunction("dayofweek",StandardBasicTypes.INTEGER));
  registerFunction("dayofweek_iso",new StandardSQLFunction("dayofweek_iso",StandardBasicTypes.INTEGER));
  registerFunction("dayofyear",new StandardSQLFunction("dayofyear",StandardBasicTypes.INTEGER));
  registerFunction("days",new StandardSQLFunction("days",StandardBasicTypes.LONG));
  registerFunction("current_time",new NoArgSQLFunction("current time",StandardBasicTypes.TIME,false));
  registerFunction("time",new StandardSQLFunction("time",StandardBasicTypes.TIME));
  registerFunction("current_timestamp",new NoArgSQLFunction("current timestamp",StandardBasicTypes.TIMESTAMP,false));
  registerFunction("timestamp",new StandardSQLFunction("timestamp",StandardBasicTypes.TIMESTAMP));
  registerFunction("timestamp_iso",new StandardSQLFunction("timestamp_iso",StandardBasicTypes.TIMESTAMP));
  registerFunction("week",new StandardSQLFunction("week",StandardBasicTypes.INTEGER));
  registerFunction("week_iso",new StandardSQLFunction("week_iso",StandardBasicTypes.INTEGER));
  registerFunction("year",new StandardSQLFunction("year",StandardBasicTypes.INTEGER));
  registerFunction("double",new StandardSQLFunction("double",StandardBasicTypes.DOUBLE));
  registerFunction("varchar",new StandardSQLFunction("varchar",StandardBasicTypes.STRING));
  registerFunction("real",new StandardSQLFunction("real",StandardBasicTypes.FLOAT));
  registerFunction("bigint",new StandardSQLFunction("bigint",StandardBasicTypes.LONG));
  registerFunction("char",new StandardSQLFunction("char",StandardBasicTypes.CHARACTER));
  registerFunction("integer",new StandardSQLFunction("integer",StandardBasicTypes.INTEGER));
  registerFunction("smallint",new StandardSQLFunction("smallint",StandardBasicTypes.SHORT));
  registerFunction("digits",new StandardSQLFunction("digits",StandardBasicTypes.STRING));
  registerFunction("chr",new StandardSQLFunction("chr",StandardBasicTypes.CHARACTER));
  registerFunction("upper",new StandardSQLFunction("upper"));
  registerFunction("lower",new StandardSQLFunction("lower"));
  registerFunction("ucase",new StandardSQLFunction("ucase"));
  registerFunction("lcase",new StandardSQLFunction("lcase"));
  registerFunction("ltrim",new StandardSQLFunction("ltrim"));
  registerFunction("rtrim",new StandardSQLFunction("rtrim"));
  registerFunction("substr",new StandardSQLFunction("substr",StandardBasicTypes.STRING));
  registerFunction("posstr",new StandardSQLFunction("posstr",StandardBasicTypes.INTEGER));
  registerFunction("substring",new StandardSQLFunction("substr",StandardBasicTypes.STRING));
  registerFunction("bit_length",new SQLFunctionTemplate(StandardBasicTypes.INTEGER,"length(?1)*8"));
  registerFunction("trim",new AnsiTrimEmulationFunction());
  registerFunction("concat",new VarArgsSQLFunction(StandardBasicTypes.STRING,"","||",""));
  registerFunction("str",new SQLFunctionTemplate(StandardBasicTypes.STRING,"rtrim(char(?1))"));
  registerKeyword("current");
  registerKeyword("date");
  registerKeyword("time");
  registerKeyword("timestamp");
  registerKeyword("fetch");
  registerKeyword("first");
  registerKeyword("rows");
  registerKeyword("only");
  getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE,NO_BATCH);
}
