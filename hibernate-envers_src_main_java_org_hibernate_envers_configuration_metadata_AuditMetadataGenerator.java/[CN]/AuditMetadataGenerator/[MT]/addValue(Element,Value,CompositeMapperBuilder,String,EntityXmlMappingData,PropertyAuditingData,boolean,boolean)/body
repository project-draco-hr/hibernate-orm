{
  Type type=value.getType();
  if (firstPass) {
    if (basicMetadataGenerator.addBasic(parent,propertyAuditingData,value,currentMapper,insertable,false)) {
      return;
    }
  }
  if (type instanceof ComponentType) {
    componentMetadataGenerator.addComponent(parent,propertyAuditingData,value,currentMapper,entityName,xmlMappingData,firstPass);
  }
 else   if (type instanceof ManyToOneType) {
    if (!firstPass) {
      toOneRelationMetadataGenerator.addToOne(parent,propertyAuditingData,value,currentMapper,entityName,insertable);
    }
  }
 else   if (type instanceof OneToOneType) {
    if (!firstPass) {
      OneToOne oneToOne=(OneToOne)value;
      if (oneToOne.getReferencedPropertyName() != null) {
        toOneRelationMetadataGenerator.addOneToOneNotOwning(propertyAuditingData,value,currentMapper,entityName);
      }
 else {
        toOneRelationMetadataGenerator.addOneToOnePrimaryKeyJoinColumn(propertyAuditingData,value,currentMapper,entityName,insertable);
      }
    }
  }
 else   if (type instanceof CollectionType) {
    if (!firstPass) {
      CollectionMetadataGenerator collectionMetadataGenerator=new CollectionMetadataGenerator(this,(Collection)value,currentMapper,entityName,xmlMappingData,propertyAuditingData);
      collectionMetadataGenerator.addCollection();
    }
  }
 else {
    if (firstPass) {
      throwUnsupportedTypeException(type,entityName,propertyAuditingData.getName());
    }
  }
}
