{
  if (log.isTraceEnabled()) {
    log.trace("attempting to resolve: " + MessageHelper.infoString(persister,event.getEntityId(),event.getSession().getFactory()));
  }
  Object entity=loadFromSessionCache(event,keyToLoad,options);
  if (entity == REMOVED_ENTITY_MARKER) {
    log.debug("load request found matching entity in context, but it is scheduled for removal; returning null");
    return null;
  }
  if (entity == INCONSISTENT_RTN_CLASS_MARKER) {
    log.debug("load request found matching entity in context, but the matched entity was of an inconsistent return type; returning null");
    return null;
  }
  if (entity != null) {
    if (log.isTraceEnabled()) {
      log.trace("resolved object in session cache: " + MessageHelper.infoString(persister,event.getEntityId(),event.getSession().getFactory()));
    }
    return entity;
  }
  entity=loadFromSecondLevelCache(event,persister,options);
  if (entity != null) {
    if (log.isTraceEnabled()) {
      log.trace("resolved object in second-level cache: " + MessageHelper.infoString(persister,event.getEntityId(),event.getSession().getFactory()));
    }
    return entity;
  }
  if (log.isTraceEnabled()) {
    log.trace("object not resolved in any cache: " + MessageHelper.infoString(persister,event.getEntityId(),event.getSession().getFactory()));
  }
  return loadFromDatasource(event,persister,keyToLoad,options);
}
