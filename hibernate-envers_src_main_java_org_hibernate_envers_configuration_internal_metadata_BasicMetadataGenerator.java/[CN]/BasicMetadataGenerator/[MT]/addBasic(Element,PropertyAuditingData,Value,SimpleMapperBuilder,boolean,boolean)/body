{
  final Type type=value.getType();
  if (type instanceof BasicType || type instanceof SerializableToBlobType || "org.hibernate.type.PrimitiveByteArrayBlobType".equals(type.getClass().getName())) {
    if (parent != null) {
      final boolean addNestedType=(value instanceof SimpleValue) && ((SimpleValue)value).getTypeParameters() != null;
      String typeName=type.getName();
      if (typeName == null) {
        typeName=type.getClass().getName();
      }
      final Element propMapping=MetadataTools.addProperty(parent,propertyAuditingData.getName(),addNestedType ? null : typeName,propertyAuditingData.isForceInsertable() || insertable,key);
      MetadataTools.addColumns(propMapping,value.getColumnIterator());
      if (addNestedType) {
        final Properties typeParameters=((SimpleValue)value).getTypeParameters();
        final Element typeMapping=propMapping.addElement("type");
        typeMapping.addAttribute("name",typeName);
        if ("org.hibernate.type.EnumType".equals(typeName)) {
          mapEnumerationType(typeMapping,type,typeParameters);
        }
 else {
          for (          Object object : typeParameters.keySet()) {
            final String keyType=(String)object;
            final String property=typeParameters.getProperty(keyType);
            if (property != null) {
              typeMapping.addElement("param").addAttribute("name",keyType).setText(property);
            }
          }
        }
      }
    }
    if (mapper != null) {
      mapper.add(propertyAuditingData.getPropertyData());
    }
  }
 else {
    return false;
  }
  return true;
}
