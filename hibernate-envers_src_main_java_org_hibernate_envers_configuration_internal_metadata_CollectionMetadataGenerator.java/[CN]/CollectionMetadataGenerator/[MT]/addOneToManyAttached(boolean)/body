{
  LOG.debugf("Adding audit mapping for property %s.%s: one-to-many collection, using a join column on the referenced entity",referencingEntityName,propertyName);
  final String mappedBy=getMappedBy(propertyValue);
  final IdMappingData referencedIdMapping=mainGenerator.getReferencedIdMappingData(referencingEntityName,referencedEntityName,propertyAuditingData,false);
  final IdMappingData referencingIdMapping=referencingEntityConfiguration.getIdMappingData();
  final MiddleIdData referencingIdData=createMiddleIdData(referencingIdMapping,mappedBy + "_",referencingEntityName);
  final MiddleIdData referencedIdData=createMiddleIdData(referencedIdMapping,null,referencedEntityName);
  final MiddleComponentData elementComponentData=new MiddleComponentData(new MiddleRelatedComponentMapper(referencedIdData),0);
  MiddleComponentData indexComponentData=addIndex(null,null);
  final RelationQueryGenerator queryGenerator=new OneAuditEntityQueryGenerator(mainGenerator.getGlobalCfg(),mainGenerator.getVerEntCfg(),mainGenerator.getAuditStrategy(),referencingIdData,referencedEntityName,referencedIdData,isEmbeddableElementType());
  final CommonCollectionMapperData commonCollectionMapperData=new CommonCollectionMapperData(mainGenerator.getVerEntCfg(),referencedEntityName,propertyAuditingData.getPropertyData(),referencingIdData,queryGenerator);
  PropertyMapper fakeBidirectionalRelationMapper;
  PropertyMapper fakeBidirectionalRelationIndexMapper;
  if (fakeOneToManyBidirectional) {
    final String auditMappedBy=propertyAuditingData.getAuditMappedBy();
    final IdMapper relMapper=referencingIdMapping.getIdMapper().prefixMappedProperties(MappingTools.createToOneRelationPrefix(auditMappedBy));
    fakeBidirectionalRelationMapper=new ToOneIdMapper(relMapper,new PropertyData(auditMappedBy,null,null,null),referencingEntityName,false);
    if (propertyAuditingData.getPositionMappedBy() != null) {
      final String positionMappedBy=propertyAuditingData.getPositionMappedBy();
      fakeBidirectionalRelationIndexMapper=new SinglePropertyMapper(new PropertyData(positionMappedBy,null,null,null));
      indexComponentData=new MiddleComponentData(new MiddleStraightComponentMapper(positionMappedBy),0);
    }
 else {
      fakeBidirectionalRelationIndexMapper=null;
    }
  }
 else {
    fakeBidirectionalRelationMapper=null;
    fakeBidirectionalRelationIndexMapper=null;
  }
  addMapper(commonCollectionMapperData,elementComponentData,indexComponentData);
  referencingEntityConfiguration.addToManyNotOwningRelation(propertyName,mappedBy,referencedEntityName,referencingIdData.getPrefixedMapper(),fakeBidirectionalRelationMapper,fakeBidirectionalRelationIndexMapper);
}
