{
  Session s=getFactory().openSession();
  s.beginTransaction();
  Child loadedChild=s.load(Child.class,lastChildID);
  Object parentByReflection=EnhancerTestUtils.getFieldByReflection(loadedChild,"parent");
  Assert.assertNull("Lazy field 'parent' is initialized",parentByReflection);
  Assert.assertFalse(loadedChild instanceof HibernateProxy);
  Parent loadedParent=loadedChild.getParent();
  EnhancerTestUtils.checkDirtyTracking(loadedChild);
  parentByReflection=EnhancerTestUtils.getFieldByReflection(loadedChild,"parent");
  Object childrenByReflection=EnhancerTestUtils.getFieldByReflection(loadedParent,"children");
  Assert.assertNotNull("Lazy field 'parent' is not loaded",parentByReflection);
  Assert.assertNull("Lazy field 'children' is initialized",childrenByReflection);
  Assert.assertFalse(loadedParent instanceof HibernateProxy);
  Assert.assertTrue(parentID.equals(loadedParent.id));
  Collection<Child> loadedChildren=loadedParent.getChildren();
  EnhancerTestUtils.checkDirtyTracking(loadedChild);
  EnhancerTestUtils.checkDirtyTracking(loadedParent);
  childrenByReflection=EnhancerTestUtils.getFieldByReflection(loadedParent,"children");
  Assert.assertNotNull("Lazy field 'children' is not loaded",childrenByReflection);
  Assert.assertFalse(loadedChildren instanceof HibernateProxy);
  Assert.assertEquals(CHILDREN_SIZE,loadedChildren.size());
  Assert.assertTrue(loadedChildren.contains(loadedChild));
  s.getTransaction().commit();
  s.close();
}
