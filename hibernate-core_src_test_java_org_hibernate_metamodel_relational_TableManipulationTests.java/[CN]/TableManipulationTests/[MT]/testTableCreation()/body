{
  Schema schema=new Schema(null,null);
  Table table=schema.createTable(Identifier.toIdentifier("my_table"));
  assertNull(table.getSchema().getName().getSchema());
  assertNull(table.getSchema().getName().getCatalog());
  assertEquals("my_table",table.getTableName().toString());
  assertEquals("my_table",table.getExportIdentifier());
  assertNull(table.getPrimaryKey().getName());
  assertFalse(table.values().iterator().hasNext());
  Column idColumn=table.getOrCreateColumn("id");
  idColumn.setDatatype(INTEGER);
  idColumn.setSize(Size.precision(18,0));
  table.getPrimaryKey().addColumn(idColumn);
  table.getPrimaryKey().setName("my_table_pk");
  assertEquals("my_table_pk",table.getPrimaryKey().getName());
  assertEquals("my_table.PK",table.getPrimaryKey().getExportIdentifier());
  Column col_1=table.getOrCreateColumn("col_1");
  col_1.setDatatype(VARCHAR);
  col_1.setSize(Size.length(512));
  for (  Value value : table.values()) {
    assertTrue(Column.class.isInstance(value));
    Column column=(Column)value;
    if (column.getName().equals("id")) {
      assertEquals(INTEGER,column.getDatatype());
      assertEquals(18,column.getSize().getPrecision());
      assertEquals(0,column.getSize().getScale());
      assertEquals(-1,column.getSize().getLength());
      assertNull(column.getSize().getLobMultiplier());
    }
 else {
      assertEquals("col_1",column.getName());
      assertEquals(VARCHAR,column.getDatatype());
      assertEquals(-1,column.getSize().getPrecision());
      assertEquals(-1,column.getSize().getScale());
      assertEquals(512,column.getSize().getLength());
      assertNull(column.getSize().getLobMultiplier());
    }
  }
}
