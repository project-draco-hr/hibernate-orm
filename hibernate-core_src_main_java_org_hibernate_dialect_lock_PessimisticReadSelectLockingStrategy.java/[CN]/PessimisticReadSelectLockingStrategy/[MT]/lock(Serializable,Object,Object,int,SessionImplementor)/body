{
  final String sql=determineSql(timeout);
  SessionFactoryImplementor factory=session.getFactory();
  try {
    try {
      PreparedStatement st=session.getTransactionCoordinator().getJdbcCoordinator().getStatementPreparer().prepareStatement(sql);
      try {
        getLockable().getIdentifierType().nullSafeSet(st,id,1,session);
        if (getLockable().isVersioned()) {
          getLockable().getVersionType().nullSafeSet(st,version,getLockable().getIdentifierType().getColumnSpan(factory) + 1,session);
        }
        ResultSet rs=session.getTransactionCoordinator().getJdbcCoordinator().getResultSetReturn().extract(st);
        try {
          if (!rs.next()) {
            if (factory.getStatistics().isStatisticsEnabled()) {
              factory.getStatisticsImplementor().optimisticFailure(getLockable().getEntityName());
            }
            throw new StaleObjectStateException(getLockable().getEntityName(),id);
          }
        }
  finally {
          session.getTransactionCoordinator().getJdbcCoordinator().release(rs);
        }
      }
  finally {
        session.getTransactionCoordinator().getJdbcCoordinator().release(st);
      }
    }
 catch (    SQLException e) {
      throw session.getFactory().getSQLExceptionHelper().convert(e,"could not lock: " + MessageHelper.infoString(getLockable(),id,session.getFactory()),sql);
    }
  }
 catch (  JDBCException e) {
    throw new PessimisticEntityLockException(object,"could not obtain pessimistic lock",e);
  }
}
