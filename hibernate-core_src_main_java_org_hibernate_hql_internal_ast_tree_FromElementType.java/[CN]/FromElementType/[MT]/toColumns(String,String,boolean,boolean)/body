{
  checkInitialized();
  PropertyMapping propertyMapping=getPropertyMapping(path);
  if (!inSelect && queryableCollection != null && CollectionProperties.isCollectionProperty(path)) {
    if (persister != propertyMapping) {
      DeprecationLogger.DEPRECATION_LOGGER.logDeprecationOfCollectionPropertiesInHql(path,fromElement.getClassAlias());
      return getCollectionPropertyReference(path).toColumns(tableAlias);
    }
  }
  if (forceAlias) {
    return propertyMapping.toColumns(tableAlias,path);
  }
  if (fromElement.getWalker().getStatementType() == HqlSqlTokenTypes.SELECT) {
    return propertyMapping.toColumns(tableAlias,path);
  }
  if (fromElement.getWalker().isSubQuery()) {
    if (isCorrelation()) {
      if (isMultiTable()) {
        return propertyMapping.toColumns(tableAlias,path);
      }
      return propertyMapping.toColumns(extractTableName(),path);
    }
    return propertyMapping.toColumns(tableAlias,path);
  }
  if (fromElement.getWalker().getCurrentTopLevelClauseType() == HqlSqlTokenTypes.SELECT) {
    return propertyMapping.toColumns(tableAlias,path);
  }
  if (isManipulationQuery() && isMultiTable() && inWhereClause()) {
    return propertyMapping.toColumns(tableAlias,path);
  }
  String[] columns=propertyMapping.toColumns(path);
  LOG.tracev("Using non-qualified column reference [{0} -> ({1})]",path,ArrayHelper.toString(columns));
  return columns;
}
