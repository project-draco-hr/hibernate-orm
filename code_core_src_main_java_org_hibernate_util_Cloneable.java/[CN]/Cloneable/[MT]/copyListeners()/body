{
  Object copy=null;
  BeanInfo beanInfo=null;
  try {
    beanInfo=Introspector.getBeanInfo(getClass(),Object.class);
    internalCheckListeners(beanInfo);
    copy=getClass().newInstance();
    PropertyDescriptor[] pds=beanInfo.getPropertyDescriptors();
    for (int i=0, max=pds.length; i < max; i++) {
      try {
        pds[i].getWriteMethod().invoke(copy,new Object[]{pds[i].getReadMethod().invoke(this,READER_METHOD_ARGS)});
      }
 catch (      Throwable t) {
        throw new HibernateException("Unable copy copy listener [" + pds[i].getName() + "]");
      }
    }
  }
 catch (  Exception t) {
    throw new HibernateException("Unable to copy listeners",t);
  }
 finally {
    if (beanInfo != null) {
      Introspector.flushFromCaches(getClass());
    }
  }
  return copy;
}
