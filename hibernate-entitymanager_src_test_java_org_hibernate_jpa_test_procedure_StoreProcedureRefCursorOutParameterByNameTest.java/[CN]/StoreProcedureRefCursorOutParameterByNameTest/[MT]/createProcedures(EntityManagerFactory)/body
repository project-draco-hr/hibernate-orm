{
  final SessionFactoryImplementor sf=emf.unwrap(SessionFactoryImplementor.class);
  final JdbcConnectionAccess connectionAccess=sf.getServiceRegistry().getService(JdbcServices.class).getBootstrapJdbcConnectionAccess();
  final Connection conn;
  try {
    conn=connectionAccess.obtainConnection();
    conn.setAutoCommit(false);
    try {
      Statement statement=conn.createStatement();
      statement.execute("CREATE OR REPLACE PROCEDURE PROC_EXAMPLE ( " + "  USER_NAME_PARAM IN VARCHAR2, CURSOR_PARAM OUT SYS_REFCURSOR ) " + "AS "+ "BEGIN "+ "  OPEN CURSOR_PARAM FOR "+ "  SELECT * FROM USERS WHERE NAME = USER_NAME_PARAM; "+ "END PROC_EXAMPLE; ");
      try {
        statement.close();
      }
 catch (      SQLException ignore) {
        fail();
      }
    }
  finally {
      try {
        conn.commit();
      }
 catch (      SQLException e) {
        System.out.println("Unable to commit transaction after creating creating procedures");
        fail();
      }
      try {
        connectionAccess.releaseConnection(conn);
      }
 catch (      SQLException ignore) {
        fail();
      }
    }
  }
 catch (  SQLException e) {
    throw new RuntimeException("Unable to create stored procedures",e);
  }
}
