{
  Container cOrig=createContainer();
  Set expectedInitializedObjects=new HashSet(Arrays.asList(cOrig,cOrig.getNoProxyInfo(),cOrig.getProxyInfo(),cOrig.getNonLazyInfo(),cOrig.getNoProxyOwner(),cOrig.getProxyOwner(),cOrig.getNonLazyOwner(),cOrig.getLazyDataPoints().iterator().next(),cOrig.getNonLazyJoinDataPoints().iterator().next(),cOrig.getNonLazySelectDataPoints().iterator().next()));
  Set expectedReadOnlyObjects=new HashSet();
  Session s=openSession();
  assertFalse(s.isDefaultReadOnly());
  Transaction t=s.beginTransaction();
  s.save(cOrig);
  checkContainer(cOrig,expectedInitializedObjects,expectedReadOnlyObjects,s);
  s.setDefaultReadOnly(true);
  assertTrue(s.isDefaultReadOnly());
  checkContainer(cOrig,expectedInitializedObjects,expectedReadOnlyObjects,s);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  assertFalse(s.isDefaultReadOnly());
  Container c=(Container)s.createQuery("from Container where id=" + cOrig.getId()).setReadOnly(true).uniqueResult();
  expectedInitializedObjects=new HashSet(Arrays.asList(c,c.getNonLazyInfo(),c.getNoProxyOwner(),c.getProxyOwner(),c.getNonLazyOwner(),c.getNonLazyJoinDataPoints().iterator().next(),c.getNonLazySelectDataPoints().iterator().next()));
  expectedReadOnlyObjects=new HashSet(Arrays.asList(c,c.getNoProxyInfo(),c.getProxyInfo(),c.getNonLazyInfo(),c.getNoProxyOwner(),c.getProxyOwner(),c.getNonLazyOwner(),c.getNonLazyJoinDataPoints().iterator().next(),c.getNonLazySelectDataPoints().iterator().next()));
  checkContainer(c,expectedInitializedObjects,expectedReadOnlyObjects,s);
  assertFalse(Hibernate.isInitialized(c.getNoProxyInfo()));
  Hibernate.initialize(c.getNoProxyInfo());
  expectedInitializedObjects.add(c.getNoProxyInfo());
  checkContainer(c,expectedInitializedObjects,expectedReadOnlyObjects,s);
  assertFalse(Hibernate.isInitialized(c.getProxyInfo()));
  Hibernate.initialize(c.getProxyInfo());
  expectedInitializedObjects.add(c.getProxyInfo());
  checkContainer(c,expectedInitializedObjects,expectedReadOnlyObjects,s);
  assertFalse(Hibernate.isInitialized(c.getLazyDataPoints()));
  Hibernate.initialize(c.getLazyDataPoints());
  expectedInitializedObjects.add(c.getLazyDataPoints().iterator().next());
  checkContainer(c,expectedInitializedObjects,expectedReadOnlyObjects,s);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  s.createQuery("delete from DataPoint").executeUpdate();
  s.createQuery("delete from Container").executeUpdate();
  s.createQuery("delete from Info").executeUpdate();
  s.createQuery("delete from Owner").executeUpdate();
  t.commit();
  s.close();
}
