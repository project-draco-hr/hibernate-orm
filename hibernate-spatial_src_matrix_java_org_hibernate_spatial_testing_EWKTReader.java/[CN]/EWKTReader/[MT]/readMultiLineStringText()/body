{
  ArrayList lineStrings=new ArrayList();
  String nextToken=getNextEmptyOrOpener();
  if (nextToken.equals(EMPTY)) {
  }
 else {
    LineString lineString=readLineStringText();
    lineStrings.add(lineString);
    nextToken=getNextCloserOrComma();
    while (nextToken.equals(COMMA)) {
      lineString=readLineStringText();
      lineStrings.add(lineString);
      nextToken=getNextCloserOrComma();
    }
  }
  if (this.hasM != null && this.hasM == true) {
    MLineString[] mlines=(MLineString[])lineStrings.toArray(new MLineString[lineStrings.size()]);
    return ((MGeometryFactory)geometryFactory).createMultiMLineString(mlines);
  }
 else {
    setHasM(false);
    LineString[] lines=(LineString[])lineStrings.toArray(new LineString[lineStrings.size()]);
    return geometryFactory.createMultiLineString(lines);
  }
}
