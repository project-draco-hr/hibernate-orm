{
  final XMLHibernateMapping.XMLClass.XMLId idElement=((XMLHibernateMapping.XMLClass)entitySourceInfo.getEntityElement()).getId();
  final SimpleAttributeBinding idAttributeBinding=doBasicSimpleAttributeBindingCreation(new SimpleIdentifierAttributeSource(idElement),entityBinding);
  entityBinding.getEntityIdentifier().setValueBinding(idAttributeBinding);
  final org.hibernate.metamodel.relational.Value relationalValue=idAttributeBinding.getValue();
  if (idElement.getGenerator() != null) {
    final String generatorName=idElement.getGenerator().getClazz();
    IdGenerator idGenerator=currentBindingContext.getMetadataImplementor().getIdGenerator(generatorName);
    if (idGenerator == null) {
      idGenerator=new IdGenerator(entityBinding.getEntity().getName() + generatorName,generatorName,extractParameters(idElement.getGenerator().getParam()));
    }
    entityBinding.getEntityIdentifier().setIdGenerator(idGenerator);
  }
  if (SimpleValue.class.isInstance(relationalValue)) {
    if (!Column.class.isInstance(relationalValue)) {
      throw new MappingException("Simple ID is not a column.",currentBindingContext.getOrigin());
    }
    entityBinding.getBaseTable().getPrimaryKey().addColumn(Column.class.cast(relationalValue));
  }
 else {
    for (    SimpleValue subValue : ((Tuple)relationalValue).values()) {
      if (Column.class.isInstance(subValue)) {
        entityBinding.getBaseTable().getPrimaryKey().addColumn(Column.class.cast(subValue));
      }
    }
  }
}
