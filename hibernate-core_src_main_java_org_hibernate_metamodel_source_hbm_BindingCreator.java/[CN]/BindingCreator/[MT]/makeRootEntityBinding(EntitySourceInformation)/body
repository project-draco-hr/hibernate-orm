{
  final EntityBinding entityBinding=new EntityBinding();
  entityBinding.setInheritanceType(currentInheritanceType);
  entityBinding.setRoot(true);
  final XMLHibernateMapping.XMLClass xmlClass=(XMLHibernateMapping.XMLClass)entitySourceInfo.getEntityElement();
  final String entityName=entitySourceInfo.getMappedEntityName();
  final String verbatimClassName=xmlClass.getName();
  final EntityMode entityMode=verbatimClassName == null ? EntityMode.MAP : EntityMode.POJO;
  entityBinding.setEntityMode(entityMode);
  final String className;
  if (entityMode == EntityMode.POJO) {
    className=entitySourceInfo.getSourceMappingDocument().getMappingLocalBindingContext().qualifyClassName(verbatimClassName);
  }
 else {
    className=null;
  }
  Entity entity=new Entity(entityName,className,entitySourceInfo.getSourceMappingDocument().getMappingLocalBindingContext().makeClassReference(className),null);
  entityBinding.setEntity(entity);
  performBasicEntityBind(entityBinding,entitySourceInfo);
  bindIdentifier(entityBinding,entitySourceInfo);
  entityBinding.setMutable(xmlClass.isMutable());
  entityBinding.setExplicitPolymorphism("explicit".equals(xmlClass.getPolymorphism()));
  entityBinding.setWhereFilter(xmlClass.getWhere());
  entityBinding.setRowId(xmlClass.getRowid());
  entityBinding.setOptimisticLockStyle(interpretOptimisticLockStyle(entitySourceInfo));
  entityBinding.setCaching(interpretCaching(entitySourceInfo));
  return entityBinding;
}
