{
  bindPrimaryTable(entitySourceInfo,entityBinding);
  entityBinding.setJpaEntityName(null);
  final EntityElement entityElement=entitySourceInfo.getEntityElement();
  final HbmBindingContext bindingContext=entitySourceInfo.getSourceMappingDocument().getMappingLocalBindingContext();
  final String proxy=entityElement.getProxy();
  final boolean isLazy=entityElement.isLazy() == null ? true : entityElement.isLazy();
  if (entityBinding.getEntityMode() == EntityMode.POJO) {
    if (proxy != null) {
      entityBinding.setProxyInterfaceType(bindingContext.makeClassReference(bindingContext.qualifyClassName(proxy)));
      entityBinding.setLazy(true);
    }
 else     if (isLazy) {
      entityBinding.setProxyInterfaceType(entityBinding.getEntity().getClassReferenceUnresolved());
      entityBinding.setLazy(true);
    }
  }
 else {
    entityBinding.setProxyInterfaceType(new Value(Map.class));
    entityBinding.setLazy(isLazy);
  }
  final String customTuplizerClassName=extractCustomTuplizerClassName(entityElement,entityBinding.getEntityMode());
  if (customTuplizerClassName != null) {
    entityBinding.setCustomEntityTuplizerClass(bindingContext.<EntityTuplizer>locateClassByName(customTuplizerClassName));
  }
  if (entityElement.getPersister() != null) {
    entityBinding.setCustomEntityPersisterClass(bindingContext.<EntityPersister>locateClassByName(entityElement.getPersister()));
  }
  entityBinding.setMetaAttributeContext(Helper.extractMetaAttributeContext(entityElement.getMeta(),true,bindingContext.getMetaAttributeContext()));
  entityBinding.setDynamicUpdate(entityElement.isDynamicUpdate());
  entityBinding.setDynamicInsert(entityElement.isDynamicInsert());
  entityBinding.setBatchSize(Helper.getIntValue(entityElement.getBatchSize(),0));
  entityBinding.setSelectBeforeUpdate(entityElement.isSelectBeforeUpdate());
  entityBinding.setAbstract(entityElement.isAbstract());
  if (entityElement.getLoader() != null) {
    entityBinding.setCustomLoaderName(entityElement.getLoader().getQueryRef());
  }
  final XMLSqlInsertElement sqlInsert=entityElement.getSqlInsert();
  if (sqlInsert != null) {
    entityBinding.setCustomInsert(Helper.buildCustomSql(sqlInsert));
  }
  final XMLSqlDeleteElement sqlDelete=entityElement.getSqlDelete();
  if (sqlDelete != null) {
    entityBinding.setCustomDelete(Helper.buildCustomSql(sqlDelete));
  }
  final XMLSqlUpdateElement sqlUpdate=entityElement.getSqlUpdate();
  if (sqlUpdate != null) {
    entityBinding.setCustomUpdate(Helper.buildCustomSql(sqlUpdate));
  }
  if (entityElement.getSynchronize() != null) {
    for (    XMLSynchronizeElement synchronize : entityElement.getSynchronize()) {
      entityBinding.addSynchronizedTable(synchronize.getTable());
    }
  }
}
