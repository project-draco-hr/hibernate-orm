{
  HashMap positionToAction=new HashMap();
  List nameList=new ArrayList();
  loopInsertion:   while (!insertions.isEmpty()) {
    EntityInsertAction action=(EntityInsertAction)insertions.remove(0);
    String thisEntityName=action.getEntityName();
    if (!nameList.contains(thisEntityName)) {
      ArrayList segmentedActionQueue=new ArrayList();
      segmentedActionQueue.add(action);
      nameList.add(thisEntityName);
      positionToAction.put(new Integer(nameList.indexOf(thisEntityName)),segmentedActionQueue);
    }
 else {
      int lastPos=nameList.lastIndexOf(thisEntityName);
      Object[] states=action.getState();
      for (int i=0; i < states.length; i++) {
        for (int j=0; j < nameList.size(); j++) {
          ArrayList tmpList=(ArrayList)positionToAction.get(new Integer(j));
          for (int k=0; k < tmpList.size(); k++) {
            final EntityInsertAction checkAction=(EntityInsertAction)tmpList.get(k);
            if (checkAction.getInstance() == states[i] && j > lastPos) {
              ArrayList segmentedActionQueue=new ArrayList();
              segmentedActionQueue.add(action);
              nameList.add(thisEntityName);
              positionToAction.put(new Integer(nameList.lastIndexOf(thisEntityName)),segmentedActionQueue);
              continue loopInsertion;
            }
          }
        }
      }
      ArrayList actionQueue=(ArrayList)positionToAction.get(new Integer(lastPos));
      actionQueue.add(action);
    }
  }
  for (int p=0; p < nameList.size(); p++) {
    ArrayList actionQueue=(ArrayList)positionToAction.get(new Integer(p));
    Iterator itr=actionQueue.iterator();
    while (itr.hasNext()) {
      insertions.add(itr.next());
    }
  }
}
