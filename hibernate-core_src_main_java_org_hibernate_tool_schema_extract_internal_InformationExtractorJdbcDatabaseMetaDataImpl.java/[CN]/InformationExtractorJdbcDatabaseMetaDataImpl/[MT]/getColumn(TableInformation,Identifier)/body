{
  final Identifier catalog=tableInformation.getName().getCatalogName();
  final Identifier schema=tableInformation.getName().getSchemaName();
  final String catalogFilter;
  final String schemaFilter;
  if (extractionContext.getJdbcEnvironment().getNameQualifierSupport().supportsCatalogs()) {
    if (catalog == null) {
      catalogFilter="";
    }
 else {
      catalogFilter=toMetaDataObjectName(catalog);
    }
  }
 else {
    catalogFilter=null;
  }
  if (extractionContext.getJdbcEnvironment().getNameQualifierSupport().supportsSchemas()) {
    if (schema == null) {
      schemaFilter="";
    }
 else {
      schemaFilter=toMetaDataObjectName(schema);
    }
  }
 else {
    schemaFilter=null;
  }
  final String tableFilter=toMetaDataObjectName(tableInformation.getName().getTableName());
  final String columnFilter=toMetaDataObjectName(columnIdentifier);
  try {
    ResultSet resultSet=extractionContext.getJdbcDatabaseMetaData().getColumns(catalogFilter,schemaFilter,tableFilter,columnFilter);
    try {
      if (!resultSet.next()) {
        return null;
      }
      return new ColumnInformationImpl(tableInformation,identifierHelper().toIdentifier(resultSet.getString("COLUMN_NAME")),resultSet.getInt("DATA_TYPE"),new StringTokenizer(resultSet.getString("TYPE_NAME"),"() ").nextToken(),resultSet.getInt("COLUMN_SIZE"),resultSet.getInt("DECIMAL_DIGITS"),interpretTruthValue(resultSet.getString("IS_NULLABLE")));
    }
  finally {
      resultSet.close();
    }
  }
 catch (  SQLException e) {
    throw convertSQLException(e,"Error accessing column metadata: " + tableInformation.getName().toString());
  }
}
