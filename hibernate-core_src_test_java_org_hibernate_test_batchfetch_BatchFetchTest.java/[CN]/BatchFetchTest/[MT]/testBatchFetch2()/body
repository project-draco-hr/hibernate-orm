{
  Session s=openSession();
  s.beginTransaction();
  int size=32 + 14;
  for (int i=0; i < size; i++) {
    s.save(new BatchLoadableEntity(i));
  }
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  for (int i=0; i < size; i++) {
    BatchLoadableEntity entity=(BatchLoadableEntity)s.load(BatchLoadableEntity.class,i);
    assertFalse(Hibernate.isInitialized(entity));
  }
  sessionFactory().getStatistics().clear();
  for (int i=0; i < size; i++) {
    BatchLoadableEntity entity=(BatchLoadableEntity)s.load(BatchLoadableEntity.class,i);
    Hibernate.initialize(entity);
    assertTrue(Hibernate.isInitialized(entity));
  }
  final int expectedFetchCount;
  if (sessionFactory().getSettings().getBatchFetchStyle() == BatchFetchStyle.LEGACY) {
    expectedFetchCount=3;
  }
 else   if (sessionFactory().getSettings().getBatchFetchStyle() == BatchFetchStyle.DYNAMIC) {
    expectedFetchCount=2;
  }
 else {
    expectedFetchCount=2;
  }
  assertEquals(expectedFetchCount,sessionFactory().getStatistics().getEntityStatistics(BatchLoadableEntity.class.getName()).getFetchCount());
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  s.createQuery("delete BatchLoadableEntity").executeUpdate();
  s.getTransaction().commit();
  s.close();
}
