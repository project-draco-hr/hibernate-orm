{
  return new AccessCallback(){
    @Override public IntegralDataTypeHolder getNextValue(){
      accessCounter++;
      try {
        final PreparedStatement st=session.getTransactionCoordinator().getJdbcCoordinator().getStatementPreparer().prepareStatement(sql);
        try {
          final ResultSet rs=session.getTransactionCoordinator().getJdbcCoordinator().getResultSetReturn().extract(st);
          try {
            rs.next();
            final IntegralDataTypeHolder value=IdentifierGeneratorHelper.getIntegralDataTypeHolder(numberType);
            value.initialize(rs,1);
            if (LOG.isDebugEnabled()) {
              LOG.debugf("Sequence value obtained: %s",value.makeValue());
            }
            return value;
          }
  finally {
            try {
              session.getTransactionCoordinator().getJdbcCoordinator().release(rs,st);
            }
 catch (            Throwable ignore) {
            }
          }
        }
  finally {
          session.getTransactionCoordinator().getJdbcCoordinator().release(st);
        }
      }
 catch (      SQLException sqle) {
        throw session.getFactory().getSQLExceptionHelper().convert(sqle,"could not get next sequence value",sql);
      }
    }
    @Override public String getTenantIdentifier(){
      return session.getTenantIdentifier();
    }
  }
;
}
