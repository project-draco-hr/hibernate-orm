{
  return new Helper(this).performWork(new LazyInitializationWork(){
    @Override public Object doWork(    SessionImplementor session,    boolean isTemporarySession){
      final EntityPersister persister=session.getFactory().getEntityPersister(getEntityName());
      if (isTemporarySession) {
        final Serializable id=persister.getIdentifier(target,null);
        final Object[] loadedState=null;
        final boolean existsInDb=true;
        session.getPersistenceContext().addEntity(target,Status.READ_ONLY,loadedState,session.generateEntityKey(id,persister),persister.getVersion(target),LockMode.NONE,existsInDb,persister,true,true);
      }
      final LazyPropertyInitializer initializer=(LazyPropertyInitializer)persister;
      final Object loadedValue=initializer.initializeLazyProperty(attributeName,target,session);
      initializedFields.add(attributeName);
      takeCollectionSizeSnapshot(target,attributeName,loadedValue);
      return loadedValue;
    }
    @Override public String getEntityName(){
      return entityName;
    }
    @Override public String getAttributeName(){
      return attributeName;
    }
  }
);
}
