{
  List<AnnotationValue> annotationValueList=new ArrayList<AnnotationValue>();
  MockHelper.classValue("targetEntity",oneToMany.getTargetEntity(),annotationValueList,indexBuilder.getServiceRegistry());
  MockHelper.enumValue("fetch",FETCH_TYPE,oneToMany.getFetch(),annotationValueList);
  MockHelper.stringValue("mappedBy",oneToMany.getMappedBy(),annotationValueList);
  MockHelper.booleanValue("orphanRemoval",oneToMany.isOrphanRemoval(),annotationValueList);
  MockHelper.cascadeValue("cascade",oneToMany.getCascade(),isDefaultCascadePersist(),annotationValueList);
  create(ONE_TO_MANY,getTarget(),annotationValueList);
  parserAttributeOverrides(oneToMany.getMapKeyAttributeOverride(),getTarget());
  parserMapKeyJoinColumnList(oneToMany.getMapKeyJoinColumn(),getTarget());
  parserMapKey(oneToMany.getMapKey(),getTarget());
  parserMapKeyColumn(oneToMany.getMapKeyColumn(),getTarget());
  parserMapKeyClass(oneToMany.getMapKeyClass(),getTarget());
  parserMapKeyTemporal(oneToMany.getMapKeyTemporal(),getTarget());
  parserMapKeyEnumerated(oneToMany.getMapKeyEnumerated(),getTarget());
  parserJoinColumnList(oneToMany.getJoinColumn(),getTarget());
  parserOrderColumn(oneToMany.getOrderColumn(),getTarget());
  parserJoinTable(oneToMany.getJoinTable(),getTarget());
  if (oneToMany.getOrderBy() != null) {
    create(ORDER_BY,getTarget(),MockHelper.stringValueArray("value",oneToMany.getOrderBy()));
  }
}
