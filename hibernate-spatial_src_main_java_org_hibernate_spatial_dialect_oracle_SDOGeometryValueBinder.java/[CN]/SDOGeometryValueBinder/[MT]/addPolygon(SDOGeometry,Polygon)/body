{
  int numInteriorRings=polygon.getNumInteriorRing();
  ElemInfo info=new ElemInfo(numInteriorRings + 1);
  int ordinatesPreviousOffset=0;
  if (geom.getOrdinates() != null) {
    ordinatesPreviousOffset=geom.getOrdinates().getOrdinateArray().length;
  }
  int ordinatesOffset=ordinatesPreviousOffset + 1;
  Double[] ordinates=new Double[]{};
  for (int i=0; i < info.getSize(); i++) {
    ElementType et;
    Coordinate[] coords;
    if (i == 0) {
      et=ElementType.EXTERIOR_RING_STRAIGHT_SEGMENTS;
      coords=polygon.getExteriorRing().getCoordinates();
      if (!CGAlgorithms.isCCW(coords)) {
        coords=reverseRing(coords);
      }
    }
 else {
      et=ElementType.INTERIOR_RING_STRAIGHT_SEGMENTS;
      coords=polygon.getInteriorRingN(i - 1).getCoordinates();
      if (CGAlgorithms.isCCW(coords)) {
        coords=reverseRing(coords);
      }
    }
    info.setElement(i,ordinatesOffset,et,0);
    ordinates=convertAddCoordinates(ordinates,coords,geom.getDimension(),geom.isLRSGeometry());
    ordinatesOffset=ordinatesPreviousOffset + ordinates.length + 1;
  }
  geom.addElement(info);
  geom.addOrdinates(ordinates);
}
