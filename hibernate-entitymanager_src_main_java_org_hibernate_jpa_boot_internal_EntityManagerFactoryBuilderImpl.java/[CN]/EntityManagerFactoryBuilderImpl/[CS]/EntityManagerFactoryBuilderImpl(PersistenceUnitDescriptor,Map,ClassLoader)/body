{
  LogHelper.logPersistenceUnitInformation(persistenceUnit);
  this.persistenceUnit=persistenceUnit;
  if (integrationSettings == null) {
    integrationSettings=Collections.emptyMap();
  }
  this.providedClassLoader=providedClassLoader;
  final BootstrapServiceRegistry bootstrapServiceRegistry=buildBootstrapServiceRegistry(integrationSettings);
  this.serviceRegistryBuilder=new StandardServiceRegistryBuilder(bootstrapServiceRegistry);
  this.configurationValues=mergePropertySources(persistenceUnit,integrationSettings,bootstrapServiceRegistry);
  this.serviceRegistryBuilder.applySettings(configurationValues);
  ScanResult scanResult=scan(bootstrapServiceRegistry);
  Set<String> collectedManagedClassNames=collectManagedClassNames(scanResult);
  IndexView jandexIndex=locateOrBuildJandexIndex(collectedManagedClassNames,scanResult.getPackageNames(),bootstrapServiceRegistry);
  metadataSources=prepareMetadataSources(jandexIndex,collectedManagedClassNames,scanResult,bootstrapServiceRegistry);
  withValidatorFactory(configurationValues.get(AvailableSettings.VALIDATION_FACTORY));
  final boolean useClassTransformer="true".equals(configurationValues.remove(AvailableSettings.USE_CLASS_ENHANCER));
  if (useClassTransformer) {
    persistenceUnit.pushClassTransformer(metadataSources.collectMappingClassNames());
  }
}
