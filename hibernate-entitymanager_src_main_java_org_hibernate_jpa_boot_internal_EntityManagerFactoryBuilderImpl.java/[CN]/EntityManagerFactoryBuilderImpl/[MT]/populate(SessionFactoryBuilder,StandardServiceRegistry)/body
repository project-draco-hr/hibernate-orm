{
  final StrategySelector strategySelector=ssr.getService(StrategySelector.class);
  final Object sessionFactoryInterceptorSetting=configurationValues.remove(AvailableSettings.INTERCEPTOR);
  if (sessionFactoryInterceptorSetting != null) {
    final Interceptor sessionFactoryInterceptor=strategySelector.resolveStrategy(Interceptor.class,sessionFactoryInterceptorSetting);
    sfBuilder.with(sessionFactoryInterceptor);
  }
  final Object sessionFactoryObserverSetting=configurationValues.remove(AvailableSettings.SESSION_FACTORY_OBSERVER);
  if (sessionFactoryObserverSetting != null) {
    final SessionFactoryObserver suppliedSessionFactoryObserver=strategySelector.resolveStrategy(SessionFactoryObserver.class,sessionFactoryObserverSetting);
    sfBuilder.add(suppliedSessionFactoryObserver);
  }
  sfBuilder.add(ServiceRegistryCloser.INSTANCE);
  sfBuilder.with(JpaEntityNotFoundDelegate.INSTANCE);
  if (this.validatorFactory != null) {
    sfBuilder.withValidatorFactory(validatorFactory);
  }
  if (this.cdiBeanManager != null) {
    sfBuilder.withBeanManager(cdiBeanManager);
  }
}
