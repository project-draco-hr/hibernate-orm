{
  Map<String,Class> namedStrategyImplementorMap=namedStrategyImplementorByStrategyMap.get(strategy);
  if (namedStrategyImplementorMap != null) {
    final Class registered=namedStrategyImplementorMap.get(name);
    if (registered != null) {
      return (Class<T>)registered;
    }
  }
  try {
    return classLoaderService.classForName(name);
  }
 catch (  ClassLoadingException e) {
    throw new StrategySelectionException("Unable to resolve name [" + name + "] as strategy ["+ strategy.getName()+ "]");
  }
}
