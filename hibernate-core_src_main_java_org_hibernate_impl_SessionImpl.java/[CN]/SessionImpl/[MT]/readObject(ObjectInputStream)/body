{
  log.trace("deserializing session");
  ois.defaultReadObject();
  entityNameResolver=new CoordinatingEntityNameResolver();
  boolean isRootSession=ois.readBoolean();
  connectionReleaseMode=ConnectionReleaseMode.parse((String)ois.readObject());
  entityMode=EntityMode.parse((String)ois.readObject());
  autoClear=ois.readBoolean();
  flushMode=FlushMode.parse((String)ois.readObject());
  cacheMode=CacheMode.parse((String)ois.readObject());
  flushBeforeCompletionEnabled=ois.readBoolean();
  autoCloseSessionEnabled=ois.readBoolean();
  interceptor=(Interceptor)ois.readObject();
  factory=SessionFactoryImpl.deserialize(ois);
  listeners=factory.getEventListeners();
  if (isRootSession) {
    transactionCoordinator=TransactionCoordinatorImpl.deserialize(ois,this);
  }
  persistenceContext=StatefulPersistenceContext.deserialize(ois,this);
  actionQueue=ActionQueue.deserialize(ois,this);
  loadQueryInfluencers=(LoadQueryInfluencers)ois.readObject();
  childSessionsByEntityMode=(Map)ois.readObject();
  Iterator iter=loadQueryInfluencers.getEnabledFilterNames().iterator();
  while (iter.hasNext()) {
    String filterName=(String)iter.next();
    ((FilterImpl)loadQueryInfluencers.getEnabledFilter(filterName)).afterDeserialize(factory);
  }
  if (isRootSession && childSessionsByEntityMode != null) {
    iter=childSessionsByEntityMode.values().iterator();
    while (iter.hasNext()) {
      final SessionImpl child=((SessionImpl)iter.next());
      child.rootSession=this;
      child.transactionCoordinator=this.transactionCoordinator;
    }
  }
}
