{
  assertNotNull(entityBinding);
  assertNotNull(entityBinding.getEntityIdentifier());
  assertNotNull(entityBinding.getEntityIdentifier().getValueBinding());
  AttributeBinding idAttributeBinding=entityBinding.getAttributeBinding("id");
  assertNotNull(idAttributeBinding);
  assertSame(idAttributeBinding,entityBinding.getEntityIdentifier().getValueBinding());
  assertSame(LongType.INSTANCE,idAttributeBinding.getHibernateTypeDescriptor().getResolvedTypeMapping());
  assertTrue(idAttributeBinding.getAttribute().isSingular());
  assertNotNull(idAttributeBinding.getAttribute());
  SingularAttribute singularIdAttribute=(SingularAttribute)idAttributeBinding.getAttribute();
  BasicType basicIdAttributeType=(BasicType)singularIdAttribute.getSingularAttributeType();
  assertSame(Long.class,basicIdAttributeType.getClassReference());
  assertNotNull(idAttributeBinding.getValue());
  assertTrue(idAttributeBinding.getValue() instanceof Column);
  Datatype idDataType=((Column)idAttributeBinding.getValue()).getDatatype();
  assertSame(Long.class,idDataType.getJavaType());
  assertSame(Types.BIGINT,idDataType.getTypeCode());
  assertSame(LongType.INSTANCE.getName(),idDataType.getTypeName());
  AttributeBinding nameBinding=entityBinding.getAttributeBinding("name");
  assertNotNull(nameBinding);
  assertSame(StringType.INSTANCE,nameBinding.getHibernateTypeDescriptor().getResolvedTypeMapping());
  assertNotNull(nameBinding.getAttribute());
  assertNotNull(nameBinding.getValue());
  assertTrue(nameBinding.getAttribute().isSingular());
  assertNotNull(nameBinding.getAttribute());
  SingularAttribute singularNameAttribute=(SingularAttribute)nameBinding.getAttribute();
  BasicType basicNameAttributeType=(BasicType)singularNameAttribute.getSingularAttributeType();
  assertSame(String.class,basicNameAttributeType.getClassReference());
  assertNotNull(nameBinding.getValue());
  assertEquals(1,nameBinding.getValuesSpan());
  Iterator<SimpleValue> it=nameBinding.getValues().iterator();
  assertTrue(it.hasNext());
  SimpleValue nameValue=it.next();
  assertTrue(nameValue instanceof Column);
  Datatype nameDataType=nameValue.getDatatype();
  assertSame(String.class,nameDataType.getJavaType());
  assertSame(Types.VARCHAR,nameDataType.getTypeCode());
  assertSame(StringType.INSTANCE.getName(),nameDataType.getTypeName());
}
