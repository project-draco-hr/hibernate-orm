{
  super(sourceMappingDocument,parentContainer,new EmbeddedAttributeMapping(){
    private final EmbeddableMapping embeddableMapping=new EmbeddableMapping(){
      @Override public String getClazz(){
        return jaxbComponentElement.getClazz();
      }
      @Override public List<JaxbHbmTuplizerType> getTuplizer(){
        return jaxbComponentElement.getTuplizer();
      }
      @Override public String getParent(){
        return jaxbComponentElement.getParent() == null ? null : jaxbComponentElement.getParent().getName();
      }
    }
;
    @Override public List<JaxbHbmToolingHintType> getToolingHints(){
      return jaxbComponentElement.getToolingHints();
    }
    @Override public String getName(){
      return jaxbComponentElement.getName();
    }
    @Override public String getAccess(){
      return jaxbComponentElement.getAccess();
    }
    @Override public boolean isUnique(){
      return jaxbComponentElement.isUnique();
    }
    @Override public EmbeddableMapping getEmbeddableMapping(){
      return embeddableMapping;
    }
  }
,jaxbComponentElement.getAttributes(),false,naturalIdMutability,logicalTableName);
  this.xmlNodeName=jaxbComponentElement.getNode();
  this.insert=jaxbComponentElement.isInsert();
  this.update=jaxbComponentElement.isUpdate();
  this.lazy=jaxbComponentElement.isLazy();
  this.optimisticLock=jaxbComponentElement.isOptimisticLock();
}
