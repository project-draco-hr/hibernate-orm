{
  final Class<X> managedTypeClass=managedType.getJavaType();
  final String metamodelClassName=managedTypeClass.getName() + "_";
  try {
    final Class metamodelClass=Class.forName(metamodelClassName,true,managedTypeClass.getClassLoader());
    registerAttributes(metamodelClass,managedType);
  }
 catch (  ClassNotFoundException ignore) {
  }
  AbstractManagedType<? super X> superType=managedType.getSupertype();
  if (superType != null) {
    populateStaticMetamodel(superType);
  }
}
