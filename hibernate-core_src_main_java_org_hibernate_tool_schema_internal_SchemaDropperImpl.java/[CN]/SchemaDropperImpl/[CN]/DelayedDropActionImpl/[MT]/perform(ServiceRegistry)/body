{
  log.startingDelayedSchemaDrop();
  final JdbcContext jdbcContext=new JdbcContextDelayedDropImpl(serviceRegistry);
  final GenerationTargetToDatabase target=new GenerationTargetToDatabase(serviceRegistry.getService(TransactionCoordinatorBuilder.class).buildDdlTransactionIsolator(jdbcContext));
  target.prepare();
  try {
    for (    String command : commands) {
      try {
        target.accept(command);
      }
 catch (      CommandAcceptanceException e) {
        log.unsuccessfulSchemaManagementCommand(command);
        log.debugf(e,"Error performing delayed DROP command [%s]",command);
      }
    }
  }
  finally {
    target.release();
  }
}
