{
  final String timestamps="org.hibernate.cache.spi.UpdateTimestampsCache";
  Properties p=new Properties();
  p.setProperty("hibernate.cache.infinispan.timestamps.cfg","unrecommended-timestamps");
  InfinispanRegionFactory factory=createRegionFactory();
  factory.start(null,p);
  EmbeddedCacheManager manager=factory.getCacheManager();
  try {
    assertFalse(factory.getDefinedConfigurations().contains("timestamp"));
    assertTrue(factory.getDefinedConfigurations().contains("unrecommended-timestamps"));
    assertTrue(factory.getTypeOverrides().get("timestamps").getCacheName().equals("unrecommended-timestamps"));
    Configuration config=new Configuration();
    config.setFetchInMemoryState(false);
    config.setCacheMode(CacheMode.REPL_SYNC);
    manager.defineConfiguration("unrecommended-timestamps",config);
    TimestampsRegionImpl region=(TimestampsRegionImpl)factory.buildTimestampsRegion(timestamps,p);
    CacheAdapter cache=region.getCacheAdapter();
    Configuration cacheCfg=cache.getConfiguration();
    assertEquals(EvictionStrategy.NONE,cacheCfg.getEvictionStrategy());
    assertEquals(CacheMode.REPL_SYNC,cacheCfg.getCacheMode());
    assertFalse(cacheCfg.isUseLazyDeserialization());
    assertFalse(cacheCfg.isExposeJmxStatistics());
  }
  finally {
    factory.stop();
  }
}
