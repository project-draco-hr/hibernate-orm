{
  Properties p=createProperties();
  p.setProperty("hibernate.cache.infinispan.statistics","true");
  p.setProperty("hibernate.cache.infinispan.com.acme.Person.expiration.lifespan","60000");
  p.setProperty("hibernate.cache.infinispan.com.acme.Person.expiration.max_idle","30000");
  p.setProperty("hibernate.cache.infinispan.entity.cfg","myentity-cache");
  p.setProperty("hibernate.cache.infinispan.entity.eviction.strategy","FIFO");
  p.setProperty("hibernate.cache.infinispan.entity.eviction.wake_up_interval","3000");
  p.setProperty("hibernate.cache.infinispan.entity.eviction.max_entries","10000");
  InfinispanRegionFactory factory=createRegionFactory(p);
  try {
    EmbeddedCacheManager manager=factory.getCacheManager();
    assertTrue(manager.getCacheManagerConfiguration().globalJmxStatistics().enabled());
    EntityRegionImpl region=(EntityRegionImpl)factory.buildEntityRegion("com.acme.Address",p,null);
    AdvancedCache cache=region.getCache();
    assertTrue(factory.getTypeOverrides().get("entity").isExposeStatistics());
    assertTrue(cache.getCacheConfiguration().jmxStatistics().enabled());
    region=(EntityRegionImpl)factory.buildEntityRegion("com.acme.Person",p,null);
    cache=region.getCache();
    assertTrue(factory.getTypeOverrides().get("com.acme.Person").isExposeStatistics());
    assertTrue(cache.getCacheConfiguration().jmxStatistics().enabled());
    final String query="org.hibernate.cache.internal.StandardQueryCache";
    QueryResultsRegionImpl queryRegion=(QueryResultsRegionImpl)factory.buildQueryResultsRegion(query,p);
    cache=queryRegion.getCache();
    assertTrue(factory.getTypeOverrides().get("query").isExposeStatistics());
    assertTrue(cache.getCacheConfiguration().jmxStatistics().enabled());
    final String timestamps="org.hibernate.cache.spi.UpdateTimestampsCache";
    ConfigurationBuilder builder=new ConfigurationBuilder();
    builder.clustering().stateTransfer().fetchInMemoryState(true);
    manager.defineConfiguration("timestamps",builder.build());
    TimestampsRegionImpl timestampsRegion=(TimestampsRegionImpl)factory.buildTimestampsRegion(timestamps,p);
    cache=timestampsRegion.getCache();
    assertTrue(factory.getTypeOverrides().get("timestamps").isExposeStatistics());
    assertTrue(cache.getCacheConfiguration().jmxStatistics().enabled());
    CollectionRegionImpl collectionRegion=(CollectionRegionImpl)factory.buildCollectionRegion("com.acme.Person.addresses",p,null);
    cache=collectionRegion.getCache();
    assertTrue(factory.getTypeOverrides().get("collection").isExposeStatistics());
    assertTrue(cache.getCacheConfiguration().jmxStatistics().enabled());
  }
  finally {
    factory.stop();
  }
}
