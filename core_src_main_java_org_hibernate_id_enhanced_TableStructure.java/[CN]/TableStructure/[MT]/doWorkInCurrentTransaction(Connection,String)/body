{
  IntegralDataTypeHolder value=IdentifierGeneratorHelper.getIntegralDataTypeHolder(numberType);
  int rows;
  do {
    SQL_STATEMENT_LOGGER.logStatement(selectQuery,FormatStyle.BASIC);
    PreparedStatement selectPS=conn.prepareStatement(selectQuery);
    try {
      ResultSet selectRS=selectPS.executeQuery();
      if (!selectRS.next()) {
        String err="could not read a hi value - you need to populate the table: " + tableName;
        log.error(err);
        throw new IdentifierGenerationException(err);
      }
      value.initialize(selectRS,1);
      selectRS.close();
    }
 catch (    SQLException sqle) {
      log.error("could not read a hi value",sqle);
      throw sqle;
    }
 finally {
      selectPS.close();
    }
    SQL_STATEMENT_LOGGER.logStatement(updateQuery,FormatStyle.BASIC);
    PreparedStatement updatePS=conn.prepareStatement(updateQuery);
    try {
      final int increment=applyIncrementSizeToSourceValues ? incrementSize : 1;
      final IntegralDataTypeHolder updateValue=value.copy().add(increment);
      updateValue.bind(updatePS,1);
      value.bind(updatePS,2);
      rows=updatePS.executeUpdate();
    }
 catch (    SQLException sqle) {
      log.error("could not updateQuery hi value in: " + tableName,sqle);
      throw sqle;
    }
 finally {
      updatePS.close();
    }
  }
 while (rows == 0);
  accessCounter++;
  return value;
}
