{
  final SingularAttribute<? super X,Y> id_;
  if (id != null) {
    checkSimpleId();
    id_=(SingularAttribute<? super X,Y>)id;
    if (javaType != id.getJavaType()) {
      throw new IllegalArgumentException("Id attribute was not of specified type : " + javaType.getName());
    }
  }
 else {
    if (this instanceof MappedSuperclassTypeImpl) {
      final AbstractIdentifiableType<? super X> supertype=getSupertype();
      if (supertype != null) {
        id_=supertype.getId(javaType);
      }
 else {
        id_=null;
      }
    }
 else {
      id_=requireSupertype().getId(javaType);
    }
  }
  return id_;
}
