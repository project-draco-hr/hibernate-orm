{
  Properties preparedProperties=new Properties();
  preparedProperties.setProperty(Environment.RELEASE_CONNECTIONS,"auto");
  preparedProperties.setProperty(Environment.JPAQL_STRICT_COMPLIANCE,"true");
  preparedProperties.setProperty(Environment.AUTOCOMMIT,"true");
  preparedProperties.setProperty(Environment.USE_IDENTIFIER_ROLLBACK,"false");
  preparedProperties.setProperty(Environment.FLUSH_BEFORE_COMPLETION,"false");
  preparedProperties.setProperty(AvailableSettings.DISCARD_PC_ON_CLOSE,"false");
  if (cfgXmlResource != null) {
    preparedProperties.setProperty(AvailableSettings.CFG_FILE,cfgXmlResource);
    cfgXmlResource=null;
  }
  if (cfg.getProperties() != null)   preparedProperties.putAll(cfg.getProperties());
  if (properties != null)   preparedProperties.putAll(properties);
  if (transactionType == null) {
    transactionType=PersistenceUnitTransactionType.RESOURCE_LOCAL;
  }
  defineTransactionType(preparedProperties.getProperty(AvailableSettings.TRANSACTION_TYPE),workingVars);
  boolean hasTxStrategy=StringHelper.isNotEmpty(preparedProperties.getProperty(Environment.TRANSACTION_STRATEGY));
  if (!hasTxStrategy && transactionType == PersistenceUnitTransactionType.JTA) {
    preparedProperties.setProperty(Environment.TRANSACTION_STRATEGY,JoinableCMTTransactionFactory.class.getName());
  }
 else   if (!hasTxStrategy && transactionType == PersistenceUnitTransactionType.RESOURCE_LOCAL) {
    preparedProperties.setProperty(Environment.TRANSACTION_STRATEGY,JdbcTransactionFactory.class.getName());
  }
  if (hasTxStrategy) {
    log.warn("Overriding {} is dangerous, this might break the EJB3 specification implementation",Environment.TRANSACTION_STRATEGY);
  }
  if (preparedProperties.getProperty(Environment.FLUSH_BEFORE_COMPLETION).equals("true")) {
    preparedProperties.setProperty(Environment.FLUSH_BEFORE_COMPLETION,"false");
    log.warn("Defining {}=true ignored in HEM",Environment.FLUSH_BEFORE_COMPLETION);
  }
  return preparedProperties;
}
