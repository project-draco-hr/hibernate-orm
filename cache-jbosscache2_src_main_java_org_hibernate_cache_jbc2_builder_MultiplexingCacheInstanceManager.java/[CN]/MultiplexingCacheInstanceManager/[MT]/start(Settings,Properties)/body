{
  try {
    TransactionManagerLookup tml=settings.getTransactionManagerLookup();
    TransactionManager tm=(tml == null ? null : tml.getTransactionManager(properties));
    boolean buildCaches=jbcEntityCache == null && jbcCollectionCache == null && jbcTsCache == null && jbcQueryCache == null;
    if (buildCaches && jbcFactory == null) {
      if (channelFactory == null) {
        String muxStacks=PropertiesHelper.getString(CHANNEL_FACTORY_RESOURCE_PROP,properties,DEF_MULTIPLEXER_RESOURCE);
        if (muxStacks != null) {
          channelFactory=new JChannelFactory();
          channelFactory.setMultiplexerConfig(muxStacks);
        }
      }
      String factoryRes=PropertiesHelper.getString(CACHE_FACTORY_RESOURCE_PROP,properties,DEF_CACHE_FACTORY_RESOURCE);
      jbcFactory=new JBossCacheFactoryImpl(factoryRes,channelFactory);
      ((JBossCacheFactoryImpl)jbcFactory).start();
      selfCreatedFactory=true;
    }
    if (settings.isSecondLevelCacheEnabled()) {
      if (buildCaches) {
        entityConfig=PropertiesHelper.getString(ENTITY_CACHE_RESOURCE_PROP,properties,DEF_ENTITY_RESOURCE);
        jbcEntityCache=jbcFactory.getCache(entityConfig,true);
        collectionConfig=PropertiesHelper.getString(COLLECTION_CACHE_RESOURCE_PROP,properties,entityConfig);
        if (entityConfig.equals(collectionConfig)) {
          jbcCollectionCache=jbcEntityCache;
        }
 else {
          jbcCollectionCache=jbcFactory.getCache(collectionConfig,true);
        }
      }
      if (jbcEntityCache != null) {
        configureTransactionManager(jbcEntityCache,tm,false);
        jbcEntityCache.start();
      }
      if (jbcCollectionCache != null) {
        configureTransactionManager(jbcCollectionCache,tm,false);
        jbcCollectionCache.start();
      }
    }
 else {
      jbcEntityCache=null;
      jbcCollectionCache=null;
    }
    if (settings.isQueryCacheEnabled()) {
      if (buildCaches) {
        String dfltQueryResource=(entityConfig == null ? DEF_QUERY_RESOURCE : entityConfig);
        queryConfig=PropertiesHelper.getString(QUERY_CACHE_RESOURCE_PROP,properties,dfltQueryResource);
        if (queryConfig.equals(entityConfig)) {
          jbcQueryCache=jbcEntityCache;
        }
 else         if (queryConfig.equals(collectionConfig)) {
          jbcQueryCache=jbcCollectionCache;
        }
 else {
          jbcQueryCache=jbcFactory.getCache(queryConfig,true);
        }
        tsConfig=PropertiesHelper.getString(TIMESTAMP_CACHE_RESOURCE_PROP,properties,DEF_TS_RESOURCE);
        if (tsConfig.equals(queryConfig)) {
          jbcTsCache=jbcQueryCache;
        }
 else         if (tsConfig.equals(entityConfig)) {
          jbcTsCache=jbcEntityCache;
        }
 else         if (tsConfig.equals(collectionConfig)) {
          jbcTsCache=jbcCollectionCache;
        }
 else {
          jbcTsCache=jbcFactory.getCache(tsConfig,true);
        }
      }
      if (jbcQueryCache != null) {
        configureTransactionManager(jbcQueryCache,tm,false);
        jbcQueryCache.start();
      }
      if (jbcTsCache != null) {
        configureTransactionManager(jbcTsCache,tm,true);
        jbcTsCache.start();
      }
    }
 else {
      jbcTsCache=null;
      jbcQueryCache=null;
    }
  }
 catch (  CacheException ce) {
    throw ce;
  }
catch (  Throwable t) {
    throw new CacheException("Unable to start region factory",t);
  }
}
