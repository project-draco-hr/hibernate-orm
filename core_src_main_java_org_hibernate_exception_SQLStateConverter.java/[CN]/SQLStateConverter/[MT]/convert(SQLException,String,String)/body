{
  String sqlState=JDBCExceptionHelper.extractSqlState(sqlException);
  if (sqlState != null) {
    String sqlStateClassCode=JDBCExceptionHelper.determineSqlStateClassCode(sqlState);
    if (sqlStateClassCode != null) {
      if (SQL_GRAMMAR_CATEGORIES.contains(sqlStateClassCode)) {
        return new SQLGrammarException(message,sqlException,sql);
      }
 else       if (INTEGRITY_VIOLATION_CATEGORIES.contains(sqlStateClassCode)) {
        String constraintName=extracter.extractConstraintName(sqlException);
        return new ConstraintViolationException(message,sqlException,sql,constraintName);
      }
 else       if (CONNECTION_CATEGORIES.contains(sqlStateClassCode)) {
        return new JDBCConnectionException(message,sqlException,sql);
      }
 else       if (DATA_CATEGORIES.contains(sqlStateClassCode)) {
        return new DataException(message,sqlException,sql);
      }
    }
    if ("40001".equals(sqlState)) {
      return new LockAcquisitionException(message,sqlException,sql);
    }
    if ("61000".equals(sqlState)) {
      return new LockAcquisitionException(message,sqlException,sql);
    }
    if ("40XL1".equals(sqlState) || "40XL2".equals(sqlState)) {
      return new PessimisticLockException(message,sqlException,sql);
    }
    if ("70100".equals(sqlState) || "72000".equals(sqlState)) {
      throw new QueryTimeoutException(message,sqlException,sql);
    }
  }
  return handledNonSpecificException(sqlException,message,sql);
}
