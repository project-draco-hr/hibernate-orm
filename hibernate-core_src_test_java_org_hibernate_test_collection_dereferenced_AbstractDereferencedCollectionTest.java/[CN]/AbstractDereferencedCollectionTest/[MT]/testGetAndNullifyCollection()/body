{
  Session s=openSession();
  s.getTransaction().begin();
  One one=createOwner();
  assertNull(one.getManies());
  s.save(one);
  assertNull(one.getManies());
  EntityEntry eeOne=getEntityEntry(s,one);
  assertNull(eeOne.getLoadedValue("manies"));
  s.flush();
  assertNull(one.getManies());
  assertNull(eeOne.getLoadedValue("manies"));
  s.getTransaction().commit();
  s.close();
  final String role=getCollectionOwnerClass().getName() + ".manies";
  s=openSession();
  s.getTransaction().begin();
  one=(One)s.get(getCollectionOwnerClass(),one.getId());
  eeOne=getEntityEntry(s,one);
  assertNotNull(one.getManies());
  AbstractPersistentCollection maniesEEOneStateOrig=(AbstractPersistentCollection)eeOne.getLoadedValue("manies");
  assertSame(one.getManies(),maniesEEOneStateOrig);
  assertEquals(role,maniesEEOneStateOrig.getRole());
  assertEquals(one.getId(),maniesEEOneStateOrig.getKey());
  assertSame(s,maniesEEOneStateOrig.getSession());
  CollectionEntry ceManies=getCollectionEntry(s,maniesEEOneStateOrig);
  assertNotNull(ceManies);
  assertEquals(role,ceManies.getRole());
  assertSame(sessionFactory().getCollectionPersister(role),ceManies.getLoadedPersister());
  assertEquals(one.getId(),ceManies.getKey());
  one.setManies(null);
  s.flush();
  assertSame(eeOne,getEntityEntry(s,one));
  assertNull(one.getManies());
  assertNull(getCollectionEntry(s,maniesEEOneStateOrig));
  assertNull(ceManies.getRole());
  assertNull(ceManies.getLoadedPersister());
  assertNull(ceManies.getKey());
  assertNull(maniesEEOneStateOrig.getKey());
  assertNull(maniesEEOneStateOrig.getRole());
  assertNull(eeOne.getLoadedValue("manies"));
  assertNull(maniesEEOneStateOrig.getSession());
  s.getTransaction().commit();
  s.close();
}
