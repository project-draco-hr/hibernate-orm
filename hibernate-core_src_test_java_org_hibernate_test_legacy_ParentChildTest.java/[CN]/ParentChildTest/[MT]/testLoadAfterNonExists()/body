{
  Session session=openSession();
  if ((getDialect() instanceof MySQLDialect) || (getDialect() instanceof IngresDialect)) {
    session.doWork(new AbstractWork(){
      @Override public void execute(      Connection connection) throws SQLException {
        connection.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);
      }
    }
);
  }
  session.getTransaction().begin();
  try {
    session.load(Simple.class,new Long(-1));
    fail();
  }
 catch (  ObjectNotFoundException onfe) {
    if (getDialect() instanceof TeradataDialect) {
      session.getTransaction().rollback();
      session.getTransaction().begin();
    }
  }
  Session anotherSession=sessionFactory().openSession();
  anotherSession.beginTransaction();
  Simple myNewSimple=new Simple(Long.valueOf(-1));
  myNewSimple.setName("My under the radar Simple entity");
  myNewSimple.setAddress("SessionCacheTest.testLoadAfterNonExists");
  myNewSimple.setCount(1);
  myNewSimple.setDate(new Date());
  myNewSimple.setPay(Float.valueOf(100000000));
  anotherSession.save(myNewSimple);
  anotherSession.getTransaction().commit();
  anotherSession.close();
  session.clear();
  try {
    Simple dummy=(Simple)session.get(Simple.class,Long.valueOf(-1));
    assertNotNull("Unable to locate entity Simple with id = -1",dummy);
    session.delete(dummy);
  }
 catch (  ObjectNotFoundException onfe) {
    fail("Unable to locate entity Simple with id = -1");
  }
  session.getTransaction().commit();
  session.close();
}
