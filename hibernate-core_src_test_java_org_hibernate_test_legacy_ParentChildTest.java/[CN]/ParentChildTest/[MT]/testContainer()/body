{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Container c=new Container();
  Simple x=new Simple();
  x.setCount(123);
  Simple y=new Simple();
  y.setCount(456);
  s.save(x,new Long(1));
  s.save(y,new Long(0));
  List o2m=new ArrayList();
  o2m.add(x);
  o2m.add(null);
  o2m.add(y);
  List m2m=new ArrayList();
  m2m.add(x);
  m2m.add(null);
  m2m.add(y);
  c.setOneToMany(o2m);
  c.setManyToMany(m2m);
  List comps=new ArrayList();
  Container.ContainerInnerClass ccic=new Container.ContainerInnerClass();
  ccic.setName("foo");
  ccic.setSimple(x);
  comps.add(ccic);
  comps.add(null);
  ccic=new Container.ContainerInnerClass();
  ccic.setName("bar");
  ccic.setSimple(y);
  comps.add(ccic);
  HashSet compos=new HashSet();
  compos.add(ccic);
  c.setComposites(compos);
  c.setComponents(comps);
  One one=new One();
  Many many=new Many();
  HashSet manies=new HashSet();
  manies.add(many);
  one.setManies(manies);
  many.setOne(one);
  ccic.setMany(many);
  ccic.setOne(one);
  s.save(one);
  s.save(many);
  s.save(c);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  Long count=(Long)s.createQuery("select count(*) from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").uniqueResult();
  assertTrue(count.intValue() == 1);
  List res=s.createQuery("select c, s from ContainerX as c join c.components as ce join ce.simple as s where ce.name='foo'").list();
  assertTrue(res.size() == 1);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  c=(Container)s.load(Container.class,new Long(c.getId()));
  System.out.println(c.getOneToMany());
  System.out.println(c.getManyToMany());
  System.out.println(c.getComponents());
  System.out.println(c.getComposites());
  ccic=(Container.ContainerInnerClass)c.getComponents().get(2);
  assertTrue(ccic.getMany().getOne() == ccic.getOne());
  assertTrue(c.getComponents().size() == 3);
  assertTrue(c.getComposites().size() == 1);
  assertTrue(c.getOneToMany().size() == 3);
  assertTrue(c.getManyToMany().size() == 3);
  assertTrue(c.getOneToMany().get(0) != null);
  assertTrue(c.getOneToMany().get(2) != null);
  for (int i=0; i < 3; i++) {
    assertTrue(c.getManyToMany().get(i) == c.getOneToMany().get(i));
  }
  Object o1=c.getOneToMany().get(0);
  Object o2=c.getOneToMany().remove(2);
  c.getOneToMany().set(0,o2);
  c.getOneToMany().set(1,o1);
  o1=c.getComponents().remove(2);
  c.getComponents().set(0,o1);
  c.getManyToMany().set(0,c.getManyToMany().get(2));
  Container.ContainerInnerClass ccic2=new Container.ContainerInnerClass();
  ccic2.setName("foo");
  ccic2.setOne(one);
  ccic2.setMany(many);
  ccic2.setSimple((Simple)s.load(Simple.class,new Long(0)));
  c.getComposites().add(ccic2);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  c=(Container)s.load(Container.class,new Long(c.getId()));
  System.out.println(c.getOneToMany());
  System.out.println(c.getManyToMany());
  System.out.println(c.getComponents());
  System.out.println(c.getComposites());
  assertTrue(c.getComponents().size() == 1);
  assertTrue(c.getComposites().size() == 2);
  assertTrue(c.getOneToMany().size() == 2);
  assertTrue(c.getManyToMany().size() == 3);
  assertTrue(c.getOneToMany().get(0) != null);
  assertTrue(c.getOneToMany().get(1) != null);
  ((Container.ContainerInnerClass)c.getComponents().get(0)).setName("a different name");
  ((Container.ContainerInnerClass)c.getComposites().iterator().next()).setName("once again");
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  c=(Container)s.load(Container.class,new Long(c.getId()));
  System.out.println(c.getOneToMany());
  System.out.println(c.getManyToMany());
  System.out.println(c.getComponents());
  System.out.println(c.getComposites());
  assertTrue(c.getComponents().size() == 1);
  assertTrue(c.getComposites().size() == 2);
  assertTrue(((Container.ContainerInnerClass)c.getComponents().get(0)).getName().equals("a different name"));
  Iterator iter=c.getComposites().iterator();
  boolean found=false;
  while (iter.hasNext()) {
    if (((Container.ContainerInnerClass)iter.next()).getName().equals("once again"))     found=true;
  }
  assertTrue(found);
  c.getOneToMany().clear();
  c.getManyToMany().clear();
  c.getComposites().clear();
  c.getComponents().clear();
  doDelete(s,"from Simple");
  doDelete(s,"from Many");
  doDelete(s,"from One");
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  c=(Container)s.load(Container.class,new Long(c.getId()));
  assertTrue(c.getComponents().size() == 0);
  assertTrue(c.getComposites().size() == 0);
  assertTrue(c.getOneToMany().size() == 0);
  assertTrue(c.getManyToMany().size() == 0);
  s.delete(c);
  t.commit();
  s.close();
}
