{
  Coordinate[] received=decodedGeoms.get(5).getCoordinates();
  MCoordinate[] expected=new MCoordinate[]{new MCoordinate(10.0,5.0),new MCoordinate(20.0,15.0)};
  assertArrayEquals(received,expected);
  received=decodedGeoms.get(6).getCoordinates();
  expected=new MCoordinate[]{new MCoordinate(10.0,5.0),new MCoordinate(20.0,15.0),new MCoordinate(30.3,22.4),new MCoordinate(10.0,30.0)};
  assertArrayEquals(expected,received);
  received=decodedGeoms.get(7).getCoordinates();
  expected=new MCoordinate[]{new MCoordinate(10.0,5.0),new MCoordinate(20.0,15.0)};
  expected[0].z=0;
  expected[1].z=3;
  assertArrayEquals(expected,received);
  received=decodedGeoms.get(9).getCoordinates();
  expected=new MCoordinate[]{new MCoordinate(10,5),new MCoordinate(20,15),new MCoordinate(30.3,22.4),new MCoordinate(10,30)};
  expected[0].z=1;
  expected[1].z=2;
  expected[2].z=5;
  expected[3].z=2;
  assertArrayEquals(expected,received);
  received=decodedGeoms.get(10).getCoordinates();
  expected[0].m=1;
  expected[1].m=3;
  expected[2].m=10;
  expected[3].m=12;
  assertArrayEquals(expected,received);
}
