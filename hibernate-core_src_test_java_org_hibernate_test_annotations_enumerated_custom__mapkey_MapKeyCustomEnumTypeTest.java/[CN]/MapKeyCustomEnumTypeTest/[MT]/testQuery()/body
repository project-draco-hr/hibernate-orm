{
  EntityMapEnum entityMapEnum=new EntityMapEnum();
  entityMapEnum.ordinalMap.put(Common.A2,"Common.A2");
  Serializable id=save(entityMapEnum);
  EntityMapEnum found=assertFindEntityMapEnum(entityMapEnum,"from EntityMapEnum ee where key(ee.ordinalMap)=1","from EntityMapEnum ee where key(ee.ordinalMap)=:param",Common.A2,"select 1 from EntityMapEnum_ordinalMap where EntityMapEnum_id=:idEntityMapEnum and ordinalMap_KEY=1");
  assertFalse(found.ordinalMap.isEmpty());
  delete(id);
  entityMapEnum=new EntityMapEnum();
  entityMapEnum.stringMap.put(Common.B1,"Common.B2");
  id=save(entityMapEnum);
  found=assertFindEntityMapEnum(entityMapEnum,"from EntityMapEnum ee where key(ee.stringMap)='B1'","from EntityMapEnum ee where key(ee.stringMap)=:param",Common.B1,"select 1 from EntityMapEnum_stringMap where EntityMapEnum_id=:idEntityMapEnum and stringMap_KEY='B1'");
  assertFalse(found.stringMap.isEmpty());
  delete(id);
  entityMapEnum=new EntityMapEnum();
  entityMapEnum.firstLetterMap.put(FirstLetter.C_LETTER,"FirstLetter.C_LETTER");
  id=save(entityMapEnum);
  found=assertFindEntityMapEnum(entityMapEnum,"from EntityMapEnum ee where key(ee.firstLetterMap)='C'","from EntityMapEnum ee where key(ee.firstLetterMap)=:param",FirstLetter.C_LETTER,"select 1 from EntityMapEnum_firstLetterMap where EntityMapEnum_id=:idEntityMapEnum and firstLetterMap_KEY='C'");
  assertFalse(found.firstLetterMap.isEmpty());
  delete(id);
  entityMapEnum=new EntityMapEnum();
  entityMapEnum.lastNumberMap.put(LastNumber.NUMBER_1,"LastNumber.NUMBER_1 ");
  id=save(entityMapEnum);
  found=assertFindEntityMapEnum(entityMapEnum,"from EntityMapEnum ee where key(ee.lastNumberMap)='1'","from EntityMapEnum ee where key(ee.lastNumberMap)=:param",LastNumber.NUMBER_1,"select 1 from EntityMapEnum_lastNumberMap where EntityMapEnum_id=:idEntityMapEnum and lastNumberMap_KEY='1'");
  assertFalse(found.lastNumberMap.isEmpty());
  delete(id);
  entityMapEnum=new EntityMapEnum();
  entityMapEnum.explicitOverridingImplicitMap.put(LastNumber.NUMBER_2,"LastNumber.NUMBER_2 ");
  id=save(entityMapEnum);
  found=assertFindEntityMapEnum(entityMapEnum,"from EntityMapEnum ee where key(ee.explicitOverridingImplicitMap)='NUMBER_2'","from EntityMapEnum ee where key(ee.explicitOverridingImplicitMap)=:param",LastNumber.NUMBER_2,"select 1 from overridingMap where EntityMapEnum_id=:idEntityMapEnum and overridingMap_key='NUMBER_2'");
  assertFalse(found.explicitOverridingImplicitMap.isEmpty());
  delete(id);
}
