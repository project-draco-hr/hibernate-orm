{
  try {
    LOG.attemptingToConstructSqlExceptionConverter(converterClassName);
    Class converterClass=ReflectHelper.classForName(converterClassName);
    Constructor[] ctors=converterClass.getDeclaredConstructors();
    for (int i=0; i < ctors.length; i++) {
      if (ctors[i].getParameterTypes() != null && ctors[i].getParameterTypes().length == 1) {
        if (ViolatedConstraintNameExtracter.class.isAssignableFrom(ctors[i].getParameterTypes()[0])) {
          try {
            return (SQLExceptionConverter)ctors[i].newInstance(new Object[]{violatedConstraintNameExtracter});
          }
 catch (          Throwable t) {
          }
        }
      }
    }
    return (SQLExceptionConverter)converterClass.newInstance();
  }
 catch (  Throwable t) {
    LOG.unableToConstructSqlExceptionConverter(t);
  }
  return null;
}
