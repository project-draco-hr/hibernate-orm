{
  final String referencedEntityName=((ToOne)value).getReferencedEntityName();
  final IdMappingData idMapping=mainGenerator.getReferencedIdMappingData(entityName,referencedEntityName,propertyAuditingData,true);
  final String lastPropertyPrefix=MappingTools.createToOneRelationPrefix(propertyAuditingData.getName());
  final IdMapper relMapper=idMapping.getIdMapper().prefixMappedProperties(lastPropertyPrefix);
  mainGenerator.getEntitiesConfigurations().get(entityName).addToOneRelation(propertyAuditingData.getName(),referencedEntityName,relMapper,insertable);
  boolean nonInsertableFake;
  if (!insertable && propertyAuditingData.isForceInsertable()) {
    nonInsertableFake=true;
    insertable=true;
  }
 else {
    nonInsertableFake=false;
  }
  final Element properties=(Element)idMapping.getXmlRelationMapping().clone();
  properties.addAttribute("name",propertyAuditingData.getName());
  MetadataTools.prefixNamesInPropertyElement(properties,lastPropertyPrefix,MetadataTools.getColumnNameIterator(value.getColumnIterator()),false,insertable);
  for (  Object o : properties.content()) {
    final Element element=(Element)o;
    element.setParent(null);
    parent.add(element);
  }
  final PropertyData propertyData=propertyAuditingData.getPropertyData();
  mapper.addComposite(propertyData,new ToOneIdMapper(relMapper,propertyData,referencedEntityName,nonInsertableFake));
}
