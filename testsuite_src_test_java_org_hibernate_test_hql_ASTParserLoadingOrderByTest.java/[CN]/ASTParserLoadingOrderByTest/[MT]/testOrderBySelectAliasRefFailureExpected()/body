{
  createData();
  Session s=openSession();
  Transaction t=s.beginTransaction();
  checkTestOrderByResults(s.createQuery("select z2.name as zname, z2.address as zooAddress from Zoo z2 where z2.name in ( select name from Zoo ) order by zname, zooAddress").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name as name, z.address as address from Zoo z order by name, address").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name as zooName, z.address as zooAddress from Zoo z order by zooName, zooAddress").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name, z.address as name from Zoo z order by z.name, name").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name, z.address as name from Zoo z order by z.name, name").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z2.name as zname, z2.address as zooAddress from Zoo z2 where z2.name in ( select name from Zoo ) order by zname ASC, zooAddress ASC").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name as name, z.address as address from Zoo z order by name ASC, address ASC").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name as zooName, z.address as zooAddress from Zoo z order by zooName ASC, zooAddress ASC").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name, z.address as name from Zoo z order by z.name ASC, name ASC").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name, z.address as name from Zoo z order by z.name ASC, name ASC").list(),zoo2,zoo4,zoo3,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name as address, z.address as name from Zoo z order by name, address").list(),zoo3,zoo4,zoo2,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name, z.address as name from Zoo z order by name, z.name").list(),zoo3,zoo4,zoo2,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name as address, z.address as name from Zoo z order by name ASC, address ASC").list(),zoo3,zoo4,zoo2,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name, z.address as name from Zoo z order by name ASC, z.name ASC").list(),zoo3,zoo4,zoo2,zoo1,null);
  checkTestOrderByResults(s.createQuery("select z.name as zooName, z.address as zooAddress from Zoo z order by zooAddress").list(),zoo3,zoo4,null,null,zoosWithSameAddress);
  checkTestOrderByResults(s.createQuery("select z.name as zooName, z.address as name from Zoo z order by name").list(),zoo3,zoo4,null,null,zoosWithSameAddress);
  checkTestOrderByResults(s.createQuery("select z.name as zooName, z.address as zooAddress from Zoo z order by zooName").list(),zoo2,zoo4,null,null,zoosWithSameName);
  checkTestOrderByResults(s.createQuery("select z.name as address, z.address as name from Zoo z order by address").list(),zoo2,zoo4,null,null,zoosWithSameName);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  try {
    s.createQuery("select z2.name as zname, z2.address as zooAddress from Zoo z2 where z2.name in ( select name as zname from Zoo order by zname ) order by zooAddress").list();
    fail("Exception should have been thrown because subquery has ORDER BY");
  }
 catch (  QuerySyntaxException ex) {
  }
 finally {
    t.rollback();
    s.close();
  }
  cleanupData();
}
