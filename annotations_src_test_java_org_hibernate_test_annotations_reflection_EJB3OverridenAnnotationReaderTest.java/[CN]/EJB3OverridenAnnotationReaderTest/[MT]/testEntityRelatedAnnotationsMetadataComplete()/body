{
  XMLContext context=buildContext("org/hibernate/test/annotations/reflection/metadata-complete.xml");
  EJB3OverridenAnnotationReader reader=new EJB3OverridenAnnotationReader(Administration.class,context);
  assertNotNull(reader.getAnnotation(Entity.class));
  assertEquals("Metadata complete should ignore java annotations","",reader.getAnnotation(Entity.class).name());
  assertNotNull(reader.getAnnotation(Table.class));
  assertEquals("@Table should not be used","",reader.getAnnotation(Table.class).name());
  assertEquals("Default schema not overriden","myschema",reader.getAnnotation(Table.class).schema());
  reader=new EJB3OverridenAnnotationReader(Match.class,context);
  assertNotNull(reader.getAnnotation(Table.class));
  assertEquals("@Table should not be used","",reader.getAnnotation(Table.class).name());
  assertEquals("Overriding not taken into account","myschema",reader.getAnnotation(Table.class).schema());
  assertEquals("Overriding not taken into account","mycatalog",reader.getAnnotation(Table.class).catalog());
  assertNull("Ignore Java annotation",reader.getAnnotation(SecondaryTable.class));
  assertNull("Ignore Java annotation",reader.getAnnotation(SecondaryTables.class));
  assertNull("Ignore Java annotation",reader.getAnnotation(Inheritance.class));
  assertNull(reader.getAnnotation(NamedQueries.class));
  assertNull(reader.getAnnotation(NamedNativeQueries.class));
  reader=new EJB3OverridenAnnotationReader(TennisMatch.class,context);
  assertNull(reader.getAnnotation(PrimaryKeyJoinColumn.class));
  assertNull(reader.getAnnotation(PrimaryKeyJoinColumns.class));
  reader=new EJB3OverridenAnnotationReader(Competition.class,context);
  assertNull(reader.getAnnotation(MappedSuperclass.class));
  reader=new EJB3OverridenAnnotationReader(SocialSecurityMoralAccount.class,context);
  assertNull(reader.getAnnotation(IdClass.class));
  assertNull(reader.getAnnotation(DiscriminatorValue.class));
  assertNull(reader.getAnnotation(DiscriminatorColumn.class));
  assertNull(reader.getAnnotation(SequenceGenerator.class));
  assertNull(reader.getAnnotation(TableGenerator.class));
}
