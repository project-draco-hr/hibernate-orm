{
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  Session s=openSession();
  Node dupe=new Node("dupe");
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  s.persist(dupe);
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  dupe=(Node)getOldToNewEntityRefMap().get(dupe);
  s.persist(dupe);
  applyNonFlushedChangesToNewSessionCloseOldSession(s);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  s=openSession();
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  s.persist(dupe);
  applyNonFlushedChangesToNewSessionCloseOldSession(s);
  try {
    TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
    Assert.fail();
  }
 catch (  ConstraintViolationException cve) {
  }
catch (  RollbackException e) {
    if (!ConstraintViolationException.class.isInstance(e.getCause())) {
      throw (Exception)e.getCause();
    }
  }
  if (JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager())) {
    TestingJtaPlatformImpl.INSTANCE.getTransactionManager().rollback();
  }
  Node nondupe=new Node("nondupe");
  nondupe.addChild(dupe);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  s=openSession();
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  s.persist(nondupe);
  applyNonFlushedChangesToNewSessionCloseOldSession(s);
  try {
    TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
    Assert.fail();
  }
 catch (  ConstraintViolationException cve) {
  }
catch (  RollbackException e) {
    if (!ConstraintViolationException.class.isInstance(e.getCause())) {
      throw (Exception)e.getCause();
    }
  }
  if (JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager())) {
    TestingJtaPlatformImpl.INSTANCE.getTransactionManager().rollback();
  }
}
