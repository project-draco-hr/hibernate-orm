{
  Session s;
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  s=openSession();
  Employer er=new Employer();
  Employee ee=new Employee();
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  s.persist(ee);
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  ee=(Employee)getOldToNewEntityRefMap().get(ee);
  Collection erColl=new ArrayList();
  Collection eeColl=new ArrayList();
  erColl.add(ee);
  eeColl.add(er);
  er.setEmployees(erColl);
  ee.setEmployers(eeColl);
  applyNonFlushedChangesToNewSessionCloseOldSession(s);
  ee=(Employee)getOldToNewEntityRefMap().get(ee);
  er=(Employer)ee.getEmployers().iterator().next();
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  s=openSession();
  er=(Employer)s.load(Employer.class,er.getId());
  assertNotNull(er);
  assertFalse(Hibernate.isInitialized(er));
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  er=(Employer)getOldToNewEntityRefMap().get(er);
  assertNotNull(er);
  assertFalse(Hibernate.isInitialized(er));
  assertNotNull(er.getEmployees());
  assertEquals(1,er.getEmployees().size());
  Employee eeFromDb=(Employee)er.getEmployees().iterator().next();
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  eeFromDb=(Employee)getOldToNewEntityRefMap().get(eeFromDb);
  assertEquals(ee.getId(),eeFromDb.getId());
  applyNonFlushedChangesToNewSessionCloseOldSession(s);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
}
