{
  final SessionFactoryImplementor factory=session.getFactory();
  final LinkedHashSet<String> spacesList=new LinkedHashSet<String>();
  for (  Queryable persister : affectedQueryables) {
    spacesList.addAll(Arrays.asList((String[])persister.getQuerySpaces()));
    if (persister.hasCache()) {
      entityCleanups.add(new EntityCleanup(persister.getCacheAccessStrategy()));
    }
    if (persister.hasNaturalIdentifier() && persister.hasNaturalIdCache()) {
      naturalIdCleanups.add(new NaturalIdCleanup(persister.getNaturalIdCacheAccessStrategy()));
    }
    final Set<String> roles=factory.getCollectionRolesByEntityParticipant(persister.getEntityName());
    if (roles != null) {
      for (      String role : roles) {
        final CollectionPersister collectionPersister=factory.getCollectionPersister(role);
        if (collectionPersister.hasCache()) {
          collectionCleanups.add(new CollectionCleanup(collectionPersister.getCacheAccessStrategy()));
        }
      }
    }
  }
  this.affectedTableSpaces=spacesList.toArray(new String[spacesList.size()]);
}
