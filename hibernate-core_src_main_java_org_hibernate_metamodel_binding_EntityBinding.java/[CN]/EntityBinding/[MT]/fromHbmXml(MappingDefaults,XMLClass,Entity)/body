{
  this.entity=entity;
  metaAttributes=HbmHelper.extractMetas(entityClazz.getMeta(),true,defaults.getMappingMetas());
  lazy=MappingHelper.getBooleanValue(entityClazz.isLazy(),defaults.isDefaultLazy());
  discriminatorValue=MappingHelper.getStringValue(entityClazz.getDiscriminatorValue(),entity.getName());
  dynamicUpdate=entityClazz.isDynamicUpdate();
  dynamicInsert=entityClazz.isDynamicInsert();
  batchSize=MappingHelper.getIntValue(entityClazz.getBatchSize(),0);
  selectBeforeUpdate=entityClazz.isSelectBeforeUpdate();
  String optimisticLockModeString=MappingHelper.getStringValue(entityClazz.getOptimisticLock(),"version");
  if ("version".equals(optimisticLockModeString)) {
    optimisticLockMode=Versioning.OPTIMISTIC_LOCK_VERSION;
  }
 else   if ("dirty".equals(optimisticLockModeString)) {
    optimisticLockMode=Versioning.OPTIMISTIC_LOCK_DIRTY;
  }
 else   if ("all".equals(optimisticLockModeString)) {
    optimisticLockMode=Versioning.OPTIMISTIC_LOCK_ALL;
  }
 else   if ("none".equals(optimisticLockModeString)) {
    optimisticLockMode=Versioning.OPTIMISTIC_LOCK_NONE;
  }
 else {
    throw new MappingException("Unsupported optimistic-lock style: " + optimisticLockModeString);
  }
  if (entityClazz.getPersister() != null) {
    try {
      entityPersisterClass=ReflectHelper.classForName(entityClazz.getPersister());
    }
 catch (    ClassNotFoundException cnfe) {
      throw new MappingException("Could not find persister class: " + entityClazz.getPersister());
    }
  }
  XMLSqlInsertElement sqlInsert=entityClazz.getSqlInsert();
  if (sqlInsert != null) {
    customInsert=HbmHelper.getCustomSql(sqlInsert.getValue(),sqlInsert.isCallable(),sqlInsert.getCheck().value());
  }
  XMLSqlDeleteElement sqlDelete=entityClazz.getSqlDelete();
  if (sqlDelete != null) {
    customDelete=HbmHelper.getCustomSql(sqlDelete.getValue(),sqlDelete.isCallable(),sqlDelete.getCheck().value());
  }
  XMLSqlUpdateElement sqlUpdate=entityClazz.getSqlUpdate();
  if (sqlUpdate != null) {
    customUpdate=HbmHelper.getCustomSql(sqlUpdate.getValue(),sqlUpdate.isCallable(),sqlUpdate.getCheck().value());
  }
  if (entityClazz.getSynchronize() != null) {
    for (    XMLSynchronizeElement synchronize : entityClazz.getSynchronize()) {
      addSynchronizedTable(synchronize.getTable());
    }
  }
  isAbstract=entityClazz.isAbstract();
}
