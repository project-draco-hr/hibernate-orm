{
  List<Enum> enumList=new ArrayList<Enum>();
  if (isCascadePersistDefault) {
    enumList.add(javax.persistence.CascadeType.PERSIST);
  }
  if (cascadeType != null) {
    if (cascadeType.getCascadeAll() != null) {
      enumList.add(javax.persistence.CascadeType.ALL);
    }
    if (cascadeType.getCascadePersist() != null && !isCascadePersistDefault) {
      enumList.add(javax.persistence.CascadeType.PERSIST);
    }
    if (cascadeType.getCascadeMerge() != null) {
      enumList.add(javax.persistence.CascadeType.MERGE);
    }
    if (cascadeType.getCascadeRemove() != null) {
      enumList.add(javax.persistence.CascadeType.REMOVE);
    }
    if (cascadeType.getCascadeRefresh() != null) {
      enumList.add(javax.persistence.CascadeType.REFRESH);
    }
    if (cascadeType.getCascadeDetach() != null) {
      enumList.add(javax.persistence.CascadeType.DETACH);
    }
  }
  if (!enumList.isEmpty()) {
    MockHelper.enumArrayValue(name,JPADotNames.CASCADE_TYPE,enumList,annotationValueList);
  }
}
