{
  Class clazz=serviceRegistry.getService(ClassLoaderService.class).classForName(classInfo.toString());
switch (type) {
case FIELD:
    Field field=getField(clazz,name);
  if (field == null) {
    throw new HibernateException("Unable to load field " + name + " of class "+ clazz.getName());
  }
return FieldInfo.create(classInfo,name,getType(field.getType()),(short)(field.getModifiers()));
case METHOD:
Method method=getMethod(clazz,name);
if (method == null) {
throw new HibernateException("Unable to load method " + name + " of class "+ clazz.getName());
}
return getMethodInfo(classInfo,method);
case PROPERTY:
method=getterMethod(clazz,name);
if (method == null) {
throw new HibernateException("Unable to load method " + name + " of class "+ clazz.getName());
}
return getMethodInfo(classInfo,method);
}
throw new HibernateException("");
}
