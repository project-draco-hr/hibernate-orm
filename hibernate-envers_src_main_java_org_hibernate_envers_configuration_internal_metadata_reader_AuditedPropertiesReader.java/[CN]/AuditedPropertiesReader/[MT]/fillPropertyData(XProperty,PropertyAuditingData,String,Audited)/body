{
  final NotAudited unVer=property.getAnnotation(NotAudited.class);
  if ((unVer != null && !overriddenAuditedProperties.contains(property)) || overriddenNotAuditedProperties.contains(property)) {
    return false;
  }
 else {
    if (globalCfg.isDoNotAuditOptimisticLockingField()) {
      final Version jpaVer=property.getAnnotation(Version.class);
      if (jpaVer != null) {
        return false;
      }
    }
  }
  if (!this.checkAudited(property,propertyData,allClassAudited)) {
    return false;
  }
  final String propertyName=propertyNamePrefix + property.getName();
  propertyData.setName(propertyName);
  propertyData.setModifiedFlagName(MetadataTools.getModifiedFlagPropertyName(propertyName,globalCfg.getModifiedFlagSuffix()));
  propertyData.setBeanName(property.getName());
  propertyData.setAccessType(accessType);
  addPropertyJoinTables(property,propertyData);
  addPropertyAuditingOverrides(property,propertyData);
  if (!processPropertyAuditingOverrides(property,propertyData)) {
    return false;
  }
  addPropertyMapKey(property,propertyData);
  setPropertyAuditMappedBy(property,propertyData);
  setPropertyRelationMappedBy(property,propertyData);
  return true;
}
