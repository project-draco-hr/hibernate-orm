{
  CollectionListeners listeners=new CollectionListeners(getSessions());
  ParentWithCollection parent=createParentWithNoChildren("parent");
  listeners.clear();
  assertEquals(0,parent.getChildren().size());
  Session s=openSession();
  Transaction tx=s.beginTransaction();
  parent=(ParentWithCollection)s.get(parent.getClass(),parent.getId());
  Collection oldCollection=parent.getChildren();
  parent.newChildren(createCollection());
  Child newChild=parent.addChild("new");
  tx.commit();
  s.close();
  int index=0;
  if (((PersistentCollection)oldCollection).wasInitialized()) {
    checkResult(listeners,listeners.getInitializeCollectionListener(),parent,oldCollection,index++);
  }
  checkResult(listeners,listeners.getPreCollectionRemoveListener(),parent,oldCollection,index++);
  checkResult(listeners,listeners.getPostCollectionRemoveListener(),parent,oldCollection,index++);
  if (newChild.hasBidirectionalManyToMany()) {
    checkResult(listeners,listeners.getPreCollectionRecreateListener(),newChild,index++);
    checkResult(listeners,listeners.getPostCollectionRecreateListener(),newChild,index++);
  }
  checkResult(listeners,listeners.getPreCollectionRecreateListener(),parent,index++);
  checkResult(listeners,listeners.getPostCollectionRecreateListener(),parent,index++);
  checkNumberOfResults(listeners,index);
}
