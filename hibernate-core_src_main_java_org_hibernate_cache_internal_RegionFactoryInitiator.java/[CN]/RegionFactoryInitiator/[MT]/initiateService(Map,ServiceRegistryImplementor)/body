{
  Properties p=new Properties();
  if (configurationValues != null) {
    p.putAll(configurationValues);
  }
  boolean useSecondLevelCache=ConfigurationHelper.getBoolean(AvailableSettings.USE_SECOND_LEVEL_CACHE,configurationValues,true);
  boolean useQueryCache=ConfigurationHelper.getBoolean(AvailableSettings.USE_QUERY_CACHE,configurationValues);
  RegionFactory regionFactory=NoCachingRegionFactory.INSTANCE;
  final String setting=ConfigurationHelper.getString(AvailableSettings.CACHE_REGION_FACTORY,configurationValues,null);
  if ((useSecondLevelCache || useQueryCache) && setting != null) {
    try {
      Class<? extends RegionFactory> regionFactoryClass=registry.getService(StrategySelector.class).selectStrategyImplementor(RegionFactory.class,setting);
      try {
        regionFactory=regionFactoryClass.getConstructor(Properties.class).newInstance(p);
      }
 catch (      NoSuchMethodException e) {
        LOG.debugf("%s did not provide constructor accepting java.util.Properties; attempting no-arg constructor.",regionFactoryClass.getSimpleName());
        regionFactory=regionFactoryClass.getConstructor().newInstance();
      }
    }
 catch (    Exception e) {
      throw new HibernateException("could not instantiate RegionFactory [" + setting + "]",e);
    }
  }
  LOG.debugf("Cache region factory : %s",regionFactory.getClass().getName());
  return regionFactory;
}
