{
  persister=locatePersisterForKey(persister);
  validateNaturalId(persister,deletedNaturalIdValues);
  NaturalIdResolutionCache entityNaturalIdResolutionCache=naturalIdResolutionCacheMap.get(persister);
  Object[] sessionCachedNaturalIdValues=null;
  if (entityNaturalIdResolutionCache != null) {
    final CachedNaturalId cachedNaturalId=entityNaturalIdResolutionCache.pkToNaturalIdMap.remove(pk);
    if (cachedNaturalId != null) {
      entityNaturalIdResolutionCache.naturalIdToPkMap.remove(cachedNaturalId);
      sessionCachedNaturalIdValues=cachedNaturalId.getValues();
    }
  }
  if (persister.hasNaturalIdCache()) {
    final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy=persister.getNaturalIdCacheAccessStrategy();
    final NaturalIdCacheKey naturalIdCacheKey=new NaturalIdCacheKey(deletedNaturalIdValues,persister,session());
    naturalIdCacheAccessStrategy.evict(naturalIdCacheKey);
    if (sessionCachedNaturalIdValues != null && !Arrays.equals(sessionCachedNaturalIdValues,deletedNaturalIdValues)) {
      final NaturalIdCacheKey sessionNaturalIdCacheKey=new NaturalIdCacheKey(sessionCachedNaturalIdValues,persister,session());
      naturalIdCacheAccessStrategy.evict(sessionNaturalIdCacheKey);
    }
  }
}
