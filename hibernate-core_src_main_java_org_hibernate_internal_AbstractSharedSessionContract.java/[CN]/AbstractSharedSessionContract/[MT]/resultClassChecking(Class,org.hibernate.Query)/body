{
  final HQLQueryPlan queryPlan=getFactory().getQueryPlanCache().getHQLQueryPlan(hqlQuery.getQueryString(),false,getLoadQueryInfluencers().getEnabledFilters());
  if (queryPlan.getTranslators()[0].isManipulationStatement()) {
    throw new IllegalArgumentException("Update/delete queries cannot be typed");
  }
  if (Object[].class.equals(resultClass)) {
  }
 else   if (Tuple.class.equals(resultClass)) {
    TupleBuilderTransformer tupleTransformer=new TupleBuilderTransformer(hqlQuery);
    hqlQuery.setResultTransformer(tupleTransformer);
  }
 else {
    final Class dynamicInstantiationClass=queryPlan.getDynamicInstantiationResultType();
    if (dynamicInstantiationClass != null) {
      if (!resultClass.isAssignableFrom(dynamicInstantiationClass)) {
        throw new IllegalArgumentException("Mismatch in requested result type [" + resultClass.getName() + "] and actual result type ["+ dynamicInstantiationClass.getName()+ "]");
      }
    }
 else     if (queryPlan.getTranslators()[0].getReturnTypes().length == 1) {
      final Type queryResultType=queryPlan.getTranslators()[0].getReturnTypes()[0];
      if (!resultClass.isAssignableFrom(queryResultType.getReturnedClass())) {
        throw new IllegalArgumentException("Type specified for TypedQuery [" + resultClass.getName() + "] is incompatible with query return type ["+ queryResultType.getReturnedClass()+ "]");
      }
    }
 else {
      throw new IllegalArgumentException("Cannot create TypedQuery for query with more than one return using requested result type [" + resultClass.getName() + "]");
    }
  }
}
