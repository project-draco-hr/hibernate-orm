{
  final Serializable id=entityKey.getIdentifier();
  final Loadable concreteEntityPersister=(Loadable)context.getSession().getFactory().getEntityPersister(concreteEntityTypeName);
  if (log.isTraceEnabled()) {
    log.tracev("Initializing object from ResultSet: {0}",MessageHelper.infoString(concreteEntityPersister,id,context.getSession().getFactory()));
  }
  TwoPhaseLoad.addUninitializedEntity(entityKey,entityInstance,concreteEntityPersister,lockModeToAcquire,!context.getLoadPlan().areLazyAttributesForceFetched(),context.getSession());
  final EntityPersister rootEntityPersister=context.getSession().getFactory().getEntityPersister(concreteEntityPersister.getRootEntityName());
  final Object[] values;
  try {
    values=concreteEntityPersister.hydrate(resultSet,id,entityInstance,(Loadable)entityReference.getEntityPersister(),concreteEntityPersister == rootEntityPersister ? entityReferenceAliases.getColumnAliases().getSuffixedPropertyAliases() : entityReferenceAliases.getColumnAliases().getSuffixedPropertyAliases(concreteEntityPersister),context.getLoadPlan().areLazyAttributesForceFetched(),context.getSession());
    context.getProcessingState(entityReference).registerHydratedState(values);
  }
 catch (  SQLException e) {
    throw context.getSession().getFactory().getJdbcServices().getSqlExceptionHelper().convert(e,"Could not read entity state from ResultSet : " + entityKey);
  }
  final Object rowId;
  try {
    rowId=concreteEntityPersister.hasRowId() ? resultSet.getObject(entityReferenceAliases.getColumnAliases().getRowIdAlias()) : null;
  }
 catch (  SQLException e) {
    throw context.getSession().getFactory().getJdbcServices().getSqlExceptionHelper().convert(e,"Could not read entity row-id from ResultSet : " + entityKey);
  }
  final EntityType entityType=EntityFetch.class.isInstance(entityReference) ? ((EntityFetch)entityReference).getFetchedType() : entityReference.getEntityPersister().getEntityMetamodel().getEntityType();
  if (entityType != null) {
    String ukName=entityType.getRHSUniqueKeyPropertyName();
    if (ukName != null) {
      final int index=((UniqueKeyLoadable)concreteEntityPersister).getPropertyIndex(ukName);
      final Type type=concreteEntityPersister.getPropertyTypes()[index];
      EntityUniqueKey euk=new EntityUniqueKey(entityReference.getEntityPersister().getEntityName(),ukName,type.semiResolve(values[index],context.getSession(),entityInstance),type,concreteEntityPersister.getEntityMode(),context.getSession().getFactory());
      context.getSession().getPersistenceContext().addEntity(euk,entityInstance);
    }
  }
  TwoPhaseLoad.postHydrate(concreteEntityPersister,id,values,rowId,entityInstance,lockModeToAcquire,!context.getLoadPlan().areLazyAttributesForceFetched(),context.getSession());
  context.registerHydratedEntity(entityReference,entityKey,entityInstance);
}
