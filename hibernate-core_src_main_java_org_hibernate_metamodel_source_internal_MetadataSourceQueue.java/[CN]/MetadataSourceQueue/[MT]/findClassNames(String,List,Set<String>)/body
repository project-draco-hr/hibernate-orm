{
  for (  Object entityClass : entityClasses) {
    String entityName;
    if (org.hibernate.metamodel.source.hbm.xml.mapping.Subclass.class.isInstance(entityClass)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.Subclass clazz=org.hibernate.metamodel.source.hbm.xml.mapping.Subclass.class.cast(entityClass);
      names.add(clazz.getEntityName() != null ? clazz.getEntityName() : getClassName(clazz.getName(),defaultPackage));
      findClassNames(defaultPackage,clazz.getSubclass(),names);
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.Class.class.isInstance(entityClass)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.Class clazz=org.hibernate.metamodel.source.hbm.xml.mapping.Class.class.cast(entityClass);
      names.add(clazz.getEntityName() != null ? clazz.getEntityName() : getClassName(clazz.getName(),defaultPackage));
      findClassNames(defaultPackage,clazz.getSubclass(),names);
      findClassNames(defaultPackage,clazz.getJoinedSubclass(),names);
      findClassNames(defaultPackage,clazz.getUnionSubclass(),names);
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.UnionSubclass.class.isInstance(entityClass)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.UnionSubclass clazz=org.hibernate.metamodel.source.hbm.xml.mapping.UnionSubclass.class.cast(entityClass);
      names.add(clazz.getEntityName() != null ? clazz.getEntityName() : getClassName(clazz.getName(),defaultPackage));
      findClassNames(defaultPackage,clazz.getUnionSubclass(),names);
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.JoinedSubclass.class.isInstance(entityClass)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.JoinedSubclass clazz=org.hibernate.metamodel.source.hbm.xml.mapping.JoinedSubclass.class.cast(entityClass);
      names.add(clazz.getEntityName() != null ? clazz.getEntityName() : getClassName(clazz.getName(),defaultPackage));
      findClassNames(defaultPackage,clazz.getJoinedSubclass(),names);
    }
 else {
      throw new InvalidMappingException("unknown type of entity class",entityClass.getClass().getName());
    }
  }
}
