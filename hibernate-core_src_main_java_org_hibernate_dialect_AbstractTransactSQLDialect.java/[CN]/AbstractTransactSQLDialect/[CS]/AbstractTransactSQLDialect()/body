{
  super();
  registerColumnType(Types.BIT,"tinyint");
  registerColumnType(Types.BIGINT,"numeric(19,0)");
  registerColumnType(Types.SMALLINT,"smallint");
  registerColumnType(Types.TINYINT,"tinyint");
  registerColumnType(Types.INTEGER,"int");
  registerColumnType(Types.CHAR,"char(1)");
  registerColumnType(Types.VARCHAR,"varchar($l)");
  registerColumnType(Types.FLOAT,"float");
  registerColumnType(Types.DOUBLE,"double precision");
  registerColumnType(Types.DATE,"datetime");
  registerColumnType(Types.TIME,"datetime");
  registerColumnType(Types.TIMESTAMP,"datetime");
  registerColumnType(Types.VARBINARY,"varbinary($l)");
  registerColumnType(Types.NUMERIC,"numeric($p,$s)");
  registerColumnType(Types.BLOB,"image");
  registerColumnType(Types.CLOB,"text");
  registerFunction("ascii",new StandardSQLFunction("ascii",StandardBasicTypes.INTEGER));
  registerFunction("char",new StandardSQLFunction("char",StandardBasicTypes.CHARACTER));
  registerFunction("len",new StandardSQLFunction("len",StandardBasicTypes.LONG));
  registerFunction("lower",new StandardSQLFunction("lower"));
  registerFunction("upper",new StandardSQLFunction("upper"));
  registerFunction("str",new StandardSQLFunction("str",StandardBasicTypes.STRING));
  registerFunction("ltrim",new StandardSQLFunction("ltrim"));
  registerFunction("rtrim",new StandardSQLFunction("rtrim"));
  registerFunction("reverse",new StandardSQLFunction("reverse"));
  registerFunction("space",new StandardSQLFunction("space",StandardBasicTypes.STRING));
  registerFunction("user",new NoArgSQLFunction("user",StandardBasicTypes.STRING));
  registerFunction("current_timestamp",new NoArgSQLFunction("getdate",StandardBasicTypes.TIMESTAMP));
  registerFunction("current_time",new NoArgSQLFunction("getdate",StandardBasicTypes.TIME));
  registerFunction("current_date",new NoArgSQLFunction("getdate",StandardBasicTypes.DATE));
  registerFunction("getdate",new NoArgSQLFunction("getdate",StandardBasicTypes.TIMESTAMP));
  registerFunction("getutcdate",new NoArgSQLFunction("getutcdate",StandardBasicTypes.TIMESTAMP));
  registerFunction("day",new StandardSQLFunction("day",StandardBasicTypes.INTEGER));
  registerFunction("month",new StandardSQLFunction("month",StandardBasicTypes.INTEGER));
  registerFunction("year",new StandardSQLFunction("year",StandardBasicTypes.INTEGER));
  registerFunction("datename",new StandardSQLFunction("datename",StandardBasicTypes.STRING));
  registerFunction("abs",new StandardSQLFunction("abs"));
  registerFunction("sign",new StandardSQLFunction("sign",StandardBasicTypes.INTEGER));
  registerFunction("acos",new StandardSQLFunction("acos",StandardBasicTypes.DOUBLE));
  registerFunction("asin",new StandardSQLFunction("asin",StandardBasicTypes.DOUBLE));
  registerFunction("atan",new StandardSQLFunction("atan",StandardBasicTypes.DOUBLE));
  registerFunction("cos",new StandardSQLFunction("cos",StandardBasicTypes.DOUBLE));
  registerFunction("cot",new StandardSQLFunction("cot",StandardBasicTypes.DOUBLE));
  registerFunction("exp",new StandardSQLFunction("exp",StandardBasicTypes.DOUBLE));
  registerFunction("log",new StandardSQLFunction("log",StandardBasicTypes.DOUBLE));
  registerFunction("log10",new StandardSQLFunction("log10",StandardBasicTypes.DOUBLE));
  registerFunction("sin",new StandardSQLFunction("sin",StandardBasicTypes.DOUBLE));
  registerFunction("sqrt",new StandardSQLFunction("sqrt",StandardBasicTypes.DOUBLE));
  registerFunction("tan",new StandardSQLFunction("tan",StandardBasicTypes.DOUBLE));
  registerFunction("pi",new NoArgSQLFunction("pi",StandardBasicTypes.DOUBLE));
  registerFunction("square",new StandardSQLFunction("square"));
  registerFunction("rand",new StandardSQLFunction("rand",StandardBasicTypes.FLOAT));
  registerFunction("radians",new StandardSQLFunction("radians",StandardBasicTypes.DOUBLE));
  registerFunction("degrees",new StandardSQLFunction("degrees",StandardBasicTypes.DOUBLE));
  registerFunction("round",new StandardSQLFunction("round"));
  registerFunction("ceiling",new StandardSQLFunction("ceiling"));
  registerFunction("floor",new StandardSQLFunction("floor"));
  registerFunction("isnull",new StandardSQLFunction("isnull"));
  registerFunction("concat",new VarArgsSQLFunction(StandardBasicTypes.STRING,"(","+",")"));
  registerFunction("length",new StandardSQLFunction("len",StandardBasicTypes.INTEGER));
  registerFunction("trim",new SQLFunctionTemplate(StandardBasicTypes.STRING,"ltrim(rtrim(?1))"));
  registerFunction("locate",new CharIndexFunction());
  getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE,NO_BATCH);
}
