{
  SessionImplementor session=event.getSession();
  EntityEntry entry=event.getEntityEntry();
  EntityPersister persister=entry.getPersister();
  Object entity=event.getEntity();
  final Object[] values=event.getPropertyValues();
  final boolean intercepted=invokeInterceptor(session,entity,entry,values,persister);
  if (intercepted && event.isDirtyCheckPossible() && !event.isDirtyCheckHandledByInterceptor()) {
    int[] dirtyProperties;
    if (event.hasDatabaseSnapshot()) {
      dirtyProperties=persister.findModified(event.getDatabaseSnapshot(),values,entity,session);
    }
 else {
      dirtyProperties=persister.findDirty(values,entry.getLoadedState(),entity,session);
    }
    event.setDirtyProperties(dirtyProperties);
  }
  return intercepted;
}
