{
  EntityManager em=getOrCreateEntityManager();
  em.getTransaction().begin();
  for (int i=0; i < 10; i++) {
    Employee employee=new Employee("John" + i,20d + i);
    em.persist(employee);
  }
  em.getTransaction().commit();
  em.close();
  HibernateEntityManagerFactory hemf=(HibernateEntityManagerFactory)entityManagerFactory();
  Statistics stats=hemf.getSessionFactory().getStatistics();
  assertEquals(0,stats.getQueryCacheHitCount());
  assertEquals(0,stats.getQueryCacheMissCount());
  assertEquals(0,stats.getQueryCachePutCount());
  assertEquals(0,stats.getSecondLevelCacheHitCount());
  assertEquals(0,stats.getSecondLevelCacheMissCount());
  assertEquals(10,stats.getSecondLevelCachePutCount());
  stats.clear();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  TypedQuery<Employee> query=em.createQuery("select e from Employee e",Employee.class).setHint(QueryHints.HINT_CACHEABLE,true);
  List<Employee> employees=query.getResultList();
  assertEquals(10,employees.size());
  assertEquals(0,stats.getQueryCacheHitCount());
  assertEquals(1,stats.getQueryCacheMissCount());
  assertEquals(1,stats.getQueryCachePutCount());
  assertEquals(0,stats.getSecondLevelCacheHitCount());
  assertEquals(0,stats.getSecondLevelCacheMissCount());
  assertEquals(0,stats.getSecondLevelCachePutCount());
  em.getTransaction().commit();
  em.close();
  stats.clear();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  query=em.createQuery("select e from Employee e",Employee.class).setHint(QueryHints.HINT_CACHEABLE,true);
  employees=query.getResultList();
  assertEquals(10,employees.size());
  assertEquals(1,stats.getQueryCacheHitCount());
  assertEquals(0,stats.getQueryCacheMissCount());
  assertEquals(0,stats.getQueryCachePutCount());
  assertEquals(10,stats.getSecondLevelCacheHitCount());
  assertEquals(0,stats.getSecondLevelCacheMissCount());
  assertEquals(0,stats.getSecondLevelCachePutCount());
  em.getTransaction().commit();
  em.close();
  entityManagerFactory().getCache().evictAll();
  stats.clear();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  query=em.createQuery("select e from Employee e",Employee.class).setHint(QueryHints.HINT_CACHEABLE,true);
  employees=query.getResultList();
  assertEquals(10,employees.size());
  assertEquals(1,stats.getQueryCacheHitCount());
  assertEquals(0,stats.getQueryCacheMissCount());
  assertEquals(0,stats.getQueryCachePutCount());
  assertEquals(0,stats.getSecondLevelCacheHitCount());
  assertEquals(10,stats.getSecondLevelCacheMissCount());
  assertEquals(10,stats.getSecondLevelCachePutCount());
  em.getTransaction().commit();
  em.close();
  stats.clear();
  em=getOrCreateEntityManager();
  em.getEntityManagerFactory().getCache().evictAll();
  em.unwrap(HibernateEntityManagerImplementor.class).getFactory().getSessionFactory().getCache().evictQueryRegions();
  em.getTransaction().begin();
  query=em.createQuery("select e from Employee e",Employee.class).setHint(QueryHints.HINT_CACHEABLE,true);
  employees=query.getResultList();
  assertEquals(10,employees.size());
  assertEquals(0,stats.getQueryCacheHitCount());
  assertEquals(1,stats.getQueryCacheMissCount());
  assertEquals(1,stats.getQueryCachePutCount());
  assertEquals(0,stats.getSecondLevelCacheHitCount());
  assertEquals(0,stats.getSecondLevelCacheMissCount());
  assertEquals(10,stats.getSecondLevelCachePutCount());
  em.createQuery("delete from Employee").executeUpdate();
  em.getTransaction().commit();
  em.close();
}
