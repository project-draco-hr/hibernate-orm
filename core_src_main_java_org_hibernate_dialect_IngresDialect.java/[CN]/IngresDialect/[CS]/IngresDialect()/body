{
  super();
  registerColumnType(Types.BIT,"tinyint");
  registerColumnType(Types.TINYINT,"tinyint");
  registerColumnType(Types.SMALLINT,"smallint");
  registerColumnType(Types.INTEGER,"integer");
  registerColumnType(Types.BIGINT,"bigint");
  registerColumnType(Types.REAL,"real");
  registerColumnType(Types.FLOAT,"float");
  registerColumnType(Types.DOUBLE,"float");
  registerColumnType(Types.NUMERIC,"decimal($p, $s)");
  registerColumnType(Types.DECIMAL,"decimal($p, $s)");
  registerColumnType(Types.BINARY,32000,"byte($l)");
  registerColumnType(Types.BINARY,"long byte");
  registerColumnType(Types.VARBINARY,32000,"varbyte($l)");
  registerColumnType(Types.VARBINARY,"long byte");
  registerColumnType(Types.LONGVARBINARY,"long byte");
  registerColumnType(Types.CHAR,"char(1)");
  registerColumnType(Types.VARCHAR,32000,"varchar($l)");
  registerColumnType(Types.VARCHAR,"long varchar");
  registerColumnType(Types.LONGVARCHAR,"long varchar");
  registerColumnType(Types.DATE,"date");
  registerColumnType(Types.TIME,"time with time zone");
  registerColumnType(Types.TIMESTAMP,"timestamp with time zone");
  registerColumnType(Types.BLOB,"blob");
  registerColumnType(Types.CLOB,"clob");
  registerFunction("abs",new StandardSQLFunction("abs"));
  registerFunction("atan",new StandardSQLFunction("atan",Hibernate.DOUBLE));
  registerFunction("bit_add",new StandardSQLFunction("bit_add"));
  registerFunction("bit_and",new StandardSQLFunction("bit_and"));
  registerFunction("bit_length",new SQLFunctionTemplate(Hibernate.INTEGER,"octet_length(hex(?1))*4"));
  registerFunction("bit_not",new StandardSQLFunction("bit_not"));
  registerFunction("bit_or",new StandardSQLFunction("bit_or"));
  registerFunction("bit_xor",new StandardSQLFunction("bit_xor"));
  registerFunction("character_length",new StandardSQLFunction("character_length",Hibernate.LONG));
  registerFunction("charextract",new StandardSQLFunction("charextract",Hibernate.STRING));
  registerFunction("concat",new VarArgsSQLFunction(Hibernate.STRING,"(","+",")"));
  registerFunction("cos",new StandardSQLFunction("cos",Hibernate.DOUBLE));
  registerFunction("current_user",new NoArgSQLFunction("current_user",Hibernate.STRING,false));
  registerFunction("current_time",new NoArgSQLFunction("date('now')",Hibernate.TIMESTAMP,false));
  registerFunction("current_timestamp",new NoArgSQLFunction("date('now')",Hibernate.TIMESTAMP,false));
  registerFunction("current_date",new NoArgSQLFunction("date('now')",Hibernate.TIMESTAMP,false));
  registerFunction("date_trunc",new StandardSQLFunction("date_trunc",Hibernate.TIMESTAMP));
  registerFunction("day",new StandardSQLFunction("day",Hibernate.INTEGER));
  registerFunction("dba",new NoArgSQLFunction("dba",Hibernate.STRING,true));
  registerFunction("dow",new StandardSQLFunction("dow",Hibernate.STRING));
  registerFunction("extract",new SQLFunctionTemplate(Hibernate.INTEGER,"date_part('?1', ?3)"));
  registerFunction("exp",new StandardSQLFunction("exp",Hibernate.DOUBLE));
  registerFunction("gmt_timestamp",new StandardSQLFunction("gmt_timestamp",Hibernate.STRING));
  registerFunction("hash",new StandardSQLFunction("hash",Hibernate.INTEGER));
  registerFunction("hex",new StandardSQLFunction("hex",Hibernate.STRING));
  registerFunction("hour",new StandardSQLFunction("hour",Hibernate.INTEGER));
  registerFunction("initial_user",new NoArgSQLFunction("initial_user",Hibernate.STRING,false));
  registerFunction("intextract",new StandardSQLFunction("intextract",Hibernate.INTEGER));
  registerFunction("left",new StandardSQLFunction("left",Hibernate.STRING));
  registerFunction("locate",new SQLFunctionTemplate(Hibernate.LONG,"locate(?1, ?2)"));
  registerFunction("length",new StandardSQLFunction("length",Hibernate.LONG));
  registerFunction("ln",new StandardSQLFunction("ln",Hibernate.DOUBLE));
  registerFunction("log",new StandardSQLFunction("log",Hibernate.DOUBLE));
  registerFunction("lower",new StandardSQLFunction("lower"));
  registerFunction("lowercase",new StandardSQLFunction("lowercase"));
  registerFunction("minute",new StandardSQLFunction("minute",Hibernate.INTEGER));
  registerFunction("month",new StandardSQLFunction("month",Hibernate.INTEGER));
  registerFunction("octet_length",new StandardSQLFunction("octet_length",Hibernate.LONG));
  registerFunction("pad",new StandardSQLFunction("pad",Hibernate.STRING));
  registerFunction("position",new StandardSQLFunction("position",Hibernate.LONG));
  registerFunction("power",new StandardSQLFunction("power",Hibernate.DOUBLE));
  registerFunction("random",new NoArgSQLFunction("random",Hibernate.LONG,true));
  registerFunction("randomf",new NoArgSQLFunction("randomf",Hibernate.DOUBLE,true));
  registerFunction("right",new StandardSQLFunction("right",Hibernate.STRING));
  registerFunction("session_user",new NoArgSQLFunction("session_user",Hibernate.STRING,false));
  registerFunction("second",new StandardSQLFunction("second",Hibernate.INTEGER));
  registerFunction("size",new NoArgSQLFunction("size",Hibernate.LONG,true));
  registerFunction("squeeze",new StandardSQLFunction("squeeze"));
  registerFunction("sin",new StandardSQLFunction("sin",Hibernate.DOUBLE));
  registerFunction("soundex",new StandardSQLFunction("soundex",Hibernate.STRING));
  registerFunction("sqrt",new StandardSQLFunction("sqrt",Hibernate.DOUBLE));
  registerFunction("substring",new SQLFunctionTemplate(Hibernate.STRING,"substring(?1 FROM ?2 FOR ?3)"));
  registerFunction("system_user",new NoArgSQLFunction("system_user",Hibernate.STRING,false));
  registerFunction("unhex",new StandardSQLFunction("unhex",Hibernate.STRING));
  registerFunction("upper",new StandardSQLFunction("upper"));
  registerFunction("uppercase",new StandardSQLFunction("uppercase"));
  registerFunction("user",new NoArgSQLFunction("user",Hibernate.STRING,false));
  registerFunction("usercode",new NoArgSQLFunction("usercode",Hibernate.STRING,true));
  registerFunction("username",new NoArgSQLFunction("username",Hibernate.STRING,true));
  registerFunction("uuid_create",new StandardSQLFunction("uuid_create",Hibernate.BYTE));
  registerFunction("uuid_compare",new StandardSQLFunction("uuid_compare",Hibernate.INTEGER));
  registerFunction("uuid_from_char",new StandardSQLFunction("uuid_from_char",Hibernate.BYTE));
  registerFunction("uuid_to_char",new StandardSQLFunction("uuid_to_char",Hibernate.STRING));
  registerFunction("year",new StandardSQLFunction("year",Hibernate.INTEGER));
  getDefaultProperties().setProperty(Environment.USE_GET_GENERATED_KEYS,"false");
}
