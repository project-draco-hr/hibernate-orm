{
  EntityPersister persister=sessionFactory().getEntityPersister(Entity.class.getName());
  assertClassAssignability(TableGenerator.class,persister.getIdentifierGenerator().getClass());
  TableGenerator generator=(TableGenerator)persister.getIdentifierGenerator();
  assertClassAssignability(PooledOptimizer.class,generator.getOptimizer().getClass());
  PooledOptimizer optimizer=(PooledOptimizer)generator.getOptimizer();
  int increment=optimizer.getIncrementSize();
  Entity[] entities=new Entity[increment + 1];
  Session s=openSession();
  s.beginTransaction();
  for (int i=0; i < increment; i++) {
    entities[i]=new Entity("" + (i + 1));
    s.save(entities[i]);
    assertEquals(2,generator.getTableAccessCount());
    assertEquals(increment + 1,((BasicHolder)optimizer.getLastSourceValue()).getActualLongValue());
    assertEquals(i + 1,((BasicHolder)optimizer.getLastValue()).getActualLongValue());
    assertEquals(increment + 1,((BasicHolder)optimizer.getLastSourceValue()).getActualLongValue());
  }
  entities[increment]=new Entity("" + increment);
  s.save(entities[increment]);
  assertEquals(3,generator.getTableAccessCount());
  assertEquals((increment * 2) + 1,((BasicHolder)optimizer.getLastSourceValue()).getActualLongValue());
  assertEquals(increment + 1,((BasicHolder)optimizer.getLastValue()).getActualLongValue());
  s.getTransaction().commit();
  s.beginTransaction();
  for (int i=0; i < entities.length; i++) {
    assertEquals(i + 1,entities[i].getId().intValue());
    s.delete(entities[i]);
  }
  s.getTransaction().commit();
  s.close();
}
