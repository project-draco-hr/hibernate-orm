{
  Session session=openSession();
  Transaction tx=session.beginTransaction();
  TestObject obj=new TestObject();
  String uniq="uniq" + System.currentTimeMillis();
  obj.setText("XyZ " + uniq + " blablabla");
  session.save(obj);
  session.flush();
  tx.commit();
  session.close();
  String pattern="XyZ " + uniq + "%";
  session=openSession();
  tx=session.beginTransaction();
  List objects=session.createCriteria(TestObject.class).add(Restrictions.like("text",pattern)).list();
  assertEquals(1,objects.size());
  session.clear();
  objects=session.createCriteria(TestObject.class).add(Restrictions.like("text",pattern).ignoreCase()).list();
  assertEquals(1,objects.size());
  session.clear();
  if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof PostgreSQLDialect) && !(getDialect() instanceof PostgreSQL81Dialect)) {
    objects=session.createCriteria(TestObject.class).add(StringExpression.stringExpression("text",pattern,true)).list();
    assertEquals(1,objects.size());
    session.clear();
    objects=session.createCriteria(TestObject.class).add(StringExpression.stringExpression("text",pattern,false)).list();
    assertEquals(1,objects.size());
  }
  tx.rollback();
  session.close();
}
