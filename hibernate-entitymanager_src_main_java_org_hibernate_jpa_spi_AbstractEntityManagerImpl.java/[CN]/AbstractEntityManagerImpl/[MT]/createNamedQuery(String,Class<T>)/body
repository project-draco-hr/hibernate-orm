{
  checkOpen();
  try {
    org.hibernate.Query namedQuery=internalGetSession().getNamedQuery(name);
    final SessionFactoryImplementor factoryImplementor=entityManagerFactory.getSessionFactory();
    final NamedSQLQueryDefinition queryDefinition=factoryImplementor.getNamedSQLQuery(name);
    try {
      if (queryDefinition != null) {
        Class<?> actualReturnedClass;
        final NativeSQLQueryReturn[] queryReturns;
        if (queryDefinition.getQueryReturns() != null) {
          queryReturns=queryDefinition.getQueryReturns();
        }
 else         if (queryDefinition.getResultSetRef() != null) {
          final ResultSetMappingDefinition rsMapping=factoryImplementor.getResultSetMapping(queryDefinition.getResultSetRef());
          queryReturns=rsMapping.getQueryReturns();
        }
 else {
          throw new AssertionFailure("Unsupported named query model. Please report the bug in Hibernate EntityManager");
        }
        if (queryReturns.length > 1) {
          throw new IllegalArgumentException("Cannot create TypedQuery for query with more than one return");
        }
        final NativeSQLQueryReturn nativeSQLQueryReturn=queryReturns[0];
        if (nativeSQLQueryReturn instanceof NativeSQLQueryRootReturn) {
          final String entityClassName=((NativeSQLQueryRootReturn)nativeSQLQueryReturn).getReturnEntityName();
          try {
            actualReturnedClass=ReflectHelper.classForName(entityClassName,AbstractEntityManagerImpl.class);
          }
 catch (          ClassNotFoundException e) {
            throw new AssertionFailure("Unable to instantiate class declared on named native query: " + name + " "+ entityClassName);
          }
          if (!resultClass.isAssignableFrom(actualReturnedClass)) {
            throw buildIncompatibleException(resultClass,actualReturnedClass);
          }
        }
 else {
        }
      }
 else {
        resultClassChecking(resultClass,namedQuery);
      }
      return new QueryImpl<T>(namedQuery,this);
    }
 catch (    RuntimeException e) {
      throw convert(e);
    }
  }
 catch (  MappingException e) {
    throw convert(new IllegalArgumentException("Named query not found: " + name));
  }
}
