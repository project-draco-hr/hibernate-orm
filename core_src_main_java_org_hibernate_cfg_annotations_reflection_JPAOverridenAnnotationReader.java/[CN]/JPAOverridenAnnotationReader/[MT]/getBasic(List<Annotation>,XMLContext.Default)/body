{
  for (  Element element : elementsForProperty) {
    if ("basic".equals(element.getName())) {
      Annotation annotation=buildColumns(element);
      addIfNotNull(annotationList,annotation);
      getAccessType(annotationList,element);
      getTemporal(annotationList,element);
      getLob(annotationList,element);
      getEnumerated(annotationList,element);
      AnnotationDescriptor basic=new AnnotationDescriptor(Basic.class);
      getFetchType(basic,element);
      copyBooleanAttribute(basic,element,"optional");
      annotationList.add(AnnotationFactory.create(basic));
    }
  }
  if (elementsForProperty.size() == 0 && defaults.canUseJavaAnnotations()) {
    Annotation annotation=getJavaAnnotation(Basic.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(Lob.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(Enumerated.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(Temporal.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(Column.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(Columns.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(AttributeOverride.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(AttributeOverrides.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(AssociationOverride.class);
    addIfNotNull(annotationList,annotation);
    annotation=getJavaAnnotation(AssociationOverrides.class);
    addIfNotNull(annotationList,annotation);
  }
}
