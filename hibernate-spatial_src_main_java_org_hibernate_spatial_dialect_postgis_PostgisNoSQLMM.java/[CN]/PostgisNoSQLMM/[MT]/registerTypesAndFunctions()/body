{
  registerColumnType(PGGeometryTypeDescriptor.INSTANCE.getSqlType(),PGGeometryTypeDescriptor.INSTANCE.getTypeName());
  registerFunction("dimension",new StandardSQLFunction("dimension",StandardBasicTypes.INTEGER));
  registerFunction("geometrytype",new StandardSQLFunction("geometrytype",StandardBasicTypes.STRING));
  registerFunction("srid",new StandardSQLFunction("srid",StandardBasicTypes.INTEGER));
  registerFunction("envelope",new StandardSQLFunction("envelope",new JTSGeometryType()));
  registerFunction("astext",new StandardSQLFunction("astext",StandardBasicTypes.STRING));
  registerFunction("asbinary",new StandardSQLFunction("asbinary",StandardBasicTypes.BINARY));
  registerFunction("isempty",new StandardSQLFunction("isempty",StandardBasicTypes.BOOLEAN));
  registerFunction("issimple",new StandardSQLFunction("issimple",StandardBasicTypes.BOOLEAN));
  registerFunction("boundary",new StandardSQLFunction("boundary",new JTSGeometryType()));
  registerFunction("overlaps",new StandardSQLFunction("overlaps",StandardBasicTypes.BOOLEAN));
  registerFunction("intersects",new StandardSQLFunction("intersects",StandardBasicTypes.BOOLEAN));
  registerFunction("equals",new StandardSQLFunction("equals",StandardBasicTypes.BOOLEAN));
  registerFunction("contains",new StandardSQLFunction("contains",StandardBasicTypes.BOOLEAN));
  registerFunction("crosses",new StandardSQLFunction("crosses",StandardBasicTypes.BOOLEAN));
  registerFunction("disjoint",new StandardSQLFunction("disjoint",StandardBasicTypes.BOOLEAN));
  registerFunction("touches",new StandardSQLFunction("touches",StandardBasicTypes.BOOLEAN));
  registerFunction("within",new StandardSQLFunction("within",StandardBasicTypes.BOOLEAN));
  registerFunction("relate",new StandardSQLFunction("relate",StandardBasicTypes.BOOLEAN));
  registerFunction("distance",new StandardSQLFunction("distance",StandardBasicTypes.DOUBLE));
  registerFunction("buffer",new StandardSQLFunction("buffer",JTSGeometryType.INSTANCE));
  registerFunction("convexhull",new StandardSQLFunction("convexhull",JTSGeometryType.INSTANCE));
  registerFunction("difference",new StandardSQLFunction("difference",JTSGeometryType.INSTANCE));
  registerFunction("intersection",new StandardSQLFunction("intersection",new JTSGeometryType()));
  registerFunction("symdifference",new StandardSQLFunction("symdifference",JTSGeometryType.INSTANCE));
  registerFunction("geomunion",new StandardSQLFunction("geomunion",JTSGeometryType.INSTANCE));
  registerFunction("extent",new StandardSQLFunction("extent",JTSGeometryType.INSTANCE));
  registerFunction("transform",new StandardSQLFunction("transform",JTSGeometryType.INSTANCE));
}
