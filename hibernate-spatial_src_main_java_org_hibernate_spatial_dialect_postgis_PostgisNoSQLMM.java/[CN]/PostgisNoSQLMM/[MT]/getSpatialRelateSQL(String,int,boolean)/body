{
switch (spatialRelation) {
case SpatialRelation.WITHIN:
    return hasFilter ? "(" + columnName + " && ?  AND   within("+ columnName+ ", ?))" : " within(" + columnName + ",?)";
case SpatialRelation.CONTAINS:
  return hasFilter ? "(" + columnName + " && ? AND contains("+ columnName+ ", ?))" : " contains(" + columnName + ", ?)";
case SpatialRelation.CROSSES:
return hasFilter ? "(" + columnName + " && ? AND crosses("+ columnName+ ", ?))" : " crosses(" + columnName + ", ?)";
case SpatialRelation.OVERLAPS:
return hasFilter ? "(" + columnName + " && ? AND overlaps("+ columnName+ ", ?))" : " overlaps(" + columnName + ", ?)";
case SpatialRelation.DISJOINT:
return hasFilter ? "(" + columnName + " && ? AND disjoint("+ columnName+ ", ?))" : " disjoint(" + columnName + ", ?)";
case SpatialRelation.INTERSECTS:
return hasFilter ? "(" + columnName + " && ? AND intersects("+ columnName+ ", ?))" : " intersects(" + columnName + ", ?)";
case SpatialRelation.TOUCHES:
return hasFilter ? "(" + columnName + " && ? AND touches("+ columnName+ ", ?))" : " touches(" + columnName + ", ?)";
case SpatialRelation.EQUALS:
return hasFilter ? "(" + columnName + " && ? AND equals("+ columnName+ ", ?))" : " equals(" + columnName + ", ?)";
default :
throw new IllegalArgumentException("Spatial relation is not known by this dialect");
}
}
