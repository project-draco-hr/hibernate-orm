{
  PersistentClass referencedClass=((OneToMany)collectionValue.getElement()).getAssociatedClass();
  String mappedByCommon=getMappedByCommon(referencedClass);
  if (mappedByCommon != null) {
    return mappedByCommon;
  }
  Iterator<Property> assocClassProps=referencedClass.getPropertyIterator();
  while (assocClassProps.hasNext()) {
    Property property=assocClassProps.next();
    if (Tools.iteratorsContentEqual(property.getValue().getColumnIterator(),collectionValue.getKey().getColumnIterator())) {
      return property.getName();
    }
  }
  throw new MappingException("Unable to read the mapped by attribute for " + propertyName + " in "+ referencingEntityName+ "!");
}
