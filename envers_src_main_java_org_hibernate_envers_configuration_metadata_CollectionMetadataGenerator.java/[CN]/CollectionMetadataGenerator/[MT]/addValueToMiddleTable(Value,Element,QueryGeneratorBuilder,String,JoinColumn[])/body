{
  Type type=value.getType();
  if (type instanceof ManyToOneType) {
    String prefixRelated=prefix + "_";
    String referencedEntityName=getReferencedEntityName(value);
    EntityConfiguration referencedEntityConfiguration=mainGenerator.getEntitiesConfigurations().get(referencedEntityName);
    if (referencedEntityConfiguration == null) {
      throwRelationNotAudited(referencedEntityName);
      throw new AssertionError();
    }
    IdMappingData referencedIdMapping=referencedEntityConfiguration.getIdMappingData();
    if (xmlMapping != null) {
      addRelatedToXmlMapping(xmlMapping,prefixRelated,joinColumns != null && joinColumns.length > 0 ? MetadataTools.getColumnNameIterator(joinColumns) : MetadataTools.getColumnNameIterator(value.getColumnIterator()),referencedIdMapping);
    }
    MiddleIdData referencedIdData=new MiddleIdData(mainGenerator.getVerEntCfg(),referencedIdMapping,prefixRelated,referencedEntityName);
    queryGeneratorBuilder.addRelation(referencedIdData);
    return new MiddleComponentData(new MiddleRelatedComponentMapper(referencedIdData),queryGeneratorBuilder.getCurrentIndex());
  }
 else {
    boolean mapped=mainGenerator.getBasicMetadataGenerator().addBasic(xmlMapping,new PropertyAuditingData(prefix,"field",ModificationStore.FULL),value,null,true,true);
    if (mapped) {
      return new MiddleComponentData(new MiddleSimpleComponentMapper(mainGenerator.getVerEntCfg(),prefix),0);
    }
 else {
      mainGenerator.throwUnsupportedTypeException(type,referencingEntityName,propertyName);
      throw new AssertionError();
    }
  }
}
