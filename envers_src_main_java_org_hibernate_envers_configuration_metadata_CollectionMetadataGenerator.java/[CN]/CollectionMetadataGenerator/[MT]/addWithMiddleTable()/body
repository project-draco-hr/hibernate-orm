{
  String auditMiddleTableName;
  String auditMiddleEntityName;
  if (!StringTools.isEmpty(propertyAuditingData.getJoinTable().name())) {
    auditMiddleTableName=propertyAuditingData.getJoinTable().name();
    auditMiddleEntityName=propertyAuditingData.getJoinTable().name();
  }
 else {
    String middleTableName=getMiddleTableName(propertyValue,referencingEntityName);
    auditMiddleTableName=mainGenerator.getVerEntCfg().getAuditTableName(null,middleTableName);
    auditMiddleEntityName=mainGenerator.getVerEntCfg().getAuditEntityName(middleTableName);
  }
  Element middleEntityXml;
  if (!propertyValue.isInverse()) {
    auditMiddleEntityName=mainGenerator.getAuditEntityNameRegister().createUnique(auditMiddleEntityName);
    mainGenerator.getAuditEntityNameRegister().register(auditMiddleEntityName);
    middleEntityXml=createMiddleEntityXml(auditMiddleTableName,auditMiddleEntityName,propertyValue.getWhere());
  }
 else {
    middleEntityXml=null;
  }
  IdMappingData referencingIdMapping=referencingEntityConfiguration.getIdMappingData();
  String mappedBy;
  String referencingPrefixRelated;
  String referencedPrefix;
  if (propertyValue.isInverse()) {
    mappedBy=getMappedBy(propertyValue.getCollectionTable(),mainGenerator.getCfg().getClassMapping(referencedEntityName));
    referencingPrefixRelated=mappedBy + "_";
    referencedPrefix=StringTools.getLastComponent(referencedEntityName);
  }
 else {
    mappedBy=null;
    referencingPrefixRelated=StringTools.getLastComponent(referencingEntityName) + "_";
    referencedPrefix=referencedEntityName == null ? "element" : propertyName;
  }
  MiddleIdData referencingIdData=createMiddleIdData(referencingIdMapping,referencingPrefixRelated,referencingEntityName);
  QueryGeneratorBuilder queryGeneratorBuilder=new QueryGeneratorBuilder(mainGenerator.getGlobalCfg(),mainGenerator.getVerEntCfg(),referencingIdData,auditMiddleEntityName);
  if (middleEntityXml != null) {
    addRelatedToXmlMapping(middleEntityXml,referencingPrefixRelated,MetadataTools.getColumnNameIterator(propertyValue.getKey().getColumnIterator()),referencingIdMapping);
  }
  MiddleComponentData elementComponentData=addValueToMiddleTable(propertyValue.getElement(),middleEntityXml,queryGeneratorBuilder,referencedPrefix,propertyAuditingData.getJoinTable().inverseJoinColumns());
  MiddleComponentData indexComponentData=addIndex(middleEntityXml,queryGeneratorBuilder);
  RelationQueryGenerator queryGenerator=queryGeneratorBuilder.build(elementComponentData,indexComponentData);
  CommonCollectionMapperData commonCollectionMapperData=new CommonCollectionMapperData(mainGenerator.getVerEntCfg(),auditMiddleEntityName,propertyAuditingData.getPropertyData(),referencingIdData,queryGenerator);
  addMapper(commonCollectionMapperData,elementComponentData,indexComponentData);
  storeMiddleEntityRelationInformation(mappedBy);
}
