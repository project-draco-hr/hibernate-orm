{
  MCoordinate coord=new MCoordinate();
  coord.x=getNextNumber();
  coord.y=getNextNumber();
  Double thirdOrdinateValue=null;
  Double fourthOrdinateValue=null;
  if (this.dimension == 3) {
    thirdOrdinateValue=getNextNumber();
  }
 else   if (this.dimension == 4) {
    thirdOrdinateValue=getNextNumber();
    fourthOrdinateValue=getNextNumber();
  }
 else   if (this.dimension < 0) {
    if (isNumberNext()) {
      thirdOrdinateValue=getNextNumber();
    }
    if (isNumberNext()) {
      fourthOrdinateValue=getNextNumber();
    }
    if (fourthOrdinateValue != null) {
      this.dimension=4;
      setHasM(true);
    }
 else     if (thirdOrdinateValue != null) {
      this.dimension=3;
      setHasM(Boolean.TRUE.equals(this.hasM));
    }
 else {
      this.dimension=2;
      setHasM(false);
    }
  }
switch (this.dimension) {
case 2:
    break;
case 3:
  if (this.hasM) {
    coord.m=thirdOrdinateValue;
  }
 else {
    coord.z=thirdOrdinateValue;
  }
break;
case 4:
if (this.hasM) {
coord.z=thirdOrdinateValue;
coord.m=fourthOrdinateValue;
}
 else {
throw new ParseException("Unsupported geometry dimension.");
}
break;
default :
throw new ParseException("Unsupported geometry dimension.");
}
precisionModel.makePrecise(coord);
return coord;
}
