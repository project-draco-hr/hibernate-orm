{
  if (ann != null) {
    if (BinderHelper.isDefault(mappedBy)) {
      throw new AnnotationException("Illegal attempt to define a @JoinColumn with a mappedBy association: " + BinderHelper.getRelativePath(propertyHolder,propertyName));
    }
    Ejb3JoinColumn joinColumn=new Ejb3JoinColumn();
    joinColumn.setJoinAnnotation(ann,null);
    if (StringHelper.isEmpty(joinColumn.getLogicalColumnName()) && !StringHelper.isEmpty(suffixForDefaultColumnName)) {
      joinColumn.setLogicalColumnName(propertyName + suffixForDefaultColumnName);
    }
    joinColumn.setJoins(joins);
    joinColumn.setPropertyHolder(propertyHolder);
    joinColumn.setPropertyName(BinderHelper.getRelativePath(propertyHolder,propertyName));
    joinColumn.setImplicit(false);
    joinColumn.setMappings(mappings);
    joinColumn.bind();
    return joinColumn;
  }
 else {
    Ejb3JoinColumn joinColumn=new Ejb3JoinColumn();
    joinColumn.setMappedBy(mappedBy);
    joinColumn.setJoins(joins);
    joinColumn.setPropertyHolder(propertyHolder);
    joinColumn.setPropertyName(BinderHelper.getRelativePath(propertyHolder,propertyName));
    if (!StringHelper.isEmpty(suffixForDefaultColumnName)) {
      joinColumn.setLogicalColumnName(propertyName + suffixForDefaultColumnName);
      joinColumn.setImplicit(false);
    }
 else {
      joinColumn.setImplicit(true);
    }
    joinColumn.setMappings(mappings);
    joinColumn.bind();
    return joinColumn;
  }
}
