{
  prepareForUse(targetedPersister,session);
  try {
    PreparedStatement ps=null;
    int resultCount=0;
    try {
      try {
        ps=session.getJdbcCoordinator().getStatementPreparer().prepareStatement(idInsertSelect,false);
        int pos=1;
        pos+=handlePrependedParametersOnIdSelection(ps,session,pos);
        for (        ParameterSpecification parameterSpecification : idSelectParameterSpecifications) {
          pos+=parameterSpecification.bind(ps,queryParameters,session,pos);
        }
        resultCount=session.getJdbcCoordinator().getResultSetReturn().executeUpdate(ps);
      }
  finally {
        if (ps != null) {
          session.getJdbcCoordinator().getResourceRegistry().release(ps);
          session.getJdbcCoordinator().afterStatementExecution();
        }
      }
    }
 catch (    SQLException e) {
      throw convert(e,"could not insert/select ids for bulk delete",idInsertSelect);
    }
    for (    String delete : deletes) {
      try {
        try {
          ps=session.getJdbcCoordinator().getStatementPreparer().prepareStatement(delete,false);
          handleAddedParametersOnDelete(ps,session);
          session.getJdbcCoordinator().getResultSetReturn().executeUpdate(ps);
        }
  finally {
          if (ps != null) {
            session.getJdbcCoordinator().getResourceRegistry().release(ps);
            session.getJdbcCoordinator().afterStatementExecution();
          }
        }
      }
 catch (      SQLException e) {
        throw convert(e,"error performing bulk delete",delete);
      }
    }
    return resultCount;
  }
  finally {
    releaseFromUse(targetedPersister,session);
  }
}
