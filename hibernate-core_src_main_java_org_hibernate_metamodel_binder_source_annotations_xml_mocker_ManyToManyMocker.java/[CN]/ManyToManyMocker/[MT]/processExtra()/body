{
  List<AnnotationValue> annotationValueList=new ArrayList<AnnotationValue>();
  MockHelper.classValue("targetEntity",manyToMany.getTargetEntity(),annotationValueList,indexBuilder.getServiceRegistry());
  MockHelper.enumValue("fetch",FETCH_TYPE,manyToMany.getFetch(),annotationValueList);
  MockHelper.stringValue("mappedBy",manyToMany.getMappedBy(),annotationValueList);
  MockHelper.cascadeValue("cascade",manyToMany.getCascade(),isDefaultCascadePersist(),annotationValueList);
  create(MANY_TO_MANY,annotationValueList);
  parserMapKeyClass(manyToMany.getMapKeyClass(),getTarget());
  parserMapKeyTemporal(manyToMany.getMapKeyTemporal(),getTarget());
  parserMapKeyEnumerated(manyToMany.getMapKeyEnumerated(),getTarget());
  parserMapKey(manyToMany.getMapKey(),getTarget());
  parserAttributeOverrides(manyToMany.getMapKeyAttributeOverride(),getTarget());
  parserMapKeyJoinColumnList(manyToMany.getMapKeyJoinColumn(),getTarget());
  parserOrderColumn(manyToMany.getOrderColumn(),getTarget());
  parserJoinTable(manyToMany.getJoinTable(),getTarget());
  if (manyToMany.getOrderBy() != null) {
    create(ORDER_BY,MockHelper.stringValueArray("value",manyToMany.getOrderBy()));
  }
}
