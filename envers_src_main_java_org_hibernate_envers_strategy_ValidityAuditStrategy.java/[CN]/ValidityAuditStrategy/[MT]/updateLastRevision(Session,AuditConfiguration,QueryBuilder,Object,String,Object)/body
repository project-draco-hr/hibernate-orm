{
  String revisionEndFieldName=auditCfg.getAuditEntCfg().getRevisionEndFieldName();
  qb.getRootParameters().addWhere(revisionEndFieldName,true,"is","null",false);
  List<Object> l=qb.toQuery(session).list();
  if (l.size() == 1) {
    Object previousData=l.get(0);
    ((Map<String,Object>)previousData).put(revisionEndFieldName,revision);
    if (auditCfg.getAuditEntCfg().isRevisionEndTimestampEnabled()) {
      Date revisionEndTimestamp;
      String revEndTimestampFieldName=auditCfg.getAuditEntCfg().getRevisionEndTimestampFieldName();
      Object revEndTimestampObj=this.revisionTimestampGetter.get(revision);
      if (revEndTimestampObj instanceof Date) {
        revisionEndTimestamp=(Date)revEndTimestampObj;
      }
 else {
        revisionEndTimestamp=new Date((Long)revEndTimestampObj);
      }
      ((Map<String,Object>)previousData).put(revEndTimestampFieldName,revisionEndTimestamp);
    }
    session.save(auditedEntityName,previousData);
  }
 else {
    throw new RuntimeException("Cannot find previous revision for entity " + auditedEntityName + " and id "+ id);
  }
}
