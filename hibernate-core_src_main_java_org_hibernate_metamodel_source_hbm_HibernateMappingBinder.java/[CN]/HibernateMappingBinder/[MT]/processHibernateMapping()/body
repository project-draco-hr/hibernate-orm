{
  if (hibernateMapping.getFilterDef() != null) {
  }
  if (hibernateMapping.getFetchProfile() != null) {
    parseFetchProfiles(hibernateMapping.getFetchProfile(),null);
  }
  if (hibernateMapping.getIdentifierGenerator() != null) {
  }
  if (hibernateMapping.getTypedef() != null) {
  }
  if (hibernateMapping.getClazzOrSubclassOrJoinedSubclass() != null) {
    for (    Object clazzOrSubclass : hibernateMapping.getClazzOrSubclassOrJoinedSubclass()) {
      if (org.hibernate.metamodel.source.hbm.xml.mapping.Class.class.isInstance(clazzOrSubclass)) {
        org.hibernate.metamodel.source.hbm.xml.mapping.Class clazz=org.hibernate.metamodel.source.hbm.xml.mapping.Class.class.cast(clazzOrSubclass);
        new RootEntityBinder(this,clazz).process(clazz);
      }
 else       if (org.hibernate.metamodel.source.hbm.xml.mapping.Subclass.class.isInstance(clazzOrSubclass)) {
      }
 else       if (org.hibernate.metamodel.source.hbm.xml.mapping.JoinedSubclass.class.isInstance(clazzOrSubclass)) {
      }
 else       if (org.hibernate.metamodel.source.hbm.xml.mapping.UnionSubclass.class.isInstance(clazzOrSubclass)) {
      }
 else {
        throw new org.hibernate.metamodel.source.MappingException("unknown type of class or subclass: " + clazzOrSubclass.getClass().getName(),jaxbRoot.getOrigin());
      }
    }
  }
  if (hibernateMapping.getQueryOrSqlQuery() != null) {
    for (    Object queryOrSqlQuery : hibernateMapping.getQueryOrSqlQuery()) {
      if (org.hibernate.metamodel.source.hbm.xml.mapping.Query.class.isInstance(queryOrSqlQuery)) {
      }
 else       if (org.hibernate.metamodel.source.hbm.xml.mapping.SqlQuery.class.isInstance(queryOrSqlQuery)) {
      }
 else {
        throw new org.hibernate.metamodel.source.MappingException("unknown type of query: " + queryOrSqlQuery.getClass().getName(),jaxbRoot.getOrigin());
      }
    }
  }
  if (hibernateMapping.getResultset() != null) {
  }
  if (hibernateMapping.getImport() != null) {
    processImports(hibernateMapping.getImport());
  }
  if (hibernateMapping.getDatabaseObject() != null) {
  }
}
