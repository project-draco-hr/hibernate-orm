{
  CacheManager localManager=TestCacheInstanceManager.getTestCacheManager(DualNodeTestUtil.LOCAL);
  this.localCache=localManager.getCache(getEntityCacheConfigName(),true);
  TransactionManager localTM=localCache.getConfiguration().getRuntimeConfig().getTransactionManager();
  SessionFactory localFactory=getEnvironment().getSessionFactory();
  TransactionManager remoteTM=DualNodeJtaTransactionManagerImpl.getInstance(DualNodeTestUtil.REMOTE);
  SessionFactory remoteFactory=getSecondNodeEnvironment().getSessionFactory();
  ClassLoaderTestDAO dao0=new ClassLoaderTestDAO(localFactory,localTM);
  ClassLoaderTestDAO dao1=new ClassLoaderTestDAO(remoteFactory,remoteTM);
  Integer id=new Integer(1);
  dao0.createAccount(dao0.getSmith(),id,new Integer(5),DualNodeTestUtil.LOCAL);
  Account acct1=dao1.getAccount(id);
  assertNotNull(acct1);
  assertEquals(DualNodeTestUtil.LOCAL,acct1.getBranch());
  dao1.updateAccountBranch(id,DualNodeTestUtil.REMOTE);
  Account acct0=dao0.getAccount(id);
  assertNotNull(acct0);
  assertEquals(DualNodeTestUtil.LOCAL,acct0.getBranch());
  acct0=dao0.getAccountWithRefresh(id);
  assertNotNull(acct0);
  assertEquals(DualNodeTestUtil.REMOTE,acct0.getBranch());
  ClassLoaderTestDAO dao0A=new ClassLoaderTestDAO(localFactory,localTM);
  Account acct0A=dao0A.getAccount(id);
  assertNotNull(acct0A);
  assertEquals(DualNodeTestUtil.REMOTE,acct0A.getBranch());
}
