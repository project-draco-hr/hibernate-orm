{
  transactionContext.remove(session);
switch (status) {
case Status.STATUS_COMMITTING:
case Status.STATUS_COMMITTED:
    try {
      tc.createIsolationDelegate().delegateWork(new WorkExecutorVisitable<Void>(){
        @Override public Void accept(        WorkExecutor<Void> executor,        Connection connection) throws SQLException {
          putCache.put(key,value);
          return null;
        }
      }
,putCacheRequiresTransaction);
    }
 catch (    HibernateException e) {
      if (log.isTraceEnabled()) {
        log.trace("Exception during query cache update",e);
      }
    }
  break;
default :
break;
}
}
