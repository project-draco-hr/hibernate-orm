{
  Type type=value.getType();
  if (type instanceof BasicType || "org.hibernate.type.PrimitiveByteArrayBlobType".equals(type.getClass().getName())) {
    if (parent != null) {
      boolean addNestedType=(value instanceof SimpleValue) && ((SimpleValue)value).getTypeParameters() != null;
      Element prop_mapping=MetadataTools.addProperty(parent,propertyAuditingData.getName(),addNestedType ? null : value.getType().getName(),propertyAuditingData.isForceInsertable() || insertable,key);
      MetadataTools.addColumns(prop_mapping,(Iterator<Column>)value.getColumnIterator());
      if (addNestedType) {
        Properties typeParameters=((SimpleValue)value).getTypeParameters();
        Element type_mapping=prop_mapping.addElement("type");
        type_mapping.addAttribute("name",value.getType().getName());
        for (        java.util.Map.Entry paramKeyValue : typeParameters.entrySet()) {
          Element type_param=type_mapping.addElement("param");
          type_param.addAttribute("name",(String)paramKeyValue.getKey());
          type_param.setText((String)paramKeyValue.getValue());
        }
      }
    }
    if (mapper != null) {
      mapper.add(propertyAuditingData.getPropertyData());
    }
  }
 else {
    return false;
  }
  return true;
}
