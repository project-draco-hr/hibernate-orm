{
  List<AnnotationValue> annotationValueList=new ArrayList<AnnotationValue>();
  MockHelper.stringValue("name",generator.getName(),annotationValueList);
  MockHelper.stringValue("catalog",generator.getCatalog(),annotationValueList);
  MockHelper.stringValue("schema",generator.getSchema(),annotationValueList);
  MockHelper.stringValue("table",generator.getTable(),annotationValueList);
  MockHelper.stringValue("pkColumnName",generator.getPkColumnName(),annotationValueList);
  MockHelper.stringValue("valueColumnName",generator.getValueColumnName(),annotationValueList);
  MockHelper.stringValue("pkColumnValue",generator.getPkColumnValue(),annotationValueList);
  MockHelper.integerValue("initialValue",generator.getInitialValue(),annotationValueList);
  MockHelper.integerValue("allocationSize",generator.getAllocationSize(),annotationValueList);
  nestedUniqueConstraintList("uniqueConstraints",generator.getUniqueConstraint(),annotationValueList);
  return create(TABLE_GENERATOR,null,annotationValueList);
}
