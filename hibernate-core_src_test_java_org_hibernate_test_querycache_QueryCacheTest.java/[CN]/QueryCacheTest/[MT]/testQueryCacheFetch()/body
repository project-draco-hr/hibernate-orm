{
  sessionFactory().getCache().evictQueryRegions();
  sessionFactory().getStatistics().clear();
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Item i=new Item();
  i.setName("widget");
  i.setDescription("A really top-quality, full-featured widget.");
  Item i2=new Item();
  i2.setName("other widget");
  i2.setDescription("Another decent widget.");
  s.persist(i);
  s.persist(i2);
  t.commit();
  s.close();
  final String queryString="from Item i where i.name like '%widget'";
  QueryStatistics qs=s.getSessionFactory().getStatistics().getQueryStatistics(queryString);
  Thread.sleep(200);
  s=openSession();
  t=s.beginTransaction();
  List result=s.createQuery(queryString).setCacheable(true).list();
  assertEquals(result.size(),2);
  t.commit();
  s.close();
  assertEquals(qs.getCacheHitCount(),0);
  assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(),0);
  sessionFactory().getCache().evictEntityRegion(Item.class);
  s=openSession();
  t=s.beginTransaction();
  result=s.createQuery(queryString).setCacheable(true).list();
  assertEquals(result.size(),2);
  assertTrue(Hibernate.isInitialized(result.get(0)));
  assertTrue(Hibernate.isInitialized(result.get(1)));
  t.commit();
  s.close();
  assertEquals(qs.getCacheHitCount(),1);
  assertEquals(s.getSessionFactory().getStatistics().getEntityFetchCount(),1);
  s=openSession();
  t=s.beginTransaction();
  s.createQuery("delete Item").executeUpdate();
  t.commit();
  s.close();
}
