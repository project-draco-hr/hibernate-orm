{
  return new SimpleProjection(){
    public Type[] getTypes(    Criteria criteria,    CriteriaQuery criteriaQuery) throws HibernateException {
      return new Type[]{criteriaQuery.getType(criteria,propertyName)};
    }
    public String toSqlString(    Criteria criteria,    int position,    CriteriaQuery criteriaQuery) throws HibernateException {
      StringBuilder stbuf=new StringBuilder();
      SessionFactoryImplementor factory=criteriaQuery.getFactory();
      String[] columns=criteriaQuery.getColumnsUsingProjection(criteria,propertyName);
      Dialect dialect=factory.getDialect();
      if (dialect instanceof SpatialDialect) {
        SpatialDialect seDialect=(SpatialDialect)dialect;
        stbuf.append(seDialect.getSpatialAggregateSQL(columns[0],SpatialAggregate.EXTENT));
        stbuf.append(" as y").append(position).append('_');
        return stbuf.toString();
      }
      return null;
    }
  }
;
}
