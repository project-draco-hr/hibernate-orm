{
  if (mappingRoot().getFilterDef() == null) {
    return;
  }
  for (  XMLHibernateMapping.XMLFilterDef filterDefinition : mappingRoot().getFilterDef()) {
    final String name=filterDefinition.getName();
    final Map<String,Type> parameters=new HashMap<String,Type>();
    String condition=null;
    for (    Object o : filterDefinition.getContent()) {
      if (o instanceof String) {
        if (condition != null) {
        }
        condition=(String)o;
      }
 else       if (o instanceof XMLHibernateMapping.XMLFilterDef.XMLFilterParam) {
        final XMLHibernateMapping.XMLFilterDef.XMLFilterParam paramElement=(XMLHibernateMapping.XMLFilterDef.XMLFilterParam)o;
        parameters.put(paramElement.getName(),metadata.getTypeResolver().heuristicType(paramElement.getType()));
      }
 else {
        throw new MappingException("Unrecognized nested filter content",origin());
      }
    }
    if (condition == null) {
      condition=filterDefinition.getCondition();
    }
    metadata.addFilterDefinition(new FilterDefinition(name,condition,parameters));
  }
}
