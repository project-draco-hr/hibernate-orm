{
  if (cls == null) {
    throw new IllegalArgumentException("Class passed to locate Java type descriptor cannot be null");
  }
  JavaTypeDescriptor<T> descriptor=descriptorsByClass.get(cls);
  if (descriptor != null) {
    return descriptor;
  }
  if (Serializable.class.isAssignableFrom(cls)) {
    return new SerializableTypeDescriptor(cls);
  }
  for (  Map.Entry<Class,JavaTypeDescriptor> entry : descriptorsByClass.entrySet()) {
    if (entry.getKey().isAssignableFrom(cls)) {
      log.debugf("Using  cached JavaTypeDescriptor instance for Java class [%s]",cls.getName());
      return entry.getValue();
    }
  }
  log.warnf("Could not find matching type descriptor for requested Java class [%s]; using fallback",cls.getName());
  return new FallbackJavaTypeDescriptor<T>(cls);
}
