{
  int entryNameLength=entryName.length();
  if (entryName.endsWith("package-info.class")) {
    String name;
    if (entryNameLength == "package-info.class".length()) {
      name="";
    }
 else {
      name=entryName.substring(0,entryNameLength - ".package-info.class".length()).replace('/','.');
    }
    executeJavaElementFilter(name,packageFilters,is,secondIs);
  }
 else   if (entryName.endsWith(".class")) {
    String name=entryName.substring(0,entryNameLength - ".class".length()).replace('/','.');
    log.debug("Filtering: {}",name);
    executeJavaElementFilter(name,classFilters,is,secondIs);
  }
 else {
    String name=entryName;
    boolean accepted=false;
    for (    FileFilter filter : fileFilters) {
      if (filter.accept(name)) {
        accepted=true;
        InputStream localIs;
        if (filter.getStream()) {
          localIs=secondIs;
        }
 else {
          localIs=null;
          secondIs.close();
        }
        is.close();
        log.debug("File Filter matched for {}",name);
        Entry entry=new Entry(name,localIs);
        int index=this.filters.indexOf(filter);
        this.entries[index].add(entry);
      }
    }
    if (!accepted) {
      is.close();
      secondIs.close();
    }
  }
}
