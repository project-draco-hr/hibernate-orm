{
  if (uniqueConstraintStrategy == null) {
    uniqueConstraintStrategy=determineUniqueConstraintSchemaUpdateStrategy(metadata);
  }
  if (uniqueConstraintStrategy == UniqueConstraintSchemaUpdateStrategy.SKIP) {
    return;
  }
  final Dialect dialect=metadata.getDatabase().getJdbcEnvironment().getDialect();
  final Exporter<Constraint> exporter=dialect.getUniqueKeyExporter();
  final Iterator ukItr=table.getUniqueKeyIterator();
  while (ukItr.hasNext()) {
    final UniqueKey uniqueKey=(UniqueKey)ukItr.next();
    if (tableInfo != null && StringHelper.isNotEmpty(uniqueKey.getName())) {
      final IndexInformation indexInfo=tableInfo.getIndex(Identifier.toIdentifier(uniqueKey.getName()));
      if (indexInfo != null) {
        continue;
      }
    }
    if (uniqueConstraintStrategy == UniqueConstraintSchemaUpdateStrategy.DROP_RECREATE_QUIETLY) {
      applySqlStrings(exporter.getSqlDropStrings(uniqueKey,metadata),targets,true);
    }
    applySqlStrings(exporter.getSqlCreateStrings(uniqueKey,metadata),targets,true);
  }
}
