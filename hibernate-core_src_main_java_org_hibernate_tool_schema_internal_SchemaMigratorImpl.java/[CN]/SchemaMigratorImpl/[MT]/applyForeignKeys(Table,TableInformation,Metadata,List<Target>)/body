{
  final Dialect dialect=metadata.getDatabase().getJdbcEnvironment().getDialect();
  if (!dialect.hasAlterTable()) {
    return;
  }
  final Exporter<ForeignKey> exporter=dialect.getForeignKeyExporter();
  @SuppressWarnings("unchecked") final Iterator<ForeignKey> fkItr=table.getForeignKeyIterator();
  while (fkItr.hasNext()) {
    final ForeignKey foreignKey=fkItr.next();
    if (!foreignKey.isPhysicalConstraint()) {
      continue;
    }
    if (!foreignKey.isCreationEnabled()) {
      continue;
    }
    final ForeignKeyInformation existingForeignKey=findMatchingForeignKey(foreignKey,tableInformation);
    if (existingForeignKey == null) {
      applySqlStrings(exporter.getSqlCreateStrings(foreignKey,metadata),targets,false);
    }
  }
}
