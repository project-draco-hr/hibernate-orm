{
  if (!dialect.hasAlterTable()) {
    return;
  }
  final Exporter<ForeignKey> exporter=dialect.getForeignKeyExporter();
  @SuppressWarnings("unchecked") final Iterator<ForeignKey> fkItr=table.getForeignKeyIterator();
  while (fkItr.hasNext()) {
    final ForeignKey foreignKey=fkItr.next();
    if (!foreignKey.isPhysicalConstraint()) {
      continue;
    }
    if (!foreignKey.isCreationEnabled()) {
      continue;
    }
    if (tableInformation != null) {
      final ForeignKeyInformation existingForeignKey=findMatchingForeignKey(foreignKey,tableInformation);
      if (existingForeignKey != null) {
        continue;
      }
    }
    applySqlStrings(false,exporter.getSqlCreateStrings(foreignKey,metadata),formatter,options,targets);
  }
}
