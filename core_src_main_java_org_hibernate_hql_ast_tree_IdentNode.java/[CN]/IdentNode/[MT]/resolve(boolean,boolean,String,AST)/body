{
  if (!isResolved()) {
    if (getWalker().getCurrentFromClause().isFromElementAlias(getText())) {
      if (resolveAsAlias()) {
        setResolved();
      }
    }
 else     if (parent != null && parent.getType() == SqlTokenTypes.DOT) {
      DotNode dot=(DotNode)parent;
      if (parent.getFirstChild() == this) {
        if (resolveAsNakedComponentPropertyRefLHS(dot)) {
          setResolved();
        }
      }
 else {
        if (resolveAsNakedComponentPropertyRefRHS(dot)) {
          setResolved();
        }
      }
    }
 else {
      int result=resolveAsNakedPropertyRef();
      if (result == PROPERTY_REF) {
        setResolved();
      }
 else       if (result == COMPONENT_REF) {
        return;
      }
 else       if (result == UNKNOWN) {
        final SQLFunction sqlFunction=getSessionFactoryHelper().findSQLFunction(getText());
        if (sqlFunction != null) {
          setText(sqlFunction.render(Collections.EMPTY_LIST,getSessionFactoryHelper().getFactory()));
          setDataType(sqlFunction.getReturnType(null,getSessionFactoryHelper().getFactory()));
          setResolved();
        }
      }
    }
    if (!isResolved()) {
      try {
        getWalker().getLiteralProcessor().processConstant(this,false);
      }
 catch (      Throwable ignore) {
      }
    }
  }
}
