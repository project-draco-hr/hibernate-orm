{
  if (constructed) {
    Object result=invoke(method,args,proxy);
    if (result == INVOKE_IMPLEMENTATION) {
      Object target=getImplementation();
      try {
        final Object returnValue;
        if (ReflectHelper.isPublic(persistentClass,method)) {
          if (!method.getDeclaringClass().isInstance(target)) {
            throw new ClassCastException(target.getClass().getName());
          }
          returnValue=method.invoke(target,args);
        }
 else {
          if (!method.isAccessible()) {
            method.setAccessible(true);
          }
          returnValue=method.invoke(target,args);
        }
        return returnValue == target ? proxy : returnValue;
      }
 catch (      InvocationTargetException ite) {
        throw ite.getTargetException();
      }
    }
 else {
      return result;
    }
  }
 else {
    if (method.getName().equals("getHibernateLazyInitializer")) {
      return this;
    }
 else {
      throw new LazyInitializationException("unexpected case hit, method=" + method.getName());
    }
  }
}
