{
  Serializable[] keys=new Serializable[batchSize];
  keys[0]=id;
  int i=1;
  int end=-1;
  boolean checkForEnd=false;
  final LinkedHashMap<CollectionEntry,PersistentCollection> map=batchLoadableCollections.get(collectionPersister.getRole());
  if (map != null) {
    for (    Entry<CollectionEntry,PersistentCollection> me : map.entrySet()) {
      final CollectionEntry ce=me.getKey();
      final PersistentCollection collection=me.getValue();
      if (ce.getLoadedKey() == null) {
        continue;
      }
      if (collection.wasInitialized()) {
        LOG.warn("Encountered initialized collection in BatchFetchQueue, this should not happen.");
        continue;
      }
      if (checkForEnd && i == end) {
        return keys;
      }
      final boolean isEqual=collectionPersister.getKeyType().isEqual(id,ce.getLoadedKey(),collectionPersister.getFactory());
      if (isEqual) {
        end=i;
      }
 else       if (!isCached(ce.getLoadedKey(),collectionPersister)) {
        keys[i++]=ce.getLoadedKey();
      }
      if (i == batchSize) {
        i=1;
        if (end != -1) {
          checkForEnd=true;
        }
      }
    }
  }
  return keys;
}
