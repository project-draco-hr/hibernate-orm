{
  EntityPersister persister=session.getFactory().getEntityPersister(entity);
  final CollectionPersister collectionPersister=session.getFactory().getCollectionPersister(entity + '.' + property);
  Iterator entities=entityEntries.entrySet().iterator();
  while (entities.hasNext()) {
    Map.Entry me=(Map.Entry)entities.next();
    EntityEntry ee=(EntityEntry)me.getValue();
    if (persister.isSubclassEntityName(ee.getEntityName())) {
      Object instance=me.getKey();
      boolean found=isFoundInParent(property,childEntity,persister,collectionPersister,instance);
      if (!found && mergeMap != null) {
        Object unmergedInstance=mergeMap.get(instance);
        Object unmergedChild=mergeMap.get(childEntity);
        if (unmergedInstance != null && unmergedChild != null) {
          found=isFoundInParent(property,unmergedChild,persister,collectionPersister,unmergedInstance);
        }
      }
      if (found) {
        return ee.getId();
      }
    }
  }
  return null;
}
