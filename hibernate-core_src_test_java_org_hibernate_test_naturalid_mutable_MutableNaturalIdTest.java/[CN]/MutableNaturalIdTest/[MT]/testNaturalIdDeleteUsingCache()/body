{
  Session s=openSession();
  s.beginTransaction();
  User u=new User("steve","hb","superSecret");
  s.persist(u);
  s.getTransaction().commit();
  s.close();
  sessionFactory().getStatistics().clear();
  s=openSession();
  s.beginTransaction();
  u=(User)s.createCriteria(User.class).add(Restrictions.naturalId().set("name","steve").set("org","hb")).setCacheable(true).uniqueResult();
  assertNotNull(u);
  s.getTransaction().commit();
  s.close();
  assertEquals(sessionFactory().getStatistics().getQueryExecutionCount(),1);
  assertEquals(sessionFactory().getStatistics().getQueryCacheHitCount(),0);
  assertEquals(sessionFactory().getStatistics().getQueryCachePutCount(),1);
  sessionFactory().getStatistics().clear();
  s=openSession();
  s.beginTransaction();
  u=(User)s.createCriteria(User.class).add(Restrictions.naturalId().set("name","steve").set("org","hb")).setCacheable(true).uniqueResult();
  assertNotNull(u);
  assertEquals(sessionFactory().getStatistics().getQueryExecutionCount(),0);
  assertEquals(sessionFactory().getStatistics().getQueryCacheHitCount(),1);
  s.delete(u);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  u=(User)s.createCriteria(User.class).add(Restrictions.naturalId().set("name","steve").set("org","hb")).setCacheable(true).uniqueResult();
  assertNull(u);
  s.getTransaction().commit();
  s.close();
}
