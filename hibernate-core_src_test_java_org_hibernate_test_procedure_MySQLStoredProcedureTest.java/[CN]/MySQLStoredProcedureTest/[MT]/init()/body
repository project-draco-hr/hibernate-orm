{
  destroy();
  EntityManager entityManager=createEntityManager();
  entityManager.getTransaction().begin();
  try {
    Session session=entityManager.unwrap(Session.class);
    session.doWork(new Work(){
      @Override public void execute(      Connection connection) throws SQLException {
        Statement statement=null;
        try {
          statement=connection.createStatement();
          statement.executeUpdate("CREATE PROCEDURE sp_count_phones (" + "   IN personId INT, " + "   OUT phoneCount INT "+ ") "+ "BEGIN "+ "    SELECT COUNT(*) INTO phoneCount "+ "    FROM phone  "+ "    WHERE phone.person_id = personId; "+ "END");
          statement.executeUpdate("CREATE PROCEDURE sp_phones(IN personId INT) " + "BEGIN " + "    SELECT *  "+ "    FROM phone   "+ "    WHERE person_id = personId;  "+ "END");
          statement.executeUpdate("CREATE FUNCTION fn_count_phones(personId integer)  " + "RETURNS integer " + "DETERMINISTIC "+ "READS SQL DATA "+ "BEGIN "+ "    DECLARE phoneCount integer; "+ "    SELECT COUNT(*) INTO phoneCount "+ "    FROM phone  "+ "    WHERE phone.person_id = personId; "+ "    RETURN phoneCount; "+ "END");
        }
  finally {
          if (statement != null) {
            statement.close();
          }
        }
      }
    }
);
  }
  finally {
    entityManager.getTransaction().rollback();
    entityManager.close();
  }
  entityManager=createEntityManager();
  entityManager.getTransaction().begin();
  try {
    Person person1=new Person("John Doe");
    person1.setNickName("JD");
    person1.setAddress("Earth");
    person1.setCreatedOn(Timestamp.from(LocalDateTime.of(2000,1,1,0,0,0).toInstant(ZoneOffset.UTC)));
    entityManager.persist(person1);
    Phone phone1=new Phone("123-456-7890");
    phone1.setId(1L);
    person1.addPhone(phone1);
    Phone phone2=new Phone("098_765-4321");
    phone2.setId(2L);
    person1.addPhone(phone2);
    entityManager.getTransaction().commit();
  }
  finally {
    entityManager.close();
  }
}
