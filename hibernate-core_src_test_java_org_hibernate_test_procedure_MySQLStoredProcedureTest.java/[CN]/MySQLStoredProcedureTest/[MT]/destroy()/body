{
  EntityManager entityManager=createEntityManager();
  entityManager.getTransaction().begin();
  try {
    Session session=entityManager.unwrap(Session.class);
    session.doWork(new Work(){
      @Override public void execute(      Connection connection) throws SQLException {
        try (Statement statement=connection.createStatement()){
          statement.executeUpdate("DROP PROCEDURE IF EXISTS sp_count_phones");
        }
 catch (        SQLException ignore) {
        }
      }
    }
);
  }
  finally {
    entityManager.getTransaction().rollback();
    entityManager.close();
  }
  entityManager=createEntityManager();
  entityManager.getTransaction().begin();
  try {
    Session session=entityManager.unwrap(Session.class);
    session.doWork(new Work(){
      @Override public void execute(      Connection connection) throws SQLException {
        try (Statement statement=connection.createStatement()){
          statement.executeUpdate("DROP PROCEDURE IF EXISTS sp_phones");
        }
 catch (        SQLException ignore) {
        }
      }
    }
);
  }
  finally {
    entityManager.getTransaction().rollback();
    entityManager.close();
  }
  entityManager=createEntityManager();
  entityManager.getTransaction().begin();
  try {
    Session session=entityManager.unwrap(Session.class);
    session.doWork(new Work(){
      @Override public void execute(      Connection connection) throws SQLException {
        try (Statement statement=connection.createStatement()){
          statement.executeUpdate("DROP FUNCTION IF EXISTS fn_count_phones");
        }
 catch (        SQLException ignore) {
        }
      }
    }
);
  }
  finally {
    entityManager.getTransaction().rollback();
    entityManager.close();
  }
}
