{
  Session s=openSession();
  Transaction txn=s.beginTransaction();
  Fum fum=new Fum(fumKey("fum"));
  fum.setFo(new Fum(fumKey("fo")));
  fum.setFum("fo fee fi");
  fum.getFo().setFum("stuff");
  Fum fr=new Fum(fumKey("fr"));
  fr.setFum("goo");
  Fum fr2=new Fum(fumKey("fr2"));
  fr2.setFum("soo");
  fum.setFriends(new HashSet());
  fum.getFriends().add(fr);
  fum.getFriends().add(fr2);
  s.save(fr);
  s.save(fr2);
  s.save(fum.getFo());
  s.save(fum);
  Criteria base=s.createCriteria(Fum.class).add(Expression.like("fum","f",MatchMode.START));
  base.createCriteria("fo").add(Expression.isNotNull("fum"));
  base.createCriteria("friends").add(Expression.like("fum","g%"));
  List list=base.list();
  assertTrue(list.size() == 1 && list.get(0) == fum);
  base=s.createCriteria(Fum.class).add(Expression.like("fum","f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP);
  base.createCriteria("fo","fo").add(Expression.isNotNull("fum"));
  base.createCriteria("friends","fum").add(Expression.like("fum","g",MatchMode.START));
  Map map=(Map)base.uniqueResult();
  assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && fum.getFriends().contains(map.get("fum")) && map.size() == 3);
  base=s.createCriteria(Fum.class).add(Expression.like("fum","f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends",FetchMode.EAGER);
  base.createCriteria("fo","fo").add(Expression.eq("fum",fum.getFo().getFum()));
  map=(Map)base.list().get(0);
  assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && map.size() == 2);
  list=s.createCriteria(Fum.class).createAlias("friends","fr").createAlias("fo","fo").add(Expression.like("fum","f%")).add(Expression.isNotNull("fo")).add(Expression.isNotNull("fo.fum")).add(Expression.like("fr.fum","g%")).add(Expression.eqProperty("fr.id.short","id.short")).list();
  assertTrue(list.size() == 1 && list.get(0) == fum);
  txn.commit();
  s.close();
  s=openSession();
  txn=s.beginTransaction();
  base=s.createCriteria(Fum.class).add(Expression.like("fum","f%"));
  base.createCriteria("fo").add(Expression.isNotNull("fum"));
  base.createCriteria("friends").add(Expression.like("fum","g%"));
  fum=(Fum)base.list().get(0);
  assertTrue(fum.getFriends().size() == 2);
  s.delete(fum);
  s.delete(fum.getFo());
  Iterator iter=fum.getFriends().iterator();
  while (iter.hasNext())   s.delete(iter.next());
  txn.commit();
  s.close();
}
