{
  StringBuilder result=new StringBuilder(sqlQuery.length() + 20);
  int left, right;
  for (int curr=0; curr < sqlQuery.length(); curr=right + 1) {
    if ((left=sqlQuery.indexOf('{',curr)) < 0) {
      result.append(sqlQuery.substring(curr));
      break;
    }
    result.append(sqlQuery.substring(curr,left));
    if ((right=sqlQuery.indexOf('}',left + 1)) < 0) {
      throw new QueryException("Unmatched braces for alias path",sqlQuery);
    }
    final String aliasPath=sqlQuery.substring(left + 1,right);
    boolean isPlaceholder=aliasPath.startsWith(HIBERNATE_PLACEHOLDER_PREFIX);
    if (isPlaceholder) {
      if (DOMAIN_PLACEHOLDER.equals(aliasPath)) {
        final String catalogName=factory.getSettings().getDefaultCatalogName();
        if (catalogName != null) {
          result.append(catalogName);
          result.append(".");
        }
        final String schemaName=factory.getSettings().getDefaultSchemaName();
        if (schemaName != null) {
          result.append(schemaName);
          result.append(".");
        }
      }
 else       if (SCHEMA_PLACEHOLDER.equals(aliasPath)) {
        final String schemaName=factory.getSettings().getDefaultSchemaName();
        if (schemaName != null) {
          result.append(schemaName);
          result.append(".");
        }
      }
 else       if (CATALOG_PLACEHOLDER.equals(aliasPath)) {
        final String catalogName=factory.getSettings().getDefaultCatalogName();
        if (catalogName != null) {
          result.append(catalogName);
          result.append(".");
        }
      }
 else {
        throw new QueryException("Unknown placeholder ",aliasPath);
      }
    }
 else {
      int firstDot=aliasPath.indexOf('.');
      if (firstDot == -1) {
        if (context.isEntityAlias(aliasPath)) {
          result.append(aliasPath);
          aliasesFound++;
        }
 else {
          result.append('{').append(aliasPath).append('}');
        }
      }
 else {
        final String aliasName=aliasPath.substring(0,firstDot);
        if (context.isCollectionAlias(aliasName)) {
          String propertyName=aliasPath.substring(firstDot + 1);
          result.append(resolveCollectionProperties(aliasName,propertyName));
          aliasesFound++;
        }
 else         if (context.isEntityAlias(aliasName)) {
          String propertyName=aliasPath.substring(firstDot + 1);
          result.append(resolveProperties(aliasName,propertyName));
          aliasesFound++;
        }
 else {
          result.append('{').append(aliasPath).append('}');
        }
      }
    }
  }
  return result.toString();
}
