{
  this.settings=settings;
  if (manager != null) {
    LOG.warn("Attempt to restart an already started EhCacheRegionFactory. Use sessionFactory.close() " + " between repeated calls to buildSessionFactory. Using previously created EhCacheRegionFactory." + " If this behaviour is required, consider using SingletonEhCacheRegionFactory.");
    return;
  }
  try {
    String configurationResourceName=null;
    if (properties != null) {
      configurationResourceName=(String)properties.get(NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME);
    }
    if (configurationResourceName == null || configurationResourceName.length() == 0) {
      Configuration configuration=ConfigurationFactory.parseConfiguration();
      manager=new CacheManager(configuration);
    }
 else {
      URL url;
      try {
        url=new URL(configurationResourceName);
      }
 catch (      MalformedURLException e) {
        url=loadResource(configurationResourceName);
      }
      Configuration configuration=HibernateUtil.loadAndCorrectConfiguration(url);
      manager=new CacheManager(configuration);
    }
    mbeanRegistrationHelper.registerMBean(manager,properties);
  }
 catch (  net.sf.ehcache.CacheException e) {
    if (e.getMessage().startsWith("Cannot parseConfiguration CacheManager. Attempt to create a new instance of " + "CacheManager using the diskStorePath")) {
      throw new CacheException("Attempt to restart an already started EhCacheRegionFactory. " + "Use sessionFactory.close() between repeated calls to buildSessionFactory. " + "Consider using SingletonEhCacheRegionFactory. Error from ehcache was: "+ e.getMessage());
    }
 else {
      throw new CacheException(e);
    }
  }
}
