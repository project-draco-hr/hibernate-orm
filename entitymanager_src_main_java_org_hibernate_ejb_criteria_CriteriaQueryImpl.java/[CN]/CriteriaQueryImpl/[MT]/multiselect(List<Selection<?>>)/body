{
  final Selection<? extends T> selection;
  if (Tuple.class.isAssignableFrom(getResultType())) {
    selection=(Selection<? extends T>)queryBuilder().tuple(selections);
  }
 else   if (getResultType().isArray()) {
    selection=(Selection<? extends T>)queryBuilder().array((Class<? extends Object[]>)getResultType(),selections);
  }
 else   if (Object.class.equals(getResultType())) {
switch (selections.size()) {
case 0:
{
        throw new IllegalArgumentException("empty selections passed to criteria query typed as Object");
      }
case 1:
{
      selection=(Selection<? extends T>)selections.get(0);
      break;
    }
default :
{
    selection=(Selection<? extends T>)queryBuilder().array(selections);
  }
}
}
 else {
selection=queryBuilder().construct(getResultType(),selections);
}
applySelection(selection);
return this;
}
