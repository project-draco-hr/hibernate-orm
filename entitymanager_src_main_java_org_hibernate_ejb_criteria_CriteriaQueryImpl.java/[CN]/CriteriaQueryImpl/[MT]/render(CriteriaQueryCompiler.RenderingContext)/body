{
  final StringBuilder jpaqlQuery=new StringBuilder();
  queryStructure.render(jpaqlQuery,renderingContext);
  if (!getOrderList().isEmpty()) {
    jpaqlQuery.append(" order by ");
    String sep="";
    for (    Order orderSpec : getOrderList()) {
      jpaqlQuery.append(sep).append(((Renderable)orderSpec.getExpression()).render(renderingContext)).append(orderSpec.isAscending() ? " asc" : " desc");
      sep=", ";
    }
  }
  return new CriteriaQueryCompiler.RenderedCriteriaQuery(){
    public String getQueryString(){
      return jpaqlQuery.toString();
    }
    @SuppressWarnings({"unchecked"}) public List<ValueConverter.Conversion> getValueConversions(){
      SelectionImplementor selection=(SelectionImplementor)queryStructure.getSelection();
      return selection == null ? null : selection.getConversions();
    }
    public HibernateEntityManagerImplementor.Options.ResultMetadataValidator getResultMetadataValidator(){
      return new HibernateEntityManagerImplementor.Options.ResultMetadataValidator(){
        public void validate(        Type[] returnTypes){
          SelectionImplementor selection=(SelectionImplementor)queryStructure.getSelection();
          if (selection != null) {
            if (selection.isCompoundSelection()) {
              if (returnTypes.length != selection.getCompoundSelectionItems().size()) {
                throw new IllegalStateException("Number of return values [" + returnTypes.length + "] did not match expected ["+ selection.getCompoundSelectionItems().size()+ "]");
              }
            }
 else {
              if (returnTypes.length > 1) {
                throw new IllegalStateException("Number of return values [" + returnTypes.length + "] did not match expected [1]");
              }
            }
          }
        }
      }
;
    }
  }
;
}
