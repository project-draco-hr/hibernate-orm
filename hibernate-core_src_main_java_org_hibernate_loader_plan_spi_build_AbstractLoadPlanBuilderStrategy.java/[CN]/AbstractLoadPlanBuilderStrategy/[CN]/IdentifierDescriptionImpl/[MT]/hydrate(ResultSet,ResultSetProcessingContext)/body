{
  final ResultSetProcessingContext.EntityReferenceProcessingState ownerEntityReferenceProcessingState=context.getProcessingState(entityReference);
  final Object ownerIdentifierHydratedState=ownerEntityReferenceProcessingState.getIdentifierHydratedForm();
  if (ownerIdentifierHydratedState != null) {
    for (    Fetch fetch : identifierFetches) {
      if (fetch instanceof EntityFetch) {
        final ResultSetProcessingContext.EntityReferenceProcessingState fetchEntityReferenceProcessingState=context.getProcessingState((EntityFetch)fetch);
        if (fetchEntityReferenceProcessingState.getIdentifierHydratedForm() != null) {
          continue;
        }
        if (fetchToHydratedStateExtractorMap != null && ownerIdentifierHydratedState != null) {
          Serializable extracted=(Serializable)fetchToHydratedStateExtractorMap.get(fetch).extract(ownerIdentifierHydratedState);
          fetchEntityReferenceProcessingState.registerIdentifierHydratedForm(extracted);
          continue;
        }
        fetch.hydrate(resultSet,context);
      }
 else {
        throw new NotYetImplementedException("Cannot hydrate identifier Fetch that is not an EntityFetch");
      }
    }
    return;
  }
  final String[] columnNames;
  if (EntityFetch.class.isInstance(entityReference) && !FetchStrategyHelper.isJoinFetched(((EntityFetch)entityReference).getFetchStrategy())) {
    final EntityFetch fetch=(EntityFetch)entityReference;
    final FetchOwner fetchOwner=fetch.getOwner();
    if (EntityReference.class.isInstance(fetchOwner)) {
      throw new NotYetImplementedException();
    }
 else {
      throw new WalkingException("Cannot locate association column names");
    }
  }
 else {
    columnNames=context.getAliasResolutionContext().resolveAliases(entityReference).getColumnAliases().getSuffixedKeyAliases();
  }
  final Object hydratedIdentifierState=entityReference.getEntityPersister().getIdentifierType().hydrate(resultSet,columnNames,context.getSession(),null);
  context.getProcessingState(entityReference).registerIdentifierHydratedForm(hydratedIdentifierState);
}
