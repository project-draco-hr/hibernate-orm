{
  final Component propComponent=(Component)value;
  final Class componentClass;
  if (propComponent.isDynamic()) {
    componentClass=ReflectionTools.loadClass(Map.class.getCanonicalName(),mainGenerator.getClassLoaderService());
  }
 else {
    componentClass=ReflectionTools.loadClass(propComponent.getComponentClassName(),mainGenerator.getClassLoaderService());
  }
  final CompositeMapperBuilder componentMapper=mapper.addComponent(propertyAuditingData.getPropertyData(),componentClass);
  final ComponentAuditingData componentAuditingData=(ComponentAuditingData)propertyAuditingData;
  final Iterator<Property> properties=(Iterator<Property>)propComponent.getPropertyIterator();
  while (properties.hasNext()) {
    final Property property=properties.next();
    final PropertyAuditingData componentPropertyAuditingData=componentAuditingData.getPropertyAuditingData(property.getName());
    if (componentPropertyAuditingData != null) {
      mainGenerator.addValue(parent,property.getValue(),componentMapper,entityName,xmlMappingData,componentPropertyAuditingData,property.isInsertable(),firstPass,false);
    }
  }
}
