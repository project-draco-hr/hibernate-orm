{
  Component prop_component=(Component)value;
  Class componentClass=ReflectionTools.loadClass(prop_component.getComponentClassName(),mainGenerator.getClassLoaderService());
  CompositeMapperBuilder componentMapper=mapper.addComponent(propertyAuditingData.getPropertyData(),componentClass);
  ComponentAuditingData componentAuditingData=(ComponentAuditingData)propertyAuditingData;
  Iterator<Property> properties=(Iterator<Property>)prop_component.getPropertyIterator();
  while (properties.hasNext()) {
    Property property=properties.next();
    PropertyAuditingData componentPropertyAuditingData=componentAuditingData.getPropertyAuditingData(property.getName());
    if (componentPropertyAuditingData != null) {
      mainGenerator.addValue(parent,property.getValue(),componentMapper,entityName,xmlMappingData,componentPropertyAuditingData,property.isInsertable(),firstPass,false);
    }
  }
}
