{
  super(origin);
  this.xmlFile=xmlFile;
  this.strict=strict;
  this.serFile=determineCachedFile(xmlFile);
  final boolean useCachedFile=xmlFile.exists() && serFile.exists() && xmlFile.lastModified() < serFile.lastModified();
  if (strict && !useCachedFile) {
    throw new MappingException(String.format("Cached file [%s] could not be found or could not be used",origin.getName()),origin);
  }
}
