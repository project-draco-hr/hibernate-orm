{
  Map defaults=context.getBuildingOptions().getReflectionManager().getDefaults();
{
    List<SequenceGenerator> anns=(List<SequenceGenerator>)defaults.get(SequenceGenerator.class);
    if (anns != null) {
      for (      SequenceGenerator ann : anns) {
        IdentifierGeneratorDefinition idGen=buildIdGenerator(ann,context);
        if (idGen != null) {
          context.getMetadataCollector().addDefaultIdentifierGenerator(idGen);
        }
      }
    }
  }
{
    List<TableGenerator> anns=(List<TableGenerator>)defaults.get(TableGenerator.class);
    if (anns != null) {
      for (      TableGenerator ann : anns) {
        IdentifierGeneratorDefinition idGen=buildIdGenerator(ann,context);
        if (idGen != null) {
          context.getMetadataCollector().addDefaultIdentifierGenerator(idGen);
        }
      }
    }
  }
{
    List<NamedQuery> anns=(List<NamedQuery>)defaults.get(NamedQuery.class);
    if (anns != null) {
      for (      NamedQuery ann : anns) {
        QueryBinder.bindQuery(ann,context,true);
      }
    }
  }
{
    List<NamedNativeQuery> anns=(List<NamedNativeQuery>)defaults.get(NamedNativeQuery.class);
    if (anns != null) {
      for (      NamedNativeQuery ann : anns) {
        QueryBinder.bindNativeQuery(ann,context,true);
      }
    }
  }
{
    List<SqlResultSetMapping> anns=(List<SqlResultSetMapping>)defaults.get(SqlResultSetMapping.class);
    if (anns != null) {
      for (      SqlResultSetMapping ann : anns) {
        QueryBinder.bindSqlResultSetMapping(ann,context,true);
      }
    }
  }
{
    final List<NamedStoredProcedureQuery> annotations=(List<NamedStoredProcedureQuery>)defaults.get(NamedStoredProcedureQuery.class);
    if (annotations != null) {
      for (      NamedStoredProcedureQuery annotation : annotations) {
        bindNamedStoredProcedureQuery(annotation,context,true);
      }
    }
  }
{
    final List<NamedStoredProcedureQueries> annotations=(List<NamedStoredProcedureQueries>)defaults.get(NamedStoredProcedureQueries.class);
    if (annotations != null) {
      for (      NamedStoredProcedureQueries annotation : annotations) {
        bindNamedStoredProcedureQueries(annotation,context,true);
      }
    }
  }
}
