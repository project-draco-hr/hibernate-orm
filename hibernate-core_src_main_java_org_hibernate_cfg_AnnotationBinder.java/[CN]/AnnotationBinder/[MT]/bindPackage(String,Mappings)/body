{
  XPackage pckg;
  try {
    pckg=mappings.getReflectionManager().packageForName(packageName);
  }
 catch (  ClassNotFoundException cnf) {
    LOG.packageNotFound(packageName);
    return;
  }
  if (pckg.isAnnotationPresent(SequenceGenerator.class)) {
    SequenceGenerator ann=pckg.getAnnotation(SequenceGenerator.class);
    IdGenerator idGen=buildIdGenerator(ann,mappings);
    mappings.addGenerator(idGen);
    LOG.addSequenceGenerator(idGen.getName());
  }
  if (pckg.isAnnotationPresent(TableGenerator.class)) {
    TableGenerator ann=pckg.getAnnotation(TableGenerator.class);
    IdGenerator idGen=buildIdGenerator(ann,mappings);
    mappings.addGenerator(idGen);
  }
  bindGenericGenerators(pckg,mappings);
  bindQueries(pckg,mappings);
  bindFilterDefs(pckg,mappings);
  bindTypeDefs(pckg,mappings);
  bindFetchProfiles(pckg,mappings);
  BinderHelper.bindAnyMetaDefs(pckg,mappings);
}
