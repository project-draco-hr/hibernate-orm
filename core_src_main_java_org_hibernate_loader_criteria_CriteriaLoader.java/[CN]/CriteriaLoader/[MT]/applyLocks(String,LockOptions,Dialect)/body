{
  if (lockOptions == null || (lockOptions.getLockMode() == LockMode.NONE && lockOptions.getAliasLockCount() == 0)) {
    return sqlSelectString;
  }
  final LockOptions locks=new LockOptions(lockOptions.getLockMode());
  locks.setScope(lockOptions.getScope());
  locks.setTimeOut(lockOptions.getTimeOut());
  final Map keyColumnNames=dialect.forUpdateOfColumns() ? new HashMap() : null;
  final String[] drivingSqlAliases=getAliases();
  for (int i=0; i < drivingSqlAliases.length; i++) {
    final LockMode lockMode=lockOptions.getAliasLockMode(drivingSqlAliases[i]);
    if (lockMode != null) {
      final Lockable drivingPersister=(Lockable)getEntityPersisters()[i];
      final String rootSqlAlias=drivingPersister.getRootTableAlias(drivingSqlAliases[i]);
      locks.setAliasLockMode(lockMode,rootSqlAlias);
      if (keyColumnNames != null) {
        keyColumnNames.put(rootSqlAlias,drivingPersister.getRootTableIdentifierColumnNames());
      }
    }
  }
  return dialect.applyLocksToSql(sqlSelectString,locks,keyColumnNames);
}
