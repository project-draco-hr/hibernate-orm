{
  Metadata metadata=new MetadataSources(ssr).buildMetadata();
  Database database=metadata.getDatabase();
  TableStructure tableStructure=new TableStructure(database.getJdbcEnvironment(),new QualifiedTableName(null,null,Identifier.toIdentifier("test_seq")),Identifier.toIdentifier("nextval"),20,30,Long.class);
  tableStructure.registerExportables(database);
  assertEquals(1,database.getDefaultNamespace().getTables().size());
  Table table=database.getDefaultNamespace().getTables().iterator().next();
  assertEquals(1,table.getInitCommands().size());
  final TargetImpl target=new TargetImpl();
  ssr.getService(SchemaManagementTool.class).getSchemaMigrator(Collections.emptyMap()).doMigration(metadata,new ExecutionOptions(){
    @Override public boolean shouldManageNamespaces(){
      return true;
    }
    @Override public Map getConfigurationValues(){
      return ssr.getService(ConfigurationService.class).getSettings();
    }
    @Override public ExceptionHandler getExceptionHandler(){
      return ExceptionHandlerLoggedImpl.INSTANCE;
    }
  }
,new TargetDescriptor(){
    @Override public EnumSet<TargetType> getTargetTypes(){
      return EnumSet.of(TargetType.SCRIPT,TargetType.DATABASE);
    }
    @Override public ScriptTargetOutput getScriptTargetOutput(){
      return target;
    }
  }
);
  assertTrue(target.found);
  new SchemaExport().drop(EnumSet.of(TargetType.DATABASE),metadata);
}
