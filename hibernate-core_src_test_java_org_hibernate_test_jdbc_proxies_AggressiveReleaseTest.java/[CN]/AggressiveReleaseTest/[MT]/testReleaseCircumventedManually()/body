{
  LogicalConnectionImpl logicalConnection=new LogicalConnectionImpl(null,ConnectionReleaseMode.AFTER_STATEMENT,services,null);
  Connection proxiedConnection=ProxyBuilder.buildConnection(logicalConnection);
  ConnectionCounter observer=new ConnectionCounter();
  logicalConnection.addObserver(observer);
  try {
    PreparedStatement ps=proxiedConnection.prepareStatement("insert into SANDBOX_JDBC_TST( ID, NAME ) values ( ?, ? )");
    ps.setLong(1,1);
    ps.setString(2,"name");
    ps.execute();
    assertTrue(logicalConnection.getResourceRegistry().hasRegisteredResources());
    assertEquals(1,observer.obtainCount);
    assertEquals(0,observer.releaseCount);
    ps.close();
    assertFalse(logicalConnection.getResourceRegistry().hasRegisteredResources());
    assertEquals(1,observer.obtainCount);
    assertEquals(1,observer.releaseCount);
    logicalConnection.disableReleases();
    ps=proxiedConnection.prepareStatement("select * from SANDBOX_JDBC_TST");
    ps.executeQuery();
    assertTrue(logicalConnection.getResourceRegistry().hasRegisteredResources());
    assertEquals(2,observer.obtainCount);
    assertEquals(1,observer.releaseCount);
    ps.close();
    assertFalse(logicalConnection.getResourceRegistry().hasRegisteredResources());
    assertEquals(2,observer.obtainCount);
    assertEquals(1,observer.releaseCount);
  }
 catch (  SQLException sqle) {
    fail("incorrect exception type : sqlexception");
  }
 finally {
    logicalConnection.close();
  }
  assertFalse(logicalConnection.getResourceRegistry().hasRegisteredResources());
  assertEquals(2,observer.obtainCount);
  assertEquals(2,observer.releaseCount);
}
