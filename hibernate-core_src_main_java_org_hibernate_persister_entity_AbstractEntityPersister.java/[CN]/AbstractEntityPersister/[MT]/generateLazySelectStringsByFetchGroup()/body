{
  final BytecodeEnhancementMetadata enhancementMetadata=entityMetamodel.getBytecodeEnhancementMetadata();
  if (!enhancementMetadata.isEnhancedForLazyLoading() || !enhancementMetadata.getLazyAttributesMetadata().hasLazyAttributes()) {
    return Collections.emptyMap();
  }
  Map<String,String> result=new HashMap<String,String>();
  final LazyAttributesMetadata lazyAttributesMetadata=enhancementMetadata.getLazyAttributesMetadata();
  for (  String groupName : lazyAttributesMetadata.getFetchGroupNames()) {
    HashSet tableNumbers=new HashSet();
    ArrayList columnNumbers=new ArrayList();
    ArrayList formulaNumbers=new ArrayList();
    for (    LazyAttributeDescriptor lazyAttributeDescriptor : lazyAttributesMetadata.getFetchGroupAttributeDescriptors(groupName)) {
      int propertyNumber=getSubclassPropertyIndex(lazyAttributeDescriptor.getName());
      int tableNumber=getSubclassPropertyTableNumber(propertyNumber);
      tableNumbers.add(tableNumber);
      int[] colNumbers=subclassPropertyColumnNumberClosure[propertyNumber];
      for (      int colNumber : colNumbers) {
        if (colNumber != -1) {
          columnNumbers.add(colNumber);
        }
      }
      int[] formNumbers=subclassPropertyFormulaNumberClosure[propertyNumber];
      for (      int formNumber : formNumbers) {
        if (formNumber != -1) {
          formulaNumbers.add(formNumber);
        }
      }
    }
    if (columnNumbers.size() == 0 && formulaNumbers.size() == 0) {
      continue;
    }
    result.put(groupName,renderSelect(ArrayHelper.toIntArray(tableNumbers),ArrayHelper.toIntArray(columnNumbers),ArrayHelper.toIntArray(formulaNumbers)));
  }
  return result;
}
