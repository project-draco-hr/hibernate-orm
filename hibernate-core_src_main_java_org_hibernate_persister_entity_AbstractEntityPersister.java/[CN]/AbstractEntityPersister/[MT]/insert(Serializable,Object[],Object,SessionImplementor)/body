{
  if (getEntityMetamodel().hasPreInsertGeneratedValues()) {
    final InMemoryValueGenerationStrategy[] strategies=getEntityMetamodel().getInMemoryValueGenerationStrategies();
    for (int i=0; i < strategies.length; i++) {
      if (strategies[i] != null && strategies[i].getGenerationTiming().includesInsert()) {
        fields[i]=strategies[i].getValueGenerator().generateValue((Session)session,object);
        setPropertyValue(object,i,fields[i]);
      }
    }
  }
  final int span=getTableSpan();
  if (entityMetamodel.isDynamicInsert()) {
    boolean[] notNull=getPropertiesToInsert(fields);
    for (int j=0; j < span; j++) {
      insert(id,fields,notNull,j,generateInsertString(notNull,j),object,session);
    }
  }
 else {
    for (int j=0; j < span; j++) {
      insert(id,fields,getPropertyInsertability(),j,getSQLInsertStrings()[j],object,session);
    }
  }
}
