{
  final CompositionDefinition compositeIdentifierAttributeAdapter=new CompositionDefinition(){
    @Override public String getName(){
      return entityMetamodel.getIdentifierProperty().getName();
    }
    @Override public Type getType(){
      return entityMetamodel.getIdentifierProperty().getType();
    }
    @Override public AttributeSource getSource(){
      return AbstractEntityPersister.this;
    }
    @Override public String toString(){
      return "<identifier-property:" + getName() + ">";
    }
    @Override public Iterable<AttributeDefinition> getAttributes(){
      ComponentType componentType=(ComponentType)getType();
      throw new NotYetImplementedException("cannot create sub-attribute definitions for a ComponentType yet.");
    }
  }
;
  return new EncapsulatedEntityIdentifierDefinition(){
    @Override public AttributeDefinition getAttributeDefinition(){
      return compositeIdentifierAttributeAdapter;
    }
    @Override public boolean isEncapsulated(){
      return true;
    }
    @Override public EntityDefinition getEntityDefinition(){
      return AbstractEntityPersister.this;
    }
  }
;
}
