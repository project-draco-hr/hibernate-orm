{
  Select select=new Select(getFactory().getDialect());
  if (getFactory().getSessionFactoryOptions().isCommentsEnabled()) {
    select.setComment("resolve id by unique property [" + getEntityName() + "."+ uniquePropertyName+ "]");
  }
  final String rooAlias=getRootAlias();
  select.setFromClause(fromTableFragment(rooAlias) + fromJoinFragment(rooAlias,true,false));
  SelectFragment selectFragment=new SelectFragment();
  selectFragment.addColumns(rooAlias,getIdentifierColumnNames(),getIdentifierAliases());
  select.setSelectClause(selectFragment);
  StringBuilder whereClauseBuffer=new StringBuilder();
  final int uniquePropertyIndex=getSubclassPropertyIndex(uniquePropertyName);
  final String uniquePropertyTableAlias=generateTableAlias(rooAlias,getSubclassPropertyTableNumber(uniquePropertyIndex));
  String sep="";
  for (  String columnTemplate : getSubclassPropertyColumnReaderTemplateClosure()[uniquePropertyIndex]) {
    if (columnTemplate == null) {
      continue;
    }
    final String columnReference=StringHelper.replace(columnTemplate,Template.TEMPLATE,uniquePropertyTableAlias);
    whereClauseBuffer.append(sep).append(columnReference).append("=?");
    sep=" and ";
  }
  for (  String formulaTemplate : getSubclassPropertyFormulaTemplateClosure()[uniquePropertyIndex]) {
    if (formulaTemplate == null) {
      continue;
    }
    final String formulaReference=StringHelper.replace(formulaTemplate,Template.TEMPLATE,uniquePropertyTableAlias);
    whereClauseBuffer.append(sep).append(formulaReference).append("=?");
    sep=" and ";
  }
  whereClauseBuffer.append(whereJoinFragment(rooAlias,true,false));
  select.setWhereClause(whereClauseBuffer.toString());
  return select.setOuterJoins("","").toStatementString();
}
