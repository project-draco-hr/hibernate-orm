{
  if (LOG.isTraceEnabled()) {
    LOG.tracef("Resolving natural-id [%s] to id : %s ",naturalIdValues,MessageHelper.infoString(this));
  }
  final boolean[] valueNullness=determineValueNullness(naturalIdValues);
  final String sqlEntityIdByNaturalIdString=determinePkByNaturalIdQuery(valueNullness);
  try {
    PreparedStatement ps=session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sqlEntityIdByNaturalIdString);
    try {
      int positions=1;
      int loop=0;
      for (      int idPosition : getNaturalIdentifierProperties()) {
        final Object naturalIdValue=naturalIdValues[loop++];
        if (naturalIdValue != null) {
          final Type type=getPropertyTypes()[idPosition];
          type.nullSafeSet(ps,naturalIdValue,positions,session);
          positions+=type.getColumnSpan(session.getFactory());
        }
      }
      ResultSet rs=session.getJdbcCoordinator().getResultSetReturn().extract(ps);
      try {
        if (!rs.next()) {
          return null;
        }
        final Object hydratedId=getIdentifierType().hydrate(rs,getIdentifierAliases(),session,null);
        return (Serializable)getIdentifierType().resolve(hydratedId,session,null);
      }
  finally {
        session.getJdbcCoordinator().getResourceRegistry().release(rs,ps);
      }
    }
  finally {
      session.getJdbcCoordinator().getResourceRegistry().release(ps);
      session.getJdbcCoordinator().afterStatementExecution();
    }
  }
 catch (  SQLException e) {
    throw getFactory().getSQLExceptionHelper().convert(e,String.format("could not resolve natural-id [%s] to id : %s",naturalIdValues,MessageHelper.infoString(this)),sqlEntityIdByNaturalIdString);
  }
}
