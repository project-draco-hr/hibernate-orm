{
  Select select=new Select(getFactory().getDialect());
  if (getFactory().getSettings().isCommentsEnabled()) {
    select.setComment("get generated state " + getEntityName());
  }
  String[] aliasedIdColumns=StringHelper.qualify(getRootAlias(),getIdentifierColumnNames());
  String selectClause=concretePropertySelectFragment(getRootAlias(),new InclusionChecker(){
    @Override public boolean includeProperty(    int propertyNumber){
      final InDatabaseValueGenerationStrategy generationStrategy=entityMetamodel.getInDatabaseValueGenerationStrategies()[propertyNumber];
      return generationStrategy != null && generationStrategy.getGenerationTiming() == generationTimingToMatch;
    }
  }
);
  selectClause=selectClause.substring(2);
  String fromClause=fromTableFragment(getRootAlias()) + fromJoinFragment(getRootAlias(),true,false);
  String whereClause=new StringBuilder().append(StringHelper.join("=? and ",aliasedIdColumns)).append("=?").append(whereJoinFragment(getRootAlias(),true,false)).toString();
  return select.setSelectClause(selectClause).setFromClause(fromClause).setOuterJoins("","").setWhereClause(whereClause).toStatementString();
}
