{
  session.getTransactionCoordinator().getJdbcCoordinator().executeBatch();
  try {
    PreparedStatement ps=session.getTransactionCoordinator().getJdbcCoordinator().getStatementPreparer().prepareStatement(selectionSQL);
    try {
      getIdentifierType().nullSafeSet(ps,id,1,session);
      ResultSet rs=session.getTransactionCoordinator().getJdbcCoordinator().getResultSetReturn().extract(ps);
      try {
        if (!rs.next()) {
          throw new HibernateException("Unable to locate row for retrieval of generated properties: " + MessageHelper.infoString(this,id,getFactory()));
        }
        for (int i=0; i < getPropertySpan(); i++) {
          if (includeds[i] != ValueInclusion.NONE) {
            Object hydratedState=getPropertyTypes()[i].hydrate(rs,getPropertyAliases("",i),session,entity);
            state[i]=getPropertyTypes()[i].resolve(hydratedState,session,entity);
            setPropertyValue(entity,i,state[i]);
          }
        }
      }
  finally {
        if (rs != null) {
          session.getTransactionCoordinator().getJdbcCoordinator().release(rs,ps);
        }
      }
    }
  finally {
      session.getTransactionCoordinator().getJdbcCoordinator().release(ps);
    }
  }
 catch (  SQLException e) {
    throw getFactory().getSQLExceptionHelper().convert(e,"unable to select generated column values",selectionSQL);
  }
}
