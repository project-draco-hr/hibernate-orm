{
  final Serializable id=session.getContextEntityIdentifier(entity);
  final EntityEntry entry=session.getPersistenceContext().getEntry(entity);
  if (entry == null) {
    throw new HibernateException("entity is not associated with the session: " + id);
  }
  if (LOG.isTraceEnabled()) {
    LOG.tracev("Initializing lazy properties of: {0}, field access: {1}",MessageHelper.infoString(this,id,getFactory()),fieldName);
  }
  if (session.getCacheMode().isGetEnabled() && hasCache()) {
    final CacheKey cacheKey=session.generateCacheKey(id,getIdentifierType(),getEntityName());
    final Object ce=CacheHelper.fromSharedCache(session,cacheKey,getCacheAccessStrategy());
    if (ce != null) {
      final CacheEntry cacheEntry=(CacheEntry)getCacheEntryStructure().destructure(ce,factory);
      if (!cacheEntry.areLazyPropertiesUnfetched()) {
        return initializeLazyPropertiesFromCache(fieldName,entity,session,entry,cacheEntry);
      }
    }
  }
  return initializeLazyPropertiesFromDatastore(fieldName,entity,session,id,entry);
}
