{
  return new TypeSwitch<XClass>(){
    @Override public XClass caseClass(    Class classType){
      TypeKey key=new TypeKey(classType,context);
      JavaXClass result=xClasses.get(key);
      if (result == null) {
        result=new JavaXClass(classType,context,JavaReflectionManager.this);
        xClasses.put(key,result);
      }
      return result;
    }
    @Override public XClass caseParameterizedType(    ParameterizedType parameterizedType){
      return toXClass(parameterizedType.getRawType(),typeEnvs.getEnvironment(parameterizedType,context));
    }
  }
.doSwitch(context.bind(t));
}
