{
  SharedSessionContractImplementor tempSession=null;
  if (session == null) {
    if (allowLoadOutsideTransaction) {
      tempSession=openTemporarySessionForLoading();
    }
 else {
      throwLazyInitializationException("could not initialize proxy - no Session");
    }
  }
 else   if (!session.isOpen()) {
    if (allowLoadOutsideTransaction) {
      tempSession=openTemporarySessionForLoading();
    }
 else {
      throwLazyInitializationException("could not initialize proxy - the owning Session was closed");
    }
  }
 else   if (!session.isConnected()) {
    if (allowLoadOutsideTransaction) {
      tempSession=openTemporarySessionForLoading();
    }
 else {
      throwLazyInitializationException("could not initialize proxy - the owning Session is disconnected");
    }
  }
  SharedSessionContractImplementor originalSession=null;
  boolean isJTA=false;
  if (tempSession != null) {
    isTempSession=true;
    originalSession=session;
    session=tempSession;
    isJTA=session.getTransactionCoordinator().getTransactionCoordinatorBuilder().isJta();
    if (!isJTA) {
      ((Session)session).beginTransaction();
    }
    session.getPersistenceContext().addUninitializedDetachedCollection(session.getFactory().getCollectionPersister(getRole()),this);
  }
  try {
    return lazyInitializationWork.doWork();
  }
  finally {
    if (tempSession != null) {
      isTempSession=false;
      session=originalSession;
      try {
        if (!isJTA) {
          ((Session)tempSession).getTransaction().commit();
        }
        ((Session)tempSession).close();
      }
 catch (      Exception e) {
        LOG.warn("Unable to close temporary session used to load lazy collection associated to no session");
      }
    }
  }
}
