{
  Session s;
  Transaction t;
  SessionFactory sessionFactory;
  Statistics statistics;
  s=openSession();
  s.setCacheMode(CacheMode.IGNORE);
  sessionFactory=s.getSessionFactory();
  sessionFactory.getCache().evictAllRegions();
  statistics=sessionFactory.getStatistics();
  statistics.clear();
  t=s.beginTransaction();
  PurchaseOrder purchaseOrder=new PurchaseOrder(1L,2L,1000L);
  s.persist(purchaseOrder);
  t.commit();
  s.close();
  assertEquals(0L,statistics.getSecondLevelCacheHitCount());
  assertEquals(0L,statistics.getSecondLevelCacheMissCount());
  assertEquals(0L,statistics.getSecondLevelCachePutCount());
  assertFalse(sessionFactory.getCache().containsEntity(PurchaseOrder.class,1L));
  s=openSession();
  s.setCacheMode(CacheMode.IGNORE);
  sessionFactory=s.getSessionFactory();
  sessionFactory.getCache().evictAllRegions();
  statistics=sessionFactory.getStatistics();
  statistics.clear();
  t=s.beginTransaction();
  PurchaseOrder result=(PurchaseOrder)s.get(PurchaseOrder.class,1L);
  result.setTotalAmount(2000L);
  t.commit();
  s.close();
  assertEquals(0,statistics.getSecondLevelCacheHitCount());
  assertEquals(0,statistics.getSecondLevelCacheMissCount());
  assertEquals(0,statistics.getSecondLevelCachePutCount());
  s=openSession();
  s.setCacheMode(CacheMode.GET);
  sessionFactory=s.getSessionFactory();
  t=s.beginTransaction();
  result=s.get(PurchaseOrder.class,1L);
  assertEquals(2000,result.getTotalAmount().longValue());
  t.commit();
  s.close();
  assertEquals(0,statistics.getSecondLevelCacheHitCount());
  assertEquals(1,statistics.getSecondLevelCacheMissCount());
  assertEquals(0,statistics.getSecondLevelCachePutCount());
}
