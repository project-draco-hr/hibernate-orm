{
  final StandardServiceRegistryBuilder ssrb=createStandardServiceRegistryBuilder();
  StandardServiceRegistry registry1=ssrb.build();
  StandardServiceRegistry registry2=ssrb.build();
  try {
    InfinispanRegionFactory regionFactory=CacheTestUtil.startRegionFactory(registry1,getCacheTestSupport());
    final Properties properties=CacheTestUtil.toProperties(ssrb.getSettings());
    boolean invalidation=false;
    avoidConcurrentFlush();
    GeneralDataRegion localRegion=(GeneralDataRegion)createRegion(regionFactory,getStandardRegionName(REGION_PREFIX),properties,null);
    regionFactory=CacheTestUtil.startRegionFactory(registry2,getCacheTestSupport());
    GeneralDataRegion remoteRegion=(GeneralDataRegion)createRegion(regionFactory,getStandardRegionName(REGION_PREFIX),properties,null);
    assertNull("local is clean",localRegion.get(KEY));
    assertNull("remote is clean",remoteRegion.get(KEY));
    regionPut(localRegion);
    sleep(250);
    assertEquals(VALUE1,localRegion.get(KEY));
    sleep(250);
    Object expected=invalidation ? null : VALUE1;
    assertEquals(expected,remoteRegion.get(KEY));
    regionEvict(localRegion);
    sleep(250);
    assertEquals(null,localRegion.get(KEY));
    assertEquals(null,remoteRegion.get(KEY));
  }
  finally {
    StandardServiceRegistryBuilder.destroy(registry1);
    StandardServiceRegistryBuilder.destroy(registry2);
  }
}
