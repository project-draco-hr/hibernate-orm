{
  final boolean naturalId=uniqueKey != null;
  final String entiytName=entityBinding.getEntity().getName();
  final TableSpecification tabe=entityBinding.getBaseTable();
  AttributeBinding attributeBinding=null;
  for (  Object attribute : entityClazz.getPropertyOrManyToOneOrOneToOne()) {
    if (org.hibernate.metamodel.source.hbm.xml.mapping.Bag.class.isInstance(attribute)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.Bag collection=org.hibernate.metamodel.source.hbm.xml.mapping.Bag.class.cast(attribute);
      BagBinding collectionBinding=entityBinding.makeBagAttributeBinding(collection.getName());
      bindBag(collection,collectionBinding,entityBinding);
      hibernateMappingBinder.getHibernateXmlBinder().getMetadata().addCollection(collectionBinding);
      attributeBinding=collectionBinding;
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.Idbag.class.isInstance(attribute)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.Idbag collection=org.hibernate.metamodel.source.hbm.xml.mapping.Idbag.class.cast(attribute);
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.Set.class.isInstance(attribute)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.Set collection=org.hibernate.metamodel.source.hbm.xml.mapping.Set.class.cast(attribute);
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.List.class.isInstance(attribute)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.List collection=org.hibernate.metamodel.source.hbm.xml.mapping.List.class.cast(attribute);
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.Map.class.isInstance(attribute)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.Map collection=org.hibernate.metamodel.source.hbm.xml.mapping.Map.class.cast(attribute);
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.ManyToOne.class.isInstance(attribute)) {
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.Any.class.isInstance(attribute)) {
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.OneToOne.class.isInstance(attribute)) {
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.Property.class.isInstance(attribute)) {
      org.hibernate.metamodel.source.hbm.xml.mapping.Property property=org.hibernate.metamodel.source.hbm.xml.mapping.Property.class.cast(attribute);
      SimpleAttributeBinding binding=entityBinding.makeSimpleAttributeBinding(property.getName());
      bindSimpleAttribute(property,binding,entityBinding);
      attributeBinding=binding;
    }
 else     if (org.hibernate.metamodel.source.hbm.xml.mapping.Component.class.isInstance(attribute) || org.hibernate.metamodel.source.hbm.xml.mapping.DynamicComponent.class.isInstance(attribute) || org.hibernate.metamodel.source.hbm.xml.mapping.Properties.class.isInstance(attribute)) {
    }
  }
  for (  org.hibernate.metamodel.source.hbm.xml.mapping.Join join : entityClazz.getJoin()) {
  }
  for (  org.hibernate.metamodel.source.hbm.xml.mapping.Subclass subclass : entityClazz.getSubclass()) {
  }
  for (  org.hibernate.metamodel.source.hbm.xml.mapping.JoinedSubclass subclass : entityClazz.getJoinedSubclass()) {
  }
  for (  org.hibernate.metamodel.source.hbm.xml.mapping.UnionSubclass subclass : entityClazz.getUnionSubclass()) {
  }
  for (  org.hibernate.metamodel.source.hbm.xml.mapping.Filter filter : entityClazz.getFilter()) {
  }
  if (entityClazz.getNaturalId() != null) {
  }
  if (entityClazz.getQueryOrSqlQuery() != null) {
    for (    Object queryOrSqlQuery : entityClazz.getQueryOrSqlQuery()) {
      if (org.hibernate.metamodel.source.hbm.xml.mapping.Query.class.isInstance(queryOrSqlQuery)) {
      }
 else       if (org.hibernate.metamodel.source.hbm.xml.mapping.SqlQuery.class.isInstance(queryOrSqlQuery)) {
      }
    }
  }
  if (entityClazz.getResultset() != null) {
    for (    org.hibernate.metamodel.source.hbm.xml.mapping.Resultset resultSet : entityClazz.getResultset()) {
    }
  }
}
