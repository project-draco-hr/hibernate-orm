{
  Item item1=new Item();
  item1.setName("item1");
  Hoarder hoarder=new Hoarder();
  hoarder.setName("joe");
  Session s=openSession();
  s.getTransaction().begin();
  s.persist(item1);
  s.persist(hoarder);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  Item item1_1=(Item)s.get(Item.class,item1.getId());
  s.close();
  assertFalse(item1 == item1_1);
  assertTrue(item1.equals(item1_1));
  hoarder.getItems().add(item1);
  hoarder.setFavoriteItem(item1_1);
  s=openSession();
  s.getTransaction().begin();
  hoarder=(Hoarder)s.merge(hoarder);
  assertEquals(1,hoarder.getItems().size());
  assertSame(hoarder.getFavoriteItem(),hoarder.getItems().iterator().next());
  assertEquals(item1.getId(),hoarder.getFavoriteItem().getId());
  assertEquals(item1.getCategory(),hoarder.getFavoriteItem().getCategory());
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.getTransaction().begin();
  hoarder=(Hoarder)s.get(Hoarder.class,hoarder.getId());
  assertEquals(1,hoarder.getItems().size());
  assertSame(hoarder.getFavoriteItem(),hoarder.getItems().iterator().next());
  assertEquals(item1.getId(),hoarder.getFavoriteItem().getId());
  assertEquals(item1.getCategory(),hoarder.getFavoriteItem().getCategory());
  s.getTransaction().commit();
  s.close();
  cleanup();
}
