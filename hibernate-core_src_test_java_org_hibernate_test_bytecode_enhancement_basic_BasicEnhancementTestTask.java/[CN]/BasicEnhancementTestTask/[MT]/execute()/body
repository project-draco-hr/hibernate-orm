{
  SimpleEntity entity=new SimpleEntity();
  assertTyping(ManagedEntity.class,entity);
  ManagedEntity managedEntity=(ManagedEntity)entity;
  assertSame(entity,managedEntity.$$_hibernate_getEntityInstance());
  assertNull(managedEntity.$$_hibernate_getEntityEntry());
  managedEntity.$$_hibernate_setEntityEntry(EnhancerTestUtils.makeEntityEntry());
  assertNotNull(managedEntity.$$_hibernate_getEntityEntry());
  managedEntity.$$_hibernate_setEntityEntry(null);
  assertNull(managedEntity.$$_hibernate_getEntityEntry());
  managedEntity.$$_hibernate_setNextManagedEntity(managedEntity);
  managedEntity.$$_hibernate_setPreviousManagedEntity(managedEntity);
  assertSame(managedEntity,managedEntity.$$_hibernate_getNextManagedEntity());
  assertSame(managedEntity,managedEntity.$$_hibernate_getPreviousManagedEntity());
  assertTyping(PersistentAttributeInterceptable.class,entity);
  PersistentAttributeInterceptable interceptableEntity=(PersistentAttributeInterceptable)entity;
  assertNull(interceptableEntity.$$_hibernate_getInterceptor());
  interceptableEntity.$$_hibernate_setInterceptor(new ObjectAttributeMarkerInterceptor());
  assertNotNull(interceptableEntity.$$_hibernate_getInterceptor());
  assertNull(EnhancerTestUtils.getFieldByReflection(entity,"anUnspecifiedObject"));
  entity.setAnObject(new Object());
  assertSame(EnhancerTestUtils.getFieldByReflection(entity,"anUnspecifiedObject"),ObjectAttributeMarkerInterceptor.WRITE_MARKER);
  assertSame(entity.getAnObject(),ObjectAttributeMarkerInterceptor.READ_MARKER);
  entity.setAnObject(null);
  assertSame(EnhancerTestUtils.getFieldByReflection(entity,"anUnspecifiedObject"),ObjectAttributeMarkerInterceptor.WRITE_MARKER);
}
