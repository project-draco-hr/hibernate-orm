{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Organization ifa=new Organization("IFA");
  Organization jboss=new Organization("JBoss");
  Serializable idIfa=s.save(ifa);
  Serializable idJBoss=s.save(jboss);
  s.flush();
  List result=s.getNamedQuery("orgNamesOnly").list();
  assertTrue(result.contains("IFA"));
  assertTrue(result.contains("JBoss"));
  result=s.getNamedQuery("orgNamesOnly").setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();
  Map m=(Map)result.get(0);
  assertEquals(2,result.size());
  assertEquals(1,m.size());
  assertTrue(m.containsKey("NAME"));
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  Iterator iter=s.getNamedQuery("orgNamesAndOrgs").list().iterator();
  Object[] o=(Object[])iter.next();
  assertEquals("expecting 2 values",2,o.length);
  assertEquals(o[0],"IFA");
  assertEquals(((Organization)o[1]).getName(),"IFA");
  o=(Object[])iter.next();
  assertEquals(o[0],"JBoss");
  assertEquals(((Organization)o[1]).getName(),"JBoss");
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  iter=s.getNamedQuery("orgsAndOrgNames").list().iterator();
  Object[] row=(Object[])iter.next();
  assertEquals("expecting 2 values",2,row.length);
  assertEquals("expecting non-scalar result first",Organization.class,row[0].getClass());
  assertEquals("expecting scalar result second",String.class,row[1].getClass());
  assertEquals(((Organization)row[0]).getName(),"IFA");
  assertEquals(row[1],"IFA");
  row=(Object[])iter.next();
  assertEquals("expecting non-scalar result first",Organization.class,row[0].getClass());
  assertEquals("expecting scalar result second",String.class,row[1].getClass());
  assertEquals(((Organization)row[0]).getName(),"JBoss");
  assertEquals(row[1],"JBoss");
  assertFalse(iter.hasNext());
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  iter=s.getNamedQuery("orgIdsAndOrgNames").list().iterator();
  o=(Object[])iter.next();
  assertEquals(o[1],"IFA");
  assertEquals(o[0],idIfa);
  o=(Object[])iter.next();
  assertEquals(o[1],"JBoss");
  assertEquals(o[0],idJBoss);
  s.delete(ifa);
  s.delete(jboss);
  t.commit();
  s.close();
}
