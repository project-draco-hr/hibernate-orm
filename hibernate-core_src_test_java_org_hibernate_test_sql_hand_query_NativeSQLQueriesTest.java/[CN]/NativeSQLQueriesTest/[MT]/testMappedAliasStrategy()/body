{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Organization ifa=new Organization("IFA");
  Organization jboss=new Organization("JBoss");
  Person gavin=new Person("Gavin");
  Employment emp=new Employment(gavin,jboss,"AU");
  Serializable orgId=s.save(jboss);
  Serializable orgId2=s.save(ifa);
  s.save(gavin);
  s.save(emp);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  Query namedQuery=s.getNamedQuery("AllEmploymentAsMapped");
  List list=namedQuery.list();
  assertEquals(1,list.size());
  Employment emp2=(Employment)list.get(0);
  assertEquals(emp2.getEmploymentId(),emp.getEmploymentId());
  assertEquals(emp2.getStartDate().getDate(),emp.getStartDate().getDate());
  assertEquals(emp2.getEndDate(),emp.getEndDate());
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  Query sqlQuery=s.getNamedQuery("EmploymentAndPerson");
  sqlQuery.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP);
  list=sqlQuery.list();
  assertEquals(1,list.size());
  Object res=list.get(0);
  assertClassAssignability(Map.class,res.getClass());
  Map m=(Map)res;
  assertEquals(2,m.size());
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  sqlQuery=s.getNamedQuery("organizationreturnproperty");
  sqlQuery.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP);
  list=sqlQuery.list();
  assertEquals(2,list.size());
  m=(Map)list.get(0);
  assertEquals(2,m.size());
  assertTrue(m.containsKey("org"));
  assertTrue(m.containsKey("emp"));
  assertClassAssignability(m.get("org").getClass(),Organization.class);
  if (jboss.getId() == ((Organization)m.get("org")).getId()) {
    assertClassAssignability(m.get("emp").getClass(),Employment.class);
  }
  Map m2=(Map)list.get(1);
  assertEquals(2,m.size());
  assertTrue(m2.containsKey("org"));
  assertTrue(m2.containsKey("emp"));
  assertClassAssignability(m2.get("org").getClass(),Organization.class);
  if (jboss.getId() == ((Organization)m2.get("org")).getId()) {
    assertClassAssignability(m2.get("emp").getClass(),Employment.class);
  }
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  namedQuery=s.getNamedQuery("EmploymentAndPerson");
  list=namedQuery.list();
  assertEquals(1,list.size());
  Object[] objs=(Object[])list.get(0);
  assertEquals(2,objs.length);
  emp2=(Employment)objs[0];
  gavin=(Person)objs[1];
  s.delete(emp2);
  s.delete(jboss);
  s.delete(gavin);
  s.delete(ifa);
  t.commit();
  s.close();
}
