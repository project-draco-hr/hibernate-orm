{
  if (!org.hibernate.internal.AbstractQueryImpl.class.isInstance(query)) {
    throw new IllegalStateException("Unknown query type for parameter extraction");
  }
  final ParameterMetadata parameterMetadata=org.hibernate.internal.AbstractQueryImpl.class.cast(query).getParameterMetadata();
  for (  String name : (Set<String>)parameterMetadata.getNamedParameterNames()) {
    final NamedParameterDescriptor descriptor=parameterMetadata.getNamedParameterDescriptor(name);
    Class javaType=namedParameterTypeRedefinition.get(name);
    if (javaType != null && mightNeedRedefinition(javaType,descriptor.getExpectedType())) {
      descriptor.resetExpectedType(sfi().getTypeResolver().heuristicType(javaType.getName()));
    }
 else     if (descriptor.getExpectedType() != null) {
      javaType=descriptor.getExpectedType().getReturnedClass();
    }
    registerParameter(new ParameterRegistrationImpl(query,name,javaType));
    if (descriptor.isJpaStyle()) {
      if (jpaPositionalIndices == null) {
        jpaPositionalIndices=new HashSet<Integer>();
      }
      jpaPositionalIndices.add(Integer.valueOf(name));
    }
  }
  for (int i=0, max=parameterMetadata.getOrdinalParameterCount(); i < max; i++) {
    final OrdinalParameterDescriptor descriptor=parameterMetadata.getOrdinalParameterDescriptor(i + 1);
    Class javaType=descriptor.getExpectedType() == null ? null : descriptor.getExpectedType().getReturnedClass();
    registerParameter(new ParameterRegistrationImpl(query,i + 1,javaType));
    Integer position=descriptor.getOrdinalPosition();
    if (jpaPositionalIndices != null && jpaPositionalIndices.contains(position)) {
      LOG.parameterPositionOccurredAsBothJpaAndHibernatePositionalParameter(position);
    }
  }
}
