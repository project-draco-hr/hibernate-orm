{
  final ClassLoaderService cls=options.getServiceRegistry().getService(ClassLoaderService.class);
  DeploymentResources deploymentResources=DeploymentResourcesInterpreter.INSTANCE.buildDeploymentResources(options.getScanEnvironment(),scanResult,options.getServiceRegistry());
  for (  ClassDescriptor classDescriptor : deploymentResources.getClassDescriptors()) {
    final String className=classDescriptor.getName();
    try {
      final Class classRef=cls.classForName(className);
      final Converter converter=(Converter)classRef.getAnnotation(Converter.class);
      if (converter != null) {
        options.addAttributeConverterDefinition(AttributeConverterDefinition.from(classRef,converter.autoApply()));
      }
 else {
        sources.addAnnotatedClass(classRef);
      }
    }
 catch (    ClassLoadingException e) {
      sources.addAnnotatedClassName(className);
    }
  }
  for (  PackageDescriptor packageDescriptor : deploymentResources.getPackageDescriptors()) {
    sources.addPackage(packageDescriptor.getName());
  }
  for (  MappingFileDescriptor mappingFileDescriptor : deploymentResources.getMappingFileDescriptors()) {
    sources.addInputStream(mappingFileDescriptor.getStreamAccess());
  }
}
