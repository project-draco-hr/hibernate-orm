{
  IntegralDataTypeHolder value=IdentifierGeneratorHelper.getIntegralDataTypeHolder(returnClass);
  int rows;
  do {
    SQL_STATEMENT_LOGGER.logStatement(sql,FormatStyle.BASIC);
    PreparedStatement qps=conn.prepareStatement(query);
    PreparedStatement ips=null;
    try {
      ResultSet rs=qps.executeQuery();
      boolean isInitialized=rs.next();
      if (!isInitialized) {
        value.initialize(0);
        ips=conn.prepareStatement(insert);
        value.bind(ips,1);
        ips.execute();
      }
 else {
        value.initialize(rs,0);
      }
      rs.close();
    }
 catch (    SQLException sqle) {
      log.error("could not read or init a hi value",sqle);
      throw sqle;
    }
 finally {
      if (ips != null) {
        ips.close();
      }
      qps.close();
    }
    PreparedStatement ups=conn.prepareStatement(update);
    try {
      value.copy().increment().bind(ups,1);
      value.bind(ups,2);
      rows=ups.executeUpdate();
    }
 catch (    SQLException sqle) {
      log.error("could not update hi value in: " + tableName,sqle);
      throw sqle;
    }
 finally {
      ups.close();
    }
  }
 while (rows == 0);
  return value;
}
