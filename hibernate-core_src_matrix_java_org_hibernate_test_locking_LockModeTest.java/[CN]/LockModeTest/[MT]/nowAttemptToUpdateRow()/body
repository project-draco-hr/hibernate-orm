{
  try {
    new TimedExecutor(10 * 1000,1 * 1000).execute(new Executable(){
      Session s;
      @Override public void execute(){
        s=sessionFactory().openSession();
        s.beginTransaction();
        try {
          A it=(A)s.get(A.class,1,new LockOptions(LockMode.PESSIMISTIC_WRITE).setTimeOut(LockOptions.NO_WAIT));
          it.setValue("changed");
          s.flush();
          fail("Pessimistic lock not obtained/held");
        }
 catch (        Exception e) {
          if (LockAcquisitionException.class.isInstance(e) || GenericJDBCException.class.isInstance(e) || PessimisticLockException.class.isInstance(e)) {
          }
 else {
            fail("Unexpected error type testing pessimistic locking : " + e.getClass().getName());
          }
        }
 finally {
          shutDown();
        }
      }
      private void shutDown(){
        try {
          s.getTransaction().rollback();
          s.close();
        }
 catch (        Exception ignore) {
        }
        s=null;
      }
      @Override public void timedOut(){
        s.cancelQuery();
        shutDown();
      }
    }
);
  }
 catch (  TimeoutException e) {
  }
}
