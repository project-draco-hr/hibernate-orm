{
  final Value value=property.getValue();
  org.hibernate.type.Type type=value.getType();
  if (type.isAnyType()) {
    throw new UnsupportedOperationException("any not supported yet");
  }
 else   if (type.isAssociationType()) {
    if (type.isCollectionType()) {
      if (value instanceof Collection) {
        Collection collValue=(Collection)value;
        collValue.getCollectionType();
        Value elementValue=collValue.getElement();
        final org.hibernate.type.Type elementType=elementValue.getType();
        if (elementValue instanceof Component) {
          return buildEmbeddableType(elementValue,elementType,context);
        }
 else         if (elementType.isAnyType()) {
          throw new UnsupportedOperationException("collection of any not supported yet");
        }
 else         if (elementType.isAssociationType()) {
          return buildEntityType(elementType,context);
        }
 else {
          buildBasicType(elementType);
        }
      }
 else       if (value instanceof OneToMany) {
        return buildEntityType(value.getType(),context);
      }
    }
 else {
      return buildEntityType(type,context);
    }
  }
 else   if (property.isComposite()) {
    return buildEmbeddableType(value,type,context);
  }
 else {
    return buildBasicType(type);
  }
  throw new UnsupportedOperationException("oops, we are missing something: " + property.toString());
}
