{
  checkOpen();
  checkTransactionSynchStatus();
  if (object == null) {
    return false;
  }
  try {
    if (object instanceof HibernateProxy) {
      LazyInitializer li=((HibernateProxy)object).getHibernateLazyInitializer();
      if (li.isUninitialized()) {
        return li.getSession() == this;
      }
 else {
        object=li.getImplementation();
      }
    }
    EntityEntry entry=persistenceContext.getEntry(object);
    delayedAfterCompletion();
    if (entry == null) {
      if (!HibernateProxy.class.isInstance(object) && persistenceContext.getEntry(object) == null) {
        try {
          final String entityName=getEntityNameResolver().resolveEntityName(object);
          if (entityName == null) {
            throw new IllegalArgumentException("Could not resolve entity-name [" + object + "]");
          }
          getSessionFactory().getMetamodel().entityPersister(object.getClass());
        }
 catch (        HibernateException e) {
          throw new IllegalArgumentException("Not an entity [" + object.getClass() + "]",e);
        }
      }
      return false;
    }
 else {
      return entry.getStatus() != Status.DELETED && entry.getStatus() != Status.GONE;
    }
  }
 catch (  MappingException e) {
    throw new IllegalArgumentException(e.getMessage(),e);
  }
catch (  RuntimeException e) {
    throw convert(e);
  }
}
