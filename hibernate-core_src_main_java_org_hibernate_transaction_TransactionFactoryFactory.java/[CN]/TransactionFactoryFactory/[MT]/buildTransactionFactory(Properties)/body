{
  String strategyClassName=transactionProps.getProperty(Environment.TRANSACTION_STRATEGY);
  if (strategyClassName == null) {
    LOG.usingDefaultTransactionStrategy();
    return new JDBCTransactionFactory();
  }
  LOG.transactionStrategy(strategyClassName);
  TransactionFactory factory;
  try {
    factory=(TransactionFactory)ReflectHelper.classForName(strategyClassName).newInstance();
  }
 catch (  ClassNotFoundException e) {
    LOG.error(LOG.transactionFactoryClassNotFound(strategyClassName),e);
    throw new HibernateException(LOG.transactionFactoryClassNotFound(strategyClassName));
  }
catch (  IllegalAccessException e) {
    LOG.error(LOG.unableToInstantiateTransactionFactory(),e);
    throw new HibernateException(LOG.unableToInstantiateTransactionFactory(),e);
  }
catch (  java.lang.InstantiationException e) {
    LOG.error(LOG.unableToInstantiateTransactionFactory(),e);
    throw new HibernateException(LOG.unableToInstantiateTransactionFactory(),e);
  }
  factory.configure(transactionProps);
  return factory;
}
