{
  Session s=openSession();
  Transaction tx=s.beginTransaction();
  Flight firstOne=new Flight();
  firstOne.setId(Long.valueOf(2));
  firstOne.setName("AF3202");
  firstOne.setDuration(Long.valueOf(500));
  s.save(firstOne);
  s.flush();
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  firstOne=(Flight)s.get(Flight.class,Long.valueOf(2));
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  Flight concurrentOne=(Flight)s.get(Flight.class,Long.valueOf(2));
  concurrentOne.setDuration(Long.valueOf(1000));
  s.update(concurrentOne);
  tx.commit();
  s.close();
  assertFalse(firstOne == concurrentOne);
  assertFalse(firstOne.getVersion().equals(concurrentOne.getVersion()));
  s=openSession();
  tx=s.beginTransaction();
  firstOne.setName("Second access");
  s.update(firstOne);
  try {
    tx.commit();
    fail("Optimistic locking should work");
  }
 catch (  StaleStateException expected) {
  }
 finally {
    if (tx != null) {
      tx.rollback();
    }
    s.close();
  }
}
