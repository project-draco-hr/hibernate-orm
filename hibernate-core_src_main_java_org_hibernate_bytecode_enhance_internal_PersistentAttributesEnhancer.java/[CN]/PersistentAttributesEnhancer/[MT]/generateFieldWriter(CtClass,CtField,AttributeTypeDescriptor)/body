{
  String fieldName=persistentField.getName();
  String readerName=EnhancerConstants.PERSISTENT_FIELD_READER_PREFIX + fieldName;
  String writerName=EnhancerConstants.PERSISTENT_FIELD_WRITER_PREFIX + fieldName;
  CtMethod tmpSuperReader=null;
  CtMethod tmpSuperWriter=null;
  CtMethod writer;
  try {
    boolean declared=persistentField.getDeclaringClass().equals(managedCtClass);
    String declaredWriteFragment="this." + fieldName + "="+ fieldName+ ";";
    String superWriteFragment="super." + writerName + "("+ fieldName+ ");";
    if (!declared) {
      try {
        persistentField.getDeclaringClass().getDeclaredMethod(readerName);
        persistentField.getDeclaringClass().getDeclaredMethod(writerName);
      }
 catch (      NotFoundException nfe) {
        tmpSuperReader=MethodWriter.addGetter(persistentField.getDeclaringClass(),persistentField.getName(),readerName);
        tmpSuperWriter=MethodWriter.addSetter(persistentField.getDeclaringClass(),persistentField.getName(),writerName);
      }
    }
    if (!enhancementContext.hasLazyLoadableAttributes(managedCtClass) || !enhancementContext.isLazyLoadable(persistentField)) {
      writer=MethodWriter.write(managedCtClass,"public void %s(%s %s) {%n  %s%n}",writerName,persistentField.getType().getName(),fieldName,declared ? declaredWriteFragment : superWriteFragment);
    }
 else {
      writer=MethodWriter.write(managedCtClass,"public void %s(%s %s) {%n%s%n}",writerName,persistentField.getType().getName(),fieldName,typeDescriptor.buildWriteInterceptionBodyFragment(fieldName));
    }
    if (enhancementContext.doDirtyCheckingInline(managedCtClass)) {
      if (enhancementContext.isCompositeClass(managedCtClass)) {
        writer.insertBefore(String.format("  if (%1$s != null) { %1$s.callOwner(\"\"); }%n",EnhancerConstants.TRACKER_COMPOSITE_FIELD_NAME));
      }
 else {
        writer.insertBefore(typeDescriptor.buildInLineDirtyCheckingBodyFragment(enhancementContext,persistentField));
      }
      handleCompositeField(managedCtClass,persistentField,writer);
    }
    if (enhancementContext.doBiDirectionalAssociationManagement(persistentField)) {
      handleBiDirectionalAssociation(managedCtClass,persistentField,writer);
    }
    if (tmpSuperReader != null) {
      persistentField.getDeclaringClass().removeMethod(tmpSuperReader);
    }
    if (tmpSuperWriter != null) {
      persistentField.getDeclaringClass().removeMethod(tmpSuperWriter);
    }
    return writer;
  }
 catch (  CannotCompileException cce) {
    final String msg=String.format("Could not enhance entity class [%s] to add field writer method [%s]",managedCtClass.getName(),writerName);
    throw new EnhancementException(msg,cce);
  }
catch (  NotFoundException nfe) {
    final String msg=String.format("Could not enhance entity class [%s] to add field writer method [%s]",managedCtClass.getName(),writerName);
    throw new EnhancementException(msg,nfe);
  }
}
