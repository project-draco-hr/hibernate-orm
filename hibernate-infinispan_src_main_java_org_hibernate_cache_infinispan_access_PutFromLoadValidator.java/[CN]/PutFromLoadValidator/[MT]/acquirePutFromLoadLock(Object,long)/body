{
  if (trace) {
    log.tracef("acquirePutFromLoadLock(%s#%s, %d)",cache.getName(),key,txTimestamp);
  }
  boolean locked=false;
  PendingPutMap pending=pendingPuts.get(key);
  for (; ; ) {
    try {
      if (pending != null) {
        locked=pending.acquireLock(100,TimeUnit.MILLISECONDS);
        if (locked) {
          boolean valid=false;
          try {
            if (pending.isRemoved()) {
              pending.releaseLock();
              locked=false;
              pending=null;
              if (trace) {
                log.tracef("Record removed when waiting for the lock.");
              }
              continue;
            }
            final PendingPut toCancel=pending.remove(getLocalLockOwner());
            if (toCancel != null) {
              valid=!toCancel.completed;
              toCancel.completed=true;
            }
 else {
              if (pending.hasInvalidator()) {
                valid=false;
              }
 else               if (pending.lastInvalidationEnd != Long.MIN_VALUE) {
                valid=txTimestamp > pending.lastInvalidationEnd;
              }
 else {
                valid=txTimestamp > regionInvalidationTimestamp;
              }
            }
            return valid ? pending : null;
          }
  finally {
            if (!valid && pending != null) {
              pending.releaseLock();
              locked=false;
            }
            if (trace) {
              log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s",cache.getName(),key,txTimestamp,pending,valid);
            }
          }
        }
 else {
          if (trace) {
            log.tracef("acquirePutFromLoadLock(%s#%s, %d) failed to lock",cache.getName(),key,txTimestamp);
          }
          return null;
        }
      }
 else {
        long regionInvalidationTimestamp=this.regionInvalidationTimestamp;
        if (txTimestamp <= regionInvalidationTimestamp) {
          if (trace) {
            log.tracef("acquirePutFromLoadLock(%s#%s, %d) failed due to region invalidated at %d",cache.getName(),key,txTimestamp,regionInvalidationTimestamp);
          }
          return null;
        }
 else {
          if (trace) {
            log.tracef("Region invalidated at %d, this transaction started at %d",regionInvalidationTimestamp,txTimestamp);
          }
        }
        PendingPut pendingPut=new PendingPut(getLocalLockOwner());
        pending=new PendingPutMap(pendingPut);
        PendingPutMap existing=pendingPuts.putIfAbsent(key,pending);
        if (existing != null) {
          pending=existing;
        }
      }
    }
 catch (    Throwable t) {
      if (locked) {
        pending.releaseLock();
      }
      if (t instanceof RuntimeException) {
        throw (RuntimeException)t;
      }
 else       if (t instanceof Error) {
        throw (Error)t;
      }
 else {
        throw new RuntimeException(t);
      }
    }
  }
}
