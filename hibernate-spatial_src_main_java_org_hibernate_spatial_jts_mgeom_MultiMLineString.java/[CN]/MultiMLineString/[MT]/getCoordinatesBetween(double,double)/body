{
  if (!this.isMonotone(false)) {
    throw new MGeometryException(MGeometryException.OPERATION_REQUIRES_MONOTONE,"Operation requires geometry with monotonic measures");
  }
  if (this.isEmpty()) {
    return null;
  }
  java.util.ArrayList<CoordinateSequence> ar=new java.util.ArrayList<CoordinateSequence>();
  for (int i=0; i < this.getNumGeometries(); i++) {
    MLineString ml=(MLineString)this.getGeometryN(i);
    for (    CoordinateSequence cs : ml.getCoordinatesBetween(begin,end)) {
      if (cs.size() > 0) {
        ar.add(cs);
      }
    }
  }
  return ar.toArray(new CoordinateSequence[ar.size()]);
}
