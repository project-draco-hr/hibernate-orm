{
  final EnversService enversService=serviceRegistry.getService(EnversService.class);
  if (!enversService.isEnabled()) {
    return;
  }
  if (!enversService.isInitialized()) {
    throw new HibernateException("Expecting EnversService to have been initialized prior to call to EnversIntegrator#integrate");
  }
  final EventListenerRegistry listenerRegistry=serviceRegistry.getService(EventListenerRegistry.class);
  listenerRegistry.addDuplicationStrategy(EnversListenerDuplicationStrategy.INSTANCE);
  if (enversService.getEntitiesConfigurations().hasAuditedEntities()) {
    listenerRegistry.appendListeners(EventType.POST_DELETE,new EnversPostDeleteEventListenerImpl(enversService));
    listenerRegistry.appendListeners(EventType.POST_INSERT,new EnversPostInsertEventListenerImpl(enversService));
    listenerRegistry.appendListeners(EventType.POST_UPDATE,new EnversPostUpdateEventListenerImpl(enversService));
    listenerRegistry.appendListeners(EventType.POST_COLLECTION_RECREATE,new EnversPostCollectionRecreateEventListenerImpl(enversService));
    listenerRegistry.appendListeners(EventType.PRE_COLLECTION_REMOVE,new EnversPreCollectionRemoveEventListenerImpl(enversService));
    listenerRegistry.appendListeners(EventType.PRE_COLLECTION_UPDATE,new EnversPreCollectionUpdateEventListenerImpl(enversService));
  }
}
