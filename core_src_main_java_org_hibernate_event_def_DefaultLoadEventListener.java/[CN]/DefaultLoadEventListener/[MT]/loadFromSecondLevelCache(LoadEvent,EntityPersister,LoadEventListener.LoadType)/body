{
  final SessionImplementor source=event.getSession();
  final boolean useCache=persister.hasCache() && source.getCacheMode().isGetEnabled() && event.getLockMode().lessThan(LockMode.READ);
  if (useCache) {
    final SessionFactoryImplementor factory=source.getFactory();
    final CacheKey ck=new CacheKey(event.getEntityId(),persister.getIdentifierType(),persister.getRootEntityName(),source.getEntityMode(),source.getFactory());
    Object ce=persister.getCacheAccessStrategy().get(ck,source.getTimestamp());
    if (factory.getStatistics().isStatisticsEnabled()) {
      if (ce == null) {
        factory.getStatisticsImplementor().secondLevelCacheMiss(persister.getCacheAccessStrategy().getRegion().getName());
      }
 else {
        factory.getStatisticsImplementor().secondLevelCacheHit(persister.getCacheAccessStrategy().getRegion().getName());
      }
    }
    if (ce != null) {
      CacheEntry entry=(CacheEntry)persister.getCacheEntryStructure().destructure(ce,factory);
      return assembleCacheEntry(entry,event.getEntityId(),persister,event);
    }
  }
  return null;
}
