{
  collection.setOwner(entity);
  CollectionEntry ce=session.getPersistenceContext().getCollectionEntry(collection);
  if (ce == null) {
    throw new HibernateException("Found two representations of same collection: " + type.getRole());
  }
  if (ce.isReached()) {
    throw new HibernateException("Found shared references to a collection: " + type.getRole());
  }
  ce.setReached(true);
  SessionFactoryImplementor factory=session.getFactory();
  CollectionPersister persister=factory.getCollectionPersister(type.getRole());
  ce.setCurrentPersister(persister);
  ce.setCurrentKey(type.getKeyOfOwner(entity,session));
  if (LOG.isDebugEnabled()) {
    if (collection.wasInitialized())     LOG.debug("Collection found: " + MessageHelper.collectionInfoString(persister,ce.getCurrentKey(),factory) + ", was: "+ MessageHelper.collectionInfoString(ce.getLoadedPersister(),ce.getLoadedKey(),factory)+ " (initialized)");
 else     LOG.debug("Collection found: " + MessageHelper.collectionInfoString(persister,ce.getCurrentKey(),factory) + ", was: "+ MessageHelper.collectionInfoString(ce.getLoadedPersister(),ce.getLoadedKey(),factory)+ " (uninitialized)");
  }
  prepareCollectionForUpdate(collection,ce,session.getEntityMode(),factory);
}
