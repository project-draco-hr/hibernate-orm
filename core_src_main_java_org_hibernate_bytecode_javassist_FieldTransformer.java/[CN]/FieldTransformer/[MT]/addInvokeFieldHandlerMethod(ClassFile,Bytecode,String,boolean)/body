{
  ConstPool cp=classfile.getConstPool();
  int callback_type_index=cp.addClassInfo(FIELD_HANDLER_TYPE_NAME);
  if ((typeName.charAt(0) == 'L') && (typeName.charAt(typeName.length() - 1) == ';') || (typeName.charAt(0) == '[')) {
    int indexOfL=typeName.indexOf('L');
    String type;
    if (indexOfL == 0) {
      type=typeName.substring(1,typeName.length() - 1);
      type=type.replace('/','.');
    }
 else     if (indexOfL == -1) {
      type=typeName;
    }
 else {
      type=typeName.replace('/','.');
    }
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readObject","(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;",4);
      code.addCheckcast(type);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeObject","(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",5);
      code.addCheckcast(type);
    }
  }
 else   if (typeName.equals("Z")) {
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readBoolean","(Ljava/lang/Object;Ljava/lang/String;Z)Z",4);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeBoolean","(Ljava/lang/Object;Ljava/lang/String;ZZ)Z",5);
    }
  }
 else   if (typeName.equals("B")) {
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readByte","(Ljava/lang/Object;Ljava/lang/String;B)B",4);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeByte","(Ljava/lang/Object;Ljava/lang/String;BB)B",5);
    }
  }
 else   if (typeName.equals("C")) {
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readChar","(Ljava/lang/Object;Ljava/lang/String;C)C",4);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeChar","(Ljava/lang/Object;Ljava/lang/String;CC)C",5);
    }
  }
 else   if (typeName.equals("I")) {
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readInt","(Ljava/lang/Object;Ljava/lang/String;I)I",4);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeInt","(Ljava/lang/Object;Ljava/lang/String;II)I",5);
    }
  }
 else   if (typeName.equals("S")) {
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readShort","(Ljava/lang/Object;Ljava/lang/String;S)S",4);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeShort","(Ljava/lang/Object;Ljava/lang/String;SS)S",5);
    }
  }
 else   if (typeName.equals("D")) {
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readDouble","(Ljava/lang/Object;Ljava/lang/String;D)D",5);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeDouble","(Ljava/lang/Object;Ljava/lang/String;DD)D",7);
    }
  }
 else   if (typeName.equals("F")) {
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readFloat","(Ljava/lang/Object;Ljava/lang/String;F)F",4);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeFloat","(Ljava/lang/Object;Ljava/lang/String;FF)F",5);
    }
  }
 else   if (typeName.equals("J")) {
    if (isReadMethod) {
      code.addInvokeinterface(callback_type_index,"readLong","(Ljava/lang/Object;Ljava/lang/String;J)J",5);
    }
 else {
      code.addInvokeinterface(callback_type_index,"writeLong","(Ljava/lang/Object;Ljava/lang/String;JJ)J",7);
    }
  }
 else {
    throw new RuntimeException("bad type: " + typeName);
  }
}
