{
  CoordinateSequence[] result;
  result=incrLine.getCoordinatesBetween(-0.5,5);
  assertEquals(1,result.length);
  Coordinate[] crds=result[0].toCoordinateArray();
  assertEquals(5,crds.length);
  assertEquals(MCoordinate.create2dWithMeasure(0.0,0.0,0.0),crds[0]);
  assertEquals(MCoordinate.create2dWithMeasure(4.0,0.0,4.0),crds[crds.length - 1]);
  result=incrLine.getCoordinatesBetween(0.5,5);
  assertEquals(1,result.length);
  crds=result[0].toCoordinateArray();
  assertEquals(5,crds.length);
  assertEquals(MCoordinate.create2dWithMeasure(0.5,0.0,0.5),crds[0]);
  assertEquals(MCoordinate.create2dWithMeasure(4.0,0.0,4.0),crds[crds.length - 1]);
  result=incrLine.getCoordinatesBetween(-1.0,2.5);
  assertEquals(1,result.length);
  crds=result[0].toCoordinateArray();
  assertEquals(4,crds.length);
  assertEquals(MCoordinate.create2dWithMeasure(0.0,0.0,0.0),crds[0]);
  assertEquals(MCoordinate.create2dWithMeasure(2.5,0.0,2.5),crds[crds.length - 1]);
  result=incrLine.getCoordinatesBetween(4.0,5.5);
  assertEquals(1,result.length);
  crds=result[0].toCoordinateArray();
  assertEquals(1,crds.length);
}
