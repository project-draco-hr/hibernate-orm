{
  if (!this.isMonotone(false)) {
    throw new MGeometryException(MGeometryException.OPERATION_REQUIRES_MONOTONE);
  }
  if (this.isEmpty()) {
    return null;
  }
 else {
    double mval[]=this.getMeasures();
    double lb=getMinM();
    double up=getMaxM();
    if (m < lb || m > up) {
      return null;
    }
 else {
      for (int i=1; i < mval.length; i++) {
        if ((mval[i - 1] <= m && m <= mval[i]) || (mval[i] <= m && m <= mval[i - 1])) {
          MCoordinate p0=(MCoordinate)this.getCoordinateN(i - 1);
          MCoordinate p1=(MCoordinate)this.getCoordinateN(i);
          double r=(m - mval[i - 1]) / (mval[i] - mval[i - 1]);
          double dx=r * (p1.x - p0.x);
          double dy=r * (p1.y - p0.y);
          double dz=r * (p1.z - p0.z);
          MCoordinate nc=new MCoordinate(p0.x + dx,p0.y + dy,p0.z + dz,m);
          return nc;
        }
      }
    }
  }
  return null;
}
