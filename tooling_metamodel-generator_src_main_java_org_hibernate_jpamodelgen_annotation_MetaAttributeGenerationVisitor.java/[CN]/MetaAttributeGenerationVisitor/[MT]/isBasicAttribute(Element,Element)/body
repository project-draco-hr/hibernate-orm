{
  if (TypeUtils.containsAnnotation(element,Constants.BASIC) || TypeUtils.containsAnnotation(element,Constants.ONE_TO_ONE) || TypeUtils.containsAnnotation(element,Constants.MANY_TO_ONE)) {
    return true;
  }
  if (TypeUtils.getAnnotationMirror(element,ORG_HIBERNATE_ANNOTATIONS_TYPE) != null) {
    return true;
  }
  BasicAttributeVisitor basicVisitor=new BasicAttributeVisitor(context);
  return returnedElement.asType().accept(basicVisitor,returnedElement);
}
