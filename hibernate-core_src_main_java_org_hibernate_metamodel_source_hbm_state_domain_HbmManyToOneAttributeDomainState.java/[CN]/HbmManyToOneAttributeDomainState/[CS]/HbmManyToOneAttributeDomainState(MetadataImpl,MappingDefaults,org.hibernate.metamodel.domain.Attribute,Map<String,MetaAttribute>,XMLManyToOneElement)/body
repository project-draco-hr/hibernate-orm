{
  super(metadata,defaults,attribute,manyToOne.getNode(),HbmHelper.extractMetas(manyToOne.getMeta(),entityMetaAttributes),HbmHelper.getPropertyAccessorName(manyToOne.getAccess(),manyToOne.isEmbedXml(),defaults.getDefaultAccess()),manyToOne.isOptimisticLock());
  fetchMode=getFetchMode(manyToOne);
  isUnwrapProxy=manyToOne.getLazy() != null && "no-proxy".equals(manyToOne.getLazy().value());
  isLazy=manyToOne.getLazy() == null || isUnwrapProxy || "proxy".equals(manyToOne.getLazy().value());
  cascade=MappingHelper.getStringValue(manyToOne.getCascade(),defaults.getDefaultCascade());
  isEmbedded=manyToOne.isEmbedXml();
  hibernateTypeDescriptor.setTypeName(getReferencedEntityName());
  referencedPropertyName=manyToOne.getPropertyRef();
  referencedEntityName=(manyToOne.getEntityName() == null ? HbmHelper.getClassName(manyToOne.getClazz(),getDefaults().getPackageName()) : manyToOne.getEntityName().intern());
  ignoreNotFound="ignore".equals(manyToOne.getNotFound().value());
  isInsertable=manyToOne.isInsert();
  isUpdateable=manyToOne.isUpdate();
}
