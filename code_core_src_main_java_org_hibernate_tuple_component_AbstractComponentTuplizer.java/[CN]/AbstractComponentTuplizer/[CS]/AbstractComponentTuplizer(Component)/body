{
  propertySpan=component.getPropertySpan();
  getters=new Getter[propertySpan];
  setters=new Setter[propertySpan];
  Iterator iter=component.getPropertyIterator();
  boolean foundCustomAccessor=false;
  int i=0;
  while (iter.hasNext()) {
    Property prop=(Property)iter.next();
    getters[i]=buildGetter(component,prop);
    setters[i]=buildSetter(component,prop);
    if (!prop.isBasicPropertyAccessor()) {
      foundCustomAccessor=true;
    }
    i++;
  }
  hasCustomAccessors=foundCustomAccessor;
  String[] getterNames=new String[propertySpan];
  String[] setterNames=new String[propertySpan];
  Class[] propTypes=new Class[propertySpan];
  for (int j=0; j < propertySpan; j++) {
    getterNames[j]=getters[j].getMethodName();
    setterNames[j]=setters[j].getMethodName();
    propTypes[j]=getters[j].getReturnType();
  }
  instantiator=buildInstantiator(component);
}
