{
  EntityManager em=getOrCreateEntityManager();
  em.getTransaction().begin();
  Animal animal=new Animal();
  animal.setId(100L);
  animal.setName("2");
  em.persist(animal);
  Human human=new Human();
  human.setId(200L);
  human.setName("2");
  em.persist(human);
  em.getTransaction().commit();
  CriteriaBuilder builder=em.getCriteriaBuilder();
  CriteriaQuery<String> criteria=builder.createQuery(String.class);
  Root<Animal> root=criteria.from(Animal.class);
  EntityType<Animal> Animal_=em.getMetamodel().entity(Animal.class);
  criteria.select(root.get(Animal_.getSingularAttribute("name",String.class)));
  criteria.where(builder.like(builder.treat(root,Human.class).get(org.hibernate.jpa.test.criteria.Human_.name),"2%"));
  List<String> animalList=em.createQuery(criteria).getResultList();
  Assert.assertEquals("treat(Animal as Human) was ignored",1,animalList.size());
  em.close();
}
