{
  final CollectionQuerySpace rightHandSide=(CollectionQuerySpace)join.getRightHandSide();
  JoinDefinedByMetadata collectionElementJoin=null;
  JoinDefinedByMetadata collectionIndexJoin=null;
  for (  Join collectionJoin : rightHandSide.getJoins()) {
    if (JoinDefinedByMetadata.class.isInstance(collectionJoin)) {
      final JoinDefinedByMetadata collectionJoinDefinedByMetadata=(JoinDefinedByMetadata)collectionJoin;
      if (CollectionPropertyNames.COLLECTION_ELEMENTS.equals(collectionJoinDefinedByMetadata.getJoinedPropertyName())) {
        if (collectionElementJoin != null) {
          throw new AssertionFailure(String.format("More than one element join defined for: %s",rightHandSide.getCollectionPersister().getRole()));
        }
        collectionElementJoin=collectionJoinDefinedByMetadata;
      }
      if (CollectionPropertyNames.COLLECTION_INDICES.equals(collectionJoinDefinedByMetadata.getJoinedPropertyName())) {
        if (collectionIndexJoin != null) {
          throw new AssertionFailure(String.format("More than one index join defined for: %s",rightHandSide.getCollectionPersister().getRole()));
        }
        collectionIndexJoin=collectionJoinDefinedByMetadata;
      }
    }
  }
  if (rightHandSide.getCollectionPersister().isOneToMany() || rightHandSide.getCollectionPersister().isManyToMany()) {
    if (collectionElementJoin == null) {
      throw new IllegalStateException(String.format("Could not locate collection element join within collection join [%s : %s]",rightHandSide.getUid(),rightHandSide.getCollectionPersister()));
    }
    aliasResolutionContext.generateCollectionReferenceAliases(rightHandSide.getUid(),rightHandSide.getCollectionPersister(),collectionElementJoin.getRightHandSide().getUid());
  }
 else {
    aliasResolutionContext.generateCollectionReferenceAliases(rightHandSide.getUid(),rightHandSide.getCollectionPersister(),null);
  }
  if (rightHandSide.getCollectionPersister().hasIndex() && rightHandSide.getCollectionPersister().getIndexType().isEntityType()) {
    if (collectionIndexJoin == null) {
      throw new IllegalStateException(String.format("Could not locate collection index join within collection join [%s : %s]",rightHandSide.getUid(),rightHandSide.getCollectionPersister()));
    }
    aliasResolutionContext.generateEntityReferenceAliases(collectionIndexJoin.getRightHandSide().getUid(),rightHandSide.getCollectionPersister().getIndexDefinition().toEntityDefinition().getEntityPersister());
  }
  addJoins(join,joinFragment,(Joinable)rightHandSide.getCollectionPersister());
}
