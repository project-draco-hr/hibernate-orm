{
  final CollectionReferenceAliases aliases=context.getAliasResolutionContext().resolveAliases(collectionReference);
  try {
    final PersistenceContext persistenceContext=context.getSession().getPersistenceContext();
    final Serializable collectionRowKey=(Serializable)collectionReference.getCollectionPersister().readKey(resultSet,aliases.getCollectionColumnAliases().getSuffixedKeyAliases(),context.getSession());
    if (collectionRowKey != null) {
      if (log.isDebugEnabled()) {
        log.debugf("Found row of collection: %s",MessageHelper.collectionInfoString(collectionReference.getCollectionPersister(),collectionRowKey,context.getSession().getFactory()));
      }
      Object collectionOwner=findCollectionOwner(collectionRowKey,resultSet,context);
      PersistentCollection rowCollection=persistenceContext.getLoadContexts().getCollectionLoadContext(resultSet).getLoadingCollection(collectionReference.getCollectionPersister(),collectionRowKey);
      if (rowCollection != null) {
        rowCollection.readFrom(resultSet,collectionReference.getCollectionPersister(),aliases.getCollectionColumnAliases(),collectionOwner);
      }
    }
 else {
      final Serializable optionalKey=findCollectionOwnerKey(context);
      if (optionalKey != null) {
        if (log.isDebugEnabled()) {
          log.debugf("Result set contains (possibly empty) collection: %s",MessageHelper.collectionInfoString(collectionReference.getCollectionPersister(),optionalKey,context.getSession().getFactory()));
        }
        persistenceContext.getLoadContexts().getCollectionLoadContext(resultSet).getLoadingCollection(collectionReference.getCollectionPersister(),optionalKey);
      }
    }
  }
 catch (  SQLException sqle) {
    throw context.getSession().getFactory().getSQLExceptionHelper().convert(sqle,"could not read next row of results");
  }
}
