{
  this.session=session;
  unresolvedInsertions=new UnresolvedEntityInsertActions();
  insertions=new ExecutableList<AbstractEntityInsertAction>(ExecutableList.INIT_QUEUE_LIST_SIZE,new InsertActionSorter());
  deletions=new ExecutableList<EntityDeleteAction>(ExecutableList.INIT_QUEUE_LIST_SIZE);
  updates=new ExecutableList<EntityUpdateAction>(ExecutableList.INIT_QUEUE_LIST_SIZE);
  collectionCreations=new ExecutableList<CollectionRecreateAction>(ExecutableList.INIT_QUEUE_LIST_SIZE);
  collectionRemovals=new ExecutableList<CollectionRemoveAction>(ExecutableList.INIT_QUEUE_LIST_SIZE);
  collectionUpdates=new ExecutableList<CollectionUpdateAction>(ExecutableList.INIT_QUEUE_LIST_SIZE);
  collectionQueuedOps=new ExecutableList<QueuedOperationCollectionAction>(ExecutableList.INIT_QUEUE_LIST_SIZE);
  List<ExecutableList<?>> tmp=new ArrayList<ExecutableList<?>>(7);
  tmp.add(insertions);
  tmp.add(updates);
  tmp.add(collectionQueuedOps);
  tmp.add(collectionRemovals);
  tmp.add(collectionUpdates);
  tmp.add(collectionCreations);
  tmp.add(deletions);
  executableLists=Collections.unmodifiableList(tmp);
  afterTransactionProcesses=new AfterTransactionCompletionProcessQueue(session);
  beforeTransactionProcesses=new BeforeTransactionCompletionProcessQueue(session);
}
