{
  Session session=openSession();
  Integer entityReferenceId=null;
  try {
    Transaction t=session.beginTransaction();
    ConcreteEntity entity=new ConcreteEntity();
    session.save(entity);
    LazyAbstractEntityReference reference=new LazyAbstractEntityReference(entity);
    session.save(reference);
    entityReferenceId=reference.getId();
    session.flush();
    t.commit();
  }
  finally {
    session.close();
  }
  session=openSession();
  try {
    session.beginTransaction();
    LazyAbstractEntityReference reference=session.get(LazyAbstractEntityReference.class,entityReferenceId);
    AbstractEntity abstractEntityProxy=reference.getEntity();
    assertTrue((abstractEntityProxy instanceof HibernateProxy) && !Hibernate.isInitialized(abstractEntityProxy));
    Hibernate.initialize(abstractEntityProxy);
    assertTrue(Hibernate.isInitialized(abstractEntityProxy));
    ConcreteEntity concreteEntityProxy=session.load(ConcreteEntity.class,abstractEntityProxy.getId());
    assertTrue(Hibernate.isInitialized(concreteEntityProxy));
    assertTrue(session.contains(concreteEntityProxy));
    session.delete(reference);
    session.delete(concreteEntityProxy);
    session.getTransaction().commit();
  }
  finally {
    session.close();
  }
}
