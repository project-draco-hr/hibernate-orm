{
  StandardServiceRegistryImpl serviceRegistry=(StandardServiceRegistryImpl)new StandardServiceRegistryBuilder().applySettings(ConnectionProviderBuilder.getConnectionProviderProperties()).build();
  JdbcServices jdbcServices=serviceRegistry.getService(JdbcServices.class);
  assertTrue(jdbcServices.getDialect() instanceof H2Dialect);
  ConnectionProviderJdbcConnectionAccess connectionAccess=assertTyping(ConnectionProviderJdbcConnectionAccess.class,jdbcServices.getBootstrapJdbcConnectionAccess());
  assertTrue(connectionAccess.getConnectionProvider().isUnwrappableAs(DriverManagerConnectionProviderImpl.class));
  Properties props=ConnectionProviderBuilder.getConnectionProviderProperties();
  props.setProperty(Environment.DIALECT,H2Dialect.class.getName());
  serviceRegistry=(StandardServiceRegistryImpl)new StandardServiceRegistryBuilder().applySettings(props).addService(ConnectionProvider.class,new UserSuppliedConnectionProviderImpl()).build();
  jdbcServices=serviceRegistry.getService(JdbcServices.class);
  assertTrue(jdbcServices.getDialect() instanceof H2Dialect);
  connectionAccess=assertTyping(ConnectionProviderJdbcConnectionAccess.class,jdbcServices.getBootstrapJdbcConnectionAccess());
  assertTrue(connectionAccess.getConnectionProvider().isUnwrappableAs(UserSuppliedConnectionProviderImpl.class));
  serviceRegistry.destroy();
}
