{
  try {
    String[] columnsNames=new String[columns.size()];
    for (int i=0; i < columns.size(); i++) {
      columnsNames[i]=((Column)columns.get(i)).getName();
    }
    final XProperty xProperty=(XProperty)typeParameters.get(DynamicParameterizedType.XPROPERTY);
    final Annotation[] annotations=xProperty == null ? null : xProperty.getAnnotations();
    typeParameters.put(DynamicParameterizedType.PARAMETER_TYPE,new ParameterTypeImpl(ReflectHelper.classForName(typeParameters.getProperty(DynamicParameterizedType.RETURNED_CLASS)),annotations,table.getCatalog(),table.getSchema(),table.getName(),Boolean.valueOf(typeParameters.getProperty(DynamicParameterizedType.IS_PRIMARY_KEY)),columnsNames));
  }
 catch (  ClassNotFoundException cnfe) {
    throw new MappingException("Could not create DynamicParameterizedType for type: " + typeName,cnfe);
  }
}
