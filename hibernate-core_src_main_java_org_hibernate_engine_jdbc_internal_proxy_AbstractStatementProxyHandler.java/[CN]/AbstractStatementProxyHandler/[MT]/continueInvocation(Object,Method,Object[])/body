{
  String methodName=method.getName();
  LOG.trace("Handling invocation of statement method [" + methodName + "]");
  if ("close".equals(methodName)) {
    explicitClose((Statement)proxy);
    return null;
  }
  if ("invalidate".equals(methodName)) {
    invalidateHandle();
    return null;
  }
  errorIfInvalid();
  if ("isWrapperFor".equals(methodName) && args.length == 1) {
    return method.invoke(getStatementWithoutChecks(),args);
  }
  if ("unwrap".equals(methodName) && args.length == 1) {
    return method.invoke(getStatementWithoutChecks(),args);
  }
  if ("getWrappedObject".equals(methodName)) {
    return getStatementWithoutChecks();
  }
  if ("getConnection".equals(methodName)) {
    return connectionProxy;
  }
  beginningInvocationHandling(method,args);
  try {
    Object result=method.invoke(statement,args);
    result=wrapIfNecessary(result,proxy,method);
    return result;
  }
 catch (  InvocationTargetException e) {
    Throwable realException=e.getTargetException();
    if (SQLException.class.isInstance(realException)) {
      throw connectionProxyHandler.getJdbcServices().getSqlExceptionHelper().convert((SQLException)realException,realException.getMessage());
    }
 else {
      throw realException;
    }
  }
}
