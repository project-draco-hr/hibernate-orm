{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Animal a=new Animal();
  a.setBodyWeight(12.4f);
  a.setDescription("an animal");
  s.persist(a);
  Object result;
  result=s.createQuery("select 1 + 1 from Animal as a").uniqueResult();
  assertTrue("int + int",Integer.class.isInstance(result));
  assertEquals(2,result);
  result=s.createQuery("select 1 + 1L from Animal a").uniqueResult();
  assertTrue("int + long",Long.class.isInstance(result));
  assertEquals(Long.valueOf(2),result);
  result=s.createQuery("select 1 + 1BI from Animal a").uniqueResult();
  assertTrue("int + BigInteger",BigInteger.class.isInstance(result));
  assertEquals(BigInteger.valueOf(2),result);
  result=s.createQuery("select 1 + 1F from Animal a").uniqueResult();
  assertTrue("int + float",Float.class.isInstance(result));
  assertEquals(Float.valueOf(2),result);
  result=s.createQuery("select 1 + 1D from Animal a").uniqueResult();
  assertTrue("int + double",Double.class.isInstance(result));
  assertEquals(Double.valueOf(2),result);
  result=s.createQuery("select 1 + 1BD from Animal a").uniqueResult();
  assertTrue("int + BigDecimal",BigDecimal.class.isInstance(result));
  assertEquals(BigDecimal.valueOf(2),result);
  result=s.createQuery("select 1F + 1D from Animal a").uniqueResult();
  assertTrue("float + double",Double.class.isInstance(result));
  assertEquals(Double.valueOf(2),result);
  result=s.createQuery("select 1F + 1BD from Animal a").uniqueResult();
  assertTrue("float + BigDecimal",Float.class.isInstance(result));
  assertEquals(Float.valueOf(2),result);
  result=s.createQuery("select 1 - 1 from Animal as a").uniqueResult();
  assertTrue("int - int",Integer.class.isInstance(result));
  assertEquals(0,result);
  result=s.createQuery("select 1 - 1L from Animal a").uniqueResult();
  assertTrue("int - long",Long.class.isInstance(result));
  assertEquals(Long.valueOf(0),result);
  result=s.createQuery("select 1 - 1BI from Animal a").uniqueResult();
  assertTrue("int - BigInteger",BigInteger.class.isInstance(result));
  assertEquals(BigInteger.valueOf(0),result);
  result=s.createQuery("select 1 - 1F from Animal a").uniqueResult();
  assertTrue("int - float",Float.class.isInstance(result));
  assertEquals(Float.valueOf(0),result);
  result=s.createQuery("select 1 - 1D from Animal a").uniqueResult();
  assertTrue("int - double",Double.class.isInstance(result));
  assertEquals(Double.valueOf(0),result);
  result=s.createQuery("select 1 - 1BD from Animal a").uniqueResult();
  assertTrue("int - BigDecimal",BigDecimal.class.isInstance(result));
  assertEquals(BigDecimal.valueOf(0),result);
  result=s.createQuery("select 1F - 1D from Animal a").uniqueResult();
  assertTrue("float - double",Double.class.isInstance(result));
  assertEquals(Double.valueOf(0),result);
  result=s.createQuery("select 1F - 1BD from Animal a").uniqueResult();
  assertTrue("float - BigDecimal",Float.class.isInstance(result));
  assertEquals(Float.valueOf(0),result);
  result=s.createQuery("select 1 * 1 from Animal as a").uniqueResult();
  assertTrue("int * int",Integer.class.isInstance(result));
  assertEquals(1,result);
  result=s.createQuery("select 1 * 1L from Animal a").uniqueResult();
  assertTrue("int * long",Long.class.isInstance(result));
  assertEquals(Long.valueOf(1),result);
  result=s.createQuery("select 1 * 1BI from Animal a").uniqueResult();
  assertTrue("int * BigInteger",BigInteger.class.isInstance(result));
  assertEquals(BigInteger.valueOf(1),result);
  result=s.createQuery("select 1 * 1F from Animal a").uniqueResult();
  assertTrue("int * float",Float.class.isInstance(result));
  assertEquals(Float.valueOf(1),result);
  result=s.createQuery("select 1 * 1D from Animal a").uniqueResult();
  assertTrue("int * double",Double.class.isInstance(result));
  assertEquals(Double.valueOf(1),result);
  result=s.createQuery("select 1 * 1BD from Animal a").uniqueResult();
  assertTrue("int * BigDecimal",BigDecimal.class.isInstance(result));
  assertEquals(BigDecimal.valueOf(1),result);
  s.delete(a);
  t.commit();
  s.close();
}
