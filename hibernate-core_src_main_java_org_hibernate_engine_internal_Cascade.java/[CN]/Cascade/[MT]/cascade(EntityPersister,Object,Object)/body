{
  if (persister.hasCascades() || action.requiresNoCascadeChecking()) {
    if (LOG.isTraceEnabled()) {
      LOG.tracev("Processing cascade {0} for: {1}",action,persister.getEntityName());
    }
    Type[] types=persister.getPropertyTypes();
    CascadeStyle[] cascadeStyles=persister.getPropertyCascadeStyles();
    boolean hasUninitializedLazyProperties=persister.hasUninitializedLazyProperties(parent);
    for (int i=0; i < types.length; i++) {
      final CascadeStyle style=cascadeStyles[i];
      final String propertyName=persister.getPropertyNames()[i];
      if (hasUninitializedLazyProperties && persister.getPropertyLaziness()[i] && !action.performOnLazyProperty()) {
        continue;
      }
      if (style.doCascade(action)) {
        cascadeProperty(parent,persister.getPropertyValue(parent,i),types[i],style,propertyName,anything,false);
      }
 else       if (action.requiresNoCascadeChecking()) {
        action.noCascade(eventSource,persister.getPropertyValue(parent,i),parent,persister,i);
      }
    }
    if (LOG.isTraceEnabled()) {
      LOG.tracev("Done processing cascade {0} for: {1}",action,persister.getEntityName());
    }
  }
}
