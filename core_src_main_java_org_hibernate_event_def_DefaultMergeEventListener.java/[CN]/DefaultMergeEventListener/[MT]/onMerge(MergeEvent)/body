{
  Map copyCache=IdentityMap.instantiate(10);
  onMerge(event,copyCache);
  for (Iterator it=copyCache.values().iterator(); it.hasNext(); ) {
    Object entity=it.next();
    if (entity instanceof HibernateProxy) {
      entity=((HibernateProxy)entity).getHibernateLazyInitializer().getImplementation();
    }
    EntityEntry entry=event.getSession().getPersistenceContext().getEntry(entity);
    if (entry == null) {
      throw new TransientObjectException("object references an unsaved transient instance - save the transient instance before merging: " + event.getSession().guessEntityName(entity));
    }
    if (entry.getStatus() != Status.MANAGED && entry.getStatus() != Status.READ_ONLY) {
      throw new AssertionFailure("Merged entity does not have status set to MANAGED or READ_ONLY; " + entry + " status="+ entry.getStatus());
    }
  }
}
