{
  this.attributeConverter=attributeConverter;
  this.autoApply=autoApply;
  final Class attributeConverterClass=attributeConverter.getClass();
  final ParameterizedType attributeConverterSignature=extractAttributeConverterParameterizedType(attributeConverterClass);
  if (attributeConverterSignature.getActualTypeArguments().length < 2) {
    throw new AnnotationException("AttributeConverter [" + attributeConverterClass.getName() + "] did not retain parameterized type information");
  }
  if (attributeConverterSignature.getActualTypeArguments().length > 2) {
    throw new AnnotationException("AttributeConverter [" + attributeConverterClass.getName() + "] specified more than 2 parameterized types");
  }
  entityAttributeType=(Class)attributeConverterSignature.getActualTypeArguments()[0];
  if (entityAttributeType == null) {
    throw new AnnotationException("Could not determine 'entity attribute' type from given AttributeConverter [" + attributeConverterClass.getName() + "]");
  }
  databaseColumnType=(Class)attributeConverterSignature.getActualTypeArguments()[1];
  if (databaseColumnType == null) {
    throw new AnnotationException("Could not determine 'database column' type from given AttributeConverter [" + attributeConverterClass.getName() + "]");
  }
}
