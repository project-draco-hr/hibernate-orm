{
  for (int count=0; count < 100; count++) {
    String name="Test" + count;
    File javaFile=new File(new File(basedir,pkgName),name + ".java");
    File hbmFile=new File(new File(basedir,pkgName),name + ".hbm.xml");
    javaFile.getParentFile().mkdirs();
    hbmFile.getParentFile().mkdirs();
    System.out.println("Generating " + javaFile.getAbsolutePath());
    PrintWriter javaWriter=null;
    PrintWriter hbmWriter=null;
    try {
      javaWriter=new PrintWriter(new FileWriter(javaFile));
      hbmWriter=new PrintWriter(new FileWriter(hbmFile));
      javaWriter.println("package " + pkgName + ";");
      hbmWriter.println("<?xml version=\"1.0\"?>\r\n" + "<!DOCTYPE hibernate-mapping PUBLIC \r\n" + "	\"-//Hibernate/Hibernate Mapping DTD 3.0//EN\"\r\n"+ "	\"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd\">\r\n");
      hbmWriter.println("<hibernate-mapping package=\"" + pkgName + "\">");
      javaWriter.println("public class " + name + " {");
      javaWriter.println(" static { System.out.println(\"" + name + " initialized!\"); }");
      hbmWriter.println("<class name=\"" + name + "\">");
      hbmWriter.println("<id type=\"long\"><generator class=\"assigned\"/></id>");
      for (int propCount=0; propCount < 100; propCount++) {
        String propName="Prop" + propCount;
        writeJavaProperty(javaWriter,propName);
        hbmWriter.println("<property name=\"" + propName + "\" type=\"string\"/>");
      }
      hbmWriter.println("</class>");
      javaWriter.println("}");
      hbmWriter.println("</hibernate-mapping>");
    }
  finally {
      if (javaWriter != null) {
        javaWriter.flush();
        javaWriter.close();
      }
      if (hbmWriter != null) {
        hbmWriter.flush();
        hbmWriter.close();
      }
    }
  }
}
