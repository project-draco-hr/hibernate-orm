{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  User u=new User("gavin","hb","secret");
  s.persist(u);
  t.commit();
  s.close();
  sessionFactory().getStatistics().clear();
  s=openSession();
  t=s.beginTransaction();
  u=(User)s.createCriteria(User.class).add(Restrictions.naturalId().set("name","gavin").set("org","hb")).setCacheable(true).uniqueResult();
  assertNotNull(u);
  t.commit();
  s.close();
  assertEquals(1,sessionFactory().getStatistics().getNaturalIdQueryExecutionCount());
  assertEquals(0,sessionFactory().getStatistics().getNaturalIdCacheHitCount());
  assertEquals(0,sessionFactory().getStatistics().getNaturalIdCachePutCount());
  s=openSession();
  t=s.beginTransaction();
  User v=new User("xam","hb","foobar");
  s.persist(v);
  t.commit();
  s.close();
  sessionFactory().getStatistics().clear();
  s=openSession();
  t=s.beginTransaction();
  u=(User)s.createCriteria(User.class).add(Restrictions.naturalId().set("name","gavin").set("org","hb")).setCacheable(true).uniqueResult();
  assertNotNull(u);
  assertEquals(1,sessionFactory().getStatistics().getNaturalIdQueryExecutionCount());
  assertEquals(0,sessionFactory().getStatistics().getNaturalIdCacheHitCount());
  u=(User)s.createCriteria(User.class).add(Restrictions.naturalId().set("name","gavin").set("org","hb")).setCacheable(true).uniqueResult();
  assertNotNull(u);
  assertEquals(1,sessionFactory().getStatistics().getNaturalIdQueryExecutionCount());
  assertEquals(0,sessionFactory().getStatistics().getNaturalIdCacheHitCount());
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  s.createQuery("delete User").executeUpdate();
  t.commit();
  s.close();
}
