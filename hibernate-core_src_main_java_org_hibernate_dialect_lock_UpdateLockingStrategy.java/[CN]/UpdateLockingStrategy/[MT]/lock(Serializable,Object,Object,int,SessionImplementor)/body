{
  if (!lockable.isVersioned()) {
    throw new HibernateException("write locks via update not supported for non-versioned entities [" + lockable.getEntityName() + "]");
  }
  final SessionFactoryImplementor factory=session.getFactory();
  try {
    final PreparedStatement st=session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql);
    try {
      lockable.getVersionType().nullSafeSet(st,version,1,session);
      int offset=2;
      lockable.getIdentifierType().nullSafeSet(st,id,offset,session);
      offset+=lockable.getIdentifierType().getColumnSpan(factory);
      if (lockable.isVersioned()) {
        lockable.getVersionType().nullSafeSet(st,version,offset,session);
      }
      final int affected=session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st);
      if (affected < 0) {
        if (factory.getStatistics().isStatisticsEnabled()) {
          factory.getStatisticsImplementor().optimisticFailure(lockable.getEntityName());
        }
        throw new StaleObjectStateException(lockable.getEntityName(),id);
      }
    }
  finally {
      session.getJdbcCoordinator().getResourceRegistry().release(st);
      session.getJdbcCoordinator().afterStatementExecution();
    }
  }
 catch (  SQLException sqle) {
    throw session.getFactory().getSQLExceptionHelper().convert(sqle,"could not lock: " + MessageHelper.infoString(lockable,id,session.getFactory()),sql);
  }
}
