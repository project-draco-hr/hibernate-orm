{
  String entityName=event.getAffectedOwnerEntityName();
  if (verCfg.getEntCfg().isVersioned(entityName)) {
    AuditSync verSync=verCfg.getSyncManager().get(event.getSession());
    String ownerEntityName=((AbstractCollectionPersister)collectionEntry.getLoadedPersister()).getOwnerEntityName();
    String referencingPropertyName=collectionEntry.getRole().substring(ownerEntityName.length() + 1);
    RelationDescription rd=verCfg.getEntCfg().get(entityName).getRelationDescription(referencingPropertyName);
    if (rd != null && rd.getMappedByPropertyName() != null) {
      generateFakeBidirecationalRelationWorkUnits(verSync,newColl,oldColl,entityName,referencingPropertyName,event,rd);
    }
 else {
      PersistentCollectionChangeWorkUnit workUnit=new PersistentCollectionChangeWorkUnit(event.getSession(),entityName,verCfg,newColl,collectionEntry,oldColl,event.getAffectedOwnerIdOrNull(),referencingPropertyName);
      verSync.addWorkUnit(workUnit);
      if (workUnit.containsWork()) {
        verSync.addWorkUnit(new CollectionChangeWorkUnit(event.getSession(),event.getAffectedOwnerEntityName(),verCfg,event.getAffectedOwnerIdOrNull(),event.getAffectedOwnerOrNull()));
        generateBidirectionalCollectionChangeWorkUnits(verSync,event,workUnit,rd);
      }
    }
  }
}
