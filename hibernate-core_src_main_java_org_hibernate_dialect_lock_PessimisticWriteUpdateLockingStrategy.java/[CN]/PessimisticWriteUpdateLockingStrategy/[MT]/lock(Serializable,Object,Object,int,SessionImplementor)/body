{
  if (!lockable.isVersioned()) {
    throw new HibernateException("write locks via update not supported for non-versioned entities [" + lockable.getEntityName() + "]");
  }
  SessionFactoryImplementor factory=session.getFactory();
  try {
    try {
      PreparedStatement st=session.getTransactionCoordinator().getJdbcCoordinator().getStatementPreparer().prepareStatement(sql);
      try {
        lockable.getVersionType().nullSafeSet(st,version,1,session);
        int offset=2;
        lockable.getIdentifierType().nullSafeSet(st,id,offset,session);
        offset+=lockable.getIdentifierType().getColumnSpan(factory);
        if (lockable.isVersioned()) {
          lockable.getVersionType().nullSafeSet(st,version,offset,session);
        }
        int affected=st.executeUpdate();
        if (affected < 0) {
          if (factory.getStatistics().isStatisticsEnabled()) {
            factory.getStatisticsImplementor().optimisticFailure(lockable.getEntityName());
          }
          throw new StaleObjectStateException(lockable.getEntityName(),id);
        }
      }
  finally {
        st.close();
      }
    }
 catch (    SQLException e) {
      throw session.getFactory().getSQLExceptionHelper().convert(e,"could not lock: " + MessageHelper.infoString(lockable,id,session.getFactory()),sql);
    }
  }
 catch (  JDBCException e) {
    throw new PessimisticEntityLockException(object,"could not obtain pessimistic lock",e);
  }
}
