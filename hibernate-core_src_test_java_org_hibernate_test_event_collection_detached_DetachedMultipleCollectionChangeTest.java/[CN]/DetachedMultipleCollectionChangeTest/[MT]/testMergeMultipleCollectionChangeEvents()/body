{
  MultipleCollectionListeners listeners=new MultipleCollectionListeners(sessionFactory());
  listeners.clear();
  int eventCount=0;
  List<MultipleCollectionRefEntity1> oldRefentities1=new ArrayList<MultipleCollectionRefEntity1>();
  List<MultipleCollectionRefEntity2> oldRefentities2=new ArrayList<MultipleCollectionRefEntity2>();
  Session s=openSession();
  s.beginTransaction();
  MultipleCollectionEntity mce=new MultipleCollectionEntity();
  mce.setText("MultipleCollectionEntity-1");
  s.save(mce);
  s.getTransaction().commit();
  checkListener(listeners,listeners.getPreCollectionRecreateListener(),mce,oldRefentities1,eventCount++);
  checkListener(listeners,listeners.getPostCollectionRecreateListener(),mce,oldRefentities1,eventCount++);
  checkListener(listeners,listeners.getPreCollectionRecreateListener(),mce,oldRefentities2,eventCount++);
  checkListener(listeners,listeners.getPostCollectionRecreateListener(),mce,oldRefentities2,eventCount++);
  checkEventCount(listeners,eventCount);
  s.close();
  Long mceId1=mce.getId();
  assertNotNull(mceId1);
  MultipleCollectionEntity prevMce=mce.deepCopy();
  oldRefentities1=prevMce.getRefEntities1();
  oldRefentities2=prevMce.getRefEntities2();
  listeners.clear();
  eventCount=0;
  s=openSession();
  s.beginTransaction();
  MultipleCollectionRefEntity1 re1_1=new MultipleCollectionRefEntity1();
  re1_1.setText("MultipleCollectionRefEntity1-1");
  re1_1.setMultipleCollectionEntity(mce);
  MultipleCollectionRefEntity1 re1_2=new MultipleCollectionRefEntity1();
  re1_2.setText("MultipleCollectionRefEntity1-2");
  re1_2.setMultipleCollectionEntity(mce);
  mce.addRefEntity1(re1_1);
  mce.addRefEntity1(re1_2);
  mce=(MultipleCollectionEntity)s.merge(mce);
  s.getTransaction().commit();
  s.close();
  checkListener(listeners,listeners.getInitializeCollectionListener(),mce,null,eventCount++);
  checkListener(listeners,listeners.getPreCollectionUpdateListener(),mce,oldRefentities1,eventCount++);
  checkListener(listeners,listeners.getPostCollectionUpdateListener(),mce,mce.getRefEntities1(),eventCount++);
  s=openSession();
  s.beginTransaction();
  MultipleCollectionRefEntity2 re2_1=new MultipleCollectionRefEntity2();
  re2_1.setText("MultipleCollectionRefEntity2-1");
  re2_1.setMultipleCollectionEntity(mce);
  MultipleCollectionRefEntity2 re2_2=new MultipleCollectionRefEntity2();
  re2_2.setText("MultipleCollectionRefEntity2-2");
  re2_2.setMultipleCollectionEntity(mce);
  mce.addRefEntity2(re2_1);
  mce.addRefEntity2(re2_2);
  mce=(MultipleCollectionEntity)s.merge(mce);
  s.getTransaction().commit();
  checkListener(listeners,listeners.getInitializeCollectionListener(),mce,null,eventCount++);
  checkListener(listeners,listeners.getPreCollectionUpdateListener(),mce,oldRefentities2,eventCount++);
  checkListener(listeners,listeners.getPostCollectionUpdateListener(),mce,mce.getRefEntities2(),eventCount++);
  checkEventCount(listeners,eventCount);
  s.close();
  for (  MultipleCollectionRefEntity1 refEnt1 : mce.getRefEntities1()) {
    assertNotNull(refEnt1.getId());
  }
  for (  MultipleCollectionRefEntity2 refEnt2 : mce.getRefEntities2()) {
    assertNotNull(refEnt2.getId());
  }
  prevMce=mce.deepCopy();
  oldRefentities1=prevMce.getRefEntities1();
  oldRefentities2=prevMce.getRefEntities2();
  listeners.clear();
  eventCount=0;
  s=openSession();
  s.beginTransaction();
  assertEquals(2,mce.getRefEntities1().size());
  assertEquals(2,mce.getRefEntities2().size());
  mce.removeRefEntity1(re1_2);
  MultipleCollectionRefEntity1 re1_3=new MultipleCollectionRefEntity1();
  re1_3.setText("MultipleCollectionRefEntity1-3");
  re1_3.setMultipleCollectionEntity(mce);
  mce.addRefEntity1(re1_3);
  mce=(MultipleCollectionEntity)s.merge(mce);
  s.getTransaction().commit();
  s.close();
  checkListener(listeners,listeners.getInitializeCollectionListener(),mce,null,eventCount++);
  checkListener(listeners,listeners.getPreCollectionUpdateListener(),mce,oldRefentities1,eventCount++);
  checkListener(listeners,listeners.getPostCollectionUpdateListener(),mce,mce.getRefEntities1(),eventCount++);
  s=openSession();
  s.beginTransaction();
  mce.removeRefEntity2(re2_2);
  MultipleCollectionRefEntity2 re2_3=new MultipleCollectionRefEntity2();
  re2_3.setText("MultipleCollectionRefEntity2-3");
  re2_3.setMultipleCollectionEntity(mce);
  mce.addRefEntity2(re2_3);
  mce=(MultipleCollectionEntity)s.merge(mce);
  s.getTransaction().commit();
  checkListener(listeners,listeners.getInitializeCollectionListener(),mce,null,eventCount++);
  checkListener(listeners,listeners.getPreCollectionUpdateListener(),mce,oldRefentities2,eventCount++);
  checkListener(listeners,listeners.getPostCollectionUpdateListener(),mce,mce.getRefEntities2(),eventCount++);
  checkEventCount(listeners,eventCount);
  s.close();
}
