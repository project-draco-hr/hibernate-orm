{
  final int span=getTableSpan();
  boolean isImpliedOptimisticLocking=!entityMetamodel.isVersioned() && entityMetamodel.getOptimisticLockMode() > Versioning.OPTIMISTIC_LOCK_VERSION;
  Object[] loadedState=null;
  if (isImpliedOptimisticLocking) {
    EntityKey key=new EntityKey(id,this,session.getEntityMode());
    Object entity=session.getPersistenceContext().getEntity(key);
    if (entity != null) {
      EntityEntry entry=session.getPersistenceContext().getEntry(entity);
      loadedState=entry.getLoadedState();
    }
  }
  final String[] deleteStrings;
  if (isImpliedOptimisticLocking && loadedState != null) {
    deleteStrings=generateSQLDeletStrings(loadedState);
  }
 else {
    deleteStrings=getSQLDeleteStrings();
  }
  for (int j=span - 1; j >= 0; j--) {
    delete(id,version,j,object,deleteStrings[j],session,loadedState);
  }
}
