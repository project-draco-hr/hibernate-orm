{
  coordinateSharedCacheCleanup(session);
  createTemporaryTableIfNecessary(persister,session);
  try {
    PreparedStatement ps=null;
    int resultCount=0;
    try {
      try {
        ps=session.getBatcher().prepareStatement(idInsertSelect);
        Iterator whereParams=getIdSelectParameterSpecifications().iterator();
        int sum=1;
        while (whereParams.hasNext()) {
          sum+=((ParameterSpecification)whereParams.next()).bind(ps,parameters,session,sum);
        }
        resultCount=ps.executeUpdate();
      }
  finally {
        if (ps != null) {
          session.getBatcher().closeStatement(ps);
        }
      }
    }
 catch (    SQLException e) {
      throw JDBCExceptionHelper.convert(getFactory().getSQLExceptionConverter(),e,"could not insert/select ids for bulk update",idInsertSelect);
    }
    for (int i=0; i < updates.length; i++) {
      if (updates[i] == null) {
        continue;
      }
      try {
        try {
          ps=session.getBatcher().prepareStatement(updates[i]);
          if (hqlParameters[i] != null) {
            int position=1;
            for (int x=0; x < hqlParameters[i].length; x++) {
              position+=hqlParameters[i][x].bind(ps,parameters,session,position);
            }
          }
          ps.executeUpdate();
        }
  finally {
          if (ps != null) {
            session.getBatcher().closeStatement(ps);
          }
        }
      }
 catch (      SQLException e) {
        throw JDBCExceptionHelper.convert(getFactory().getSQLExceptionConverter(),e,"error performing bulk update",updates[i]);
      }
    }
    return resultCount;
  }
  finally {
    dropTemporaryTableIfNecessary(persister,session);
  }
}
