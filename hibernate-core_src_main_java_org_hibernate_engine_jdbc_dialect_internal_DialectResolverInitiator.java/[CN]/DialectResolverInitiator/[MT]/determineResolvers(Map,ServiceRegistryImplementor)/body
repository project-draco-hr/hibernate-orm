{
  final List<DialectResolver> resolvers=new ArrayList<DialectResolver>();
  final String resolverImplNames=(String)configurationValues.get(AvailableSettings.DIALECT_RESOLVERS);
  if (StringHelper.isNotEmpty(resolverImplNames)) {
    final ClassLoaderService classLoaderService=registry.getService(ClassLoaderService.class);
    for (    String resolverImplName : StringHelper.split(", \n\r\f\t",resolverImplNames)) {
      try {
        resolvers.add((DialectResolver)classLoaderService.classForName(resolverImplName).newInstance());
      }
 catch (      HibernateException e) {
        throw e;
      }
catch (      Exception e) {
        throw new ServiceException("Unable to instantiate named dialect resolver [" + resolverImplName + "]",e);
      }
    }
  }
  resolvers.add(new StandardDialectResolver());
  return resolvers;
}
