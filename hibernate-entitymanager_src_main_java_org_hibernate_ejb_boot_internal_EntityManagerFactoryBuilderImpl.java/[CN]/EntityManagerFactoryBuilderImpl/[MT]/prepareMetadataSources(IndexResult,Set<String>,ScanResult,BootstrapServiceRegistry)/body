{
  MetadataSources metadataSources=new MetadataSources();
  for (  String className : collectedManagedClassNames) {
    final ClassInfo classInfo=jandexIndex.getClassByName(DotName.createSimple(className));
    if (classInfo == null) {
      metadataSources.annotatedMappingClassNames.add(className);
      continue;
    }
    AnnotationInstance converterAnnotation=JandexHelper.getSingleAnnotation(classInfo.annotations(),JPADotNames.CONVERTER);
    if (converterAnnotation != null) {
      metadataSources.converterDescriptors.add(new MetadataSources.ConverterDescriptor(className,JandexHelper.getValue(converterAnnotation,"autoApply",boolean.class)));
    }
 else {
      metadataSources.annotatedMappingClassNames.add(className);
    }
  }
  metadataSources.namedMappingFileInputStreams.addAll(scanResult.getHbmFiles());
  metadataSources.mappingFileResources.addAll(scanResult.getMappingFiles());
  metadataSources.packageNames.addAll(scanResult.getPackageNames());
  return metadataSources;
}
