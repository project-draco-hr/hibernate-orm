{
  final String name=attribute.getName();
  try {
    final boolean allowNonDeclaredFieldReference=attribute.getPersistentAttributeType() == Attribute.PersistentAttributeType.EMBEDDED || attribute.getDeclaringType().getPersistenceType() == Type.PersistenceType.EMBEDDABLE;
    final Field field=allowNonDeclaredFieldReference ? metamodelClass.getField(name) : metamodelClass.getDeclaredField(name);
    try {
      field.setAccessible(true);
      field.set(null,attribute);
    }
 catch (    IllegalAccessException e) {
      throw new AssertionFailure("Unable to inject static metamodel attribute : " + metamodelClass.getName() + '#'+ name,e);
    }
catch (    IllegalArgumentException e) {
      LOG.illegalArgumentOnStaticMetamodelFieldInjection(metamodelClass.getName(),name,attribute.getClass().getName(),field.getType().getName());
    }
  }
 catch (  NoSuchFieldException e) {
    LOG.unableToLocateStaticMetamodelField(metamodelClass.getName(),name);
  }
}
