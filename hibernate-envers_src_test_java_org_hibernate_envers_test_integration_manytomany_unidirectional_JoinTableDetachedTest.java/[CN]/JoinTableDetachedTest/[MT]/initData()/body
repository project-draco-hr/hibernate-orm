{
  EntityManager em=getEntityManager();
  em.getTransaction().begin();
  JoinTableEntity collectionEntity=new JoinTableEntity("some data");
  StrTestEntity element1=new StrTestEntity("str1");
  StrTestEntity element2=new StrTestEntity("str2");
  collectionEntity.getReferences().add(element1);
  collectionEntity.getReferences().add(element2);
  em.persist(element1);
  em.persist(element2);
  em.persist(collectionEntity);
  em.getTransaction().commit();
  collectionEntityId=collectionEntity.getId();
  element1Id=element1.getId();
  element2Id=element2.getId();
  em.close();
  em=getEntityManager();
  em.getTransaction().begin();
  collectionEntity=em.find(JoinTableEntity.class,collectionEntity.getId());
  collectionEntity.setData("some other data");
  collectionEntity=em.merge(collectionEntity);
  em.getTransaction().commit();
  em.close();
  em=getEntityManager();
  em.getTransaction().begin();
  collectionEntity=em.find(JoinTableEntity.class,collectionEntity.getId());
  collectionEntity.getReferences().remove(element1);
  collectionEntity=em.merge(collectionEntity);
  em.getTransaction().commit();
  em.close();
  em=getEntityManager();
  em.getTransaction().begin();
  collectionEntity=em.find(JoinTableEntity.class,collectionEntity.getId());
  collectionEntity.setReferences(new HashSet<StrTestEntity>());
  collectionEntity=em.merge(collectionEntity);
  em.getTransaction().commit();
  em.close();
  em=getEntityManager();
  em.getTransaction().begin();
  collectionEntity=em.find(JoinTableEntity.class,collectionEntity.getId());
  collectionEntity.getReferences().add(element1);
  collectionEntity=em.merge(collectionEntity);
  em.getTransaction().commit();
  em.close();
}
