{
  if (queryAnn == null)   return;
  if (BinderHelper.isEmptyAnnotationValue(queryAnn.name())) {
    throw new AnnotationException("A named query must have a name when used in class or package level");
  }
  String resultSetMapping=queryAnn.resultSetMapping();
  QueryHint[] hints=queryAnn.hints();
  String queryName=queryAnn.query();
  NamedSQLQueryDefinitionBuilder builder=new NamedSQLQueryDefinitionBuilder(queryAnn.name()).setQuery(queryName).setQuerySpaces(null).setCacheable(getBoolean(queryName,"org.hibernate.cacheable",hints)).setCacheRegion(getString(queryName,"org.hibernate.cacheRegion",hints)).setTimeout(getTimeout(queryName,hints)).setFetchSize(getInteger(queryName,"org.hibernate.fetchSize",hints)).setFlushMode(getFlushMode(queryName,hints)).setCacheMode(getCacheMode(queryName,hints)).setReadOnly(getBoolean(queryName,"org.hibernate.readOnly",hints)).setComment(getString(queryName,"org.hibernate.comment",hints)).setParameterTypes(null).setCallable(getBoolean(queryName,"org.hibernate.callable",hints));
  if (!BinderHelper.isEmptyAnnotationValue(resultSetMapping)) {
    builder.setResultSetRef(resultSetMapping).createNamedQueryDefinition();
  }
 else   if (!void.class.equals(queryAnn.resultClass())) {
    final NativeSQLQueryRootReturn entityQueryReturn=new NativeSQLQueryRootReturn("alias1",queryAnn.resultClass().getName(),new HashMap(),LockMode.READ);
    builder.setQueryReturns(new NativeSQLQueryReturn[]{entityQueryReturn});
  }
 else {
    builder.setQueryReturns(new NativeSQLQueryReturn[0]);
  }
  NamedSQLQueryDefinition query=builder.createNamedQueryDefinition();
  if (isDefault) {
    mappings.addDefaultSQLQuery(query.getName(),query);
  }
 else {
    mappings.addSQLQuery(query.getName(),query);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debugf("Binding named native query: %s => %s",queryAnn.name(),queryAnn.query());
  }
}
