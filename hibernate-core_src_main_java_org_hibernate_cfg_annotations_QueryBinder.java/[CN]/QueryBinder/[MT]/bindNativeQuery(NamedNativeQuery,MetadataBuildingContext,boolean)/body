{
  if (queryAnn == null)   return;
  if (BinderHelper.isEmptyAnnotationValue(queryAnn.name())) {
    throw new AnnotationException("A named query must have a name when used in class or package level");
  }
  String resultSetMapping=queryAnn.resultSetMapping();
  QueryHintDefinition hints=new QueryHintDefinition(queryAnn.hints());
  String queryName=queryAnn.query();
  NamedSQLQueryDefinitionBuilder builder=new NamedSQLQueryDefinitionBuilder(queryAnn.name()).setQuery(queryName).setQuerySpaces(null).setCacheable(hints.getBoolean(queryName,QueryHints.CACHEABLE)).setCacheRegion(hints.getString(queryName,QueryHints.CACHE_REGION)).setTimeout(hints.getTimeout(queryName)).setFetchSize(hints.getInteger(queryName,QueryHints.FETCH_SIZE)).setFlushMode(hints.getFlushMode(queryName)).setCacheMode(hints.getCacheMode(queryName)).setReadOnly(hints.getBoolean(queryName,QueryHints.READ_ONLY)).setComment(hints.getString(queryName,QueryHints.COMMENT)).setParameterTypes(null).setCallable(hints.getBoolean(queryName,QueryHints.CALLABLE));
  if (!BinderHelper.isEmptyAnnotationValue(resultSetMapping)) {
    builder.setResultSetRef(resultSetMapping).createNamedQueryDefinition();
  }
 else   if (!void.class.equals(queryAnn.resultClass())) {
    final NativeSQLQueryRootReturn entityQueryReturn=new NativeSQLQueryRootReturn("alias1",queryAnn.resultClass().getName(),new HashMap(),LockMode.READ);
    builder.setQueryReturns(new NativeSQLQueryReturn[]{entityQueryReturn});
  }
 else {
    builder.setQueryReturns(new NativeSQLQueryReturn[0]);
  }
  NamedSQLQueryDefinition query=builder.createNamedQueryDefinition();
  if (isDefault) {
    context.getMetadataCollector().addDefaultNamedNativeQuery(query);
  }
 else {
    context.getMetadataCollector().addNamedNativeQuery(query);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debugf("Binding named native query: %s => %s",queryAnn.name(),queryAnn.query());
  }
}
