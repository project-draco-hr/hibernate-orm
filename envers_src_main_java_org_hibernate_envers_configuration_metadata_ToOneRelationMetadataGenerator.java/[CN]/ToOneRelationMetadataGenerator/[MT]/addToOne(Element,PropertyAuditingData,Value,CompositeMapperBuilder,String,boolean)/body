{
  String referencedEntityName=((ToOne)value).getReferencedEntityName();
  IdMappingData idMapping=mainGenerator.getReferencedIdMappingData(entityName,referencedEntityName,propertyAuditingData,true);
  String lastPropertyPrefix=MappingTools.createToOneRelationPrefix(propertyAuditingData.getName());
  IdMapper relMapper=idMapping.getIdMapper().prefixMappedProperties(lastPropertyPrefix);
  mainGenerator.getEntitiesConfigurations().get(entityName).addToOneRelation(propertyAuditingData.getName(),referencedEntityName,relMapper);
  if (!insertable) {
    ClassAuditingData referencedAuditingData=mainGenerator.getClassesAuditingData().getClassAuditingData(referencedEntityName);
    for (    String referencedPropertyName : referencedAuditingData.getPropertyNames()) {
      String auditMappedBy=referencedAuditingData.getPropertyAuditingData(referencedPropertyName).getAuditMappedBy();
      if (propertyAuditingData.getName().equals(auditMappedBy)) {
        log.debug("Non-insertable property " + entityName + "."+ propertyAuditingData.getName()+ " will be made insertable because a matching @AuditMappedBy was found in the "+ referencedEntityName+ " entity.");
        insertable=true;
        break;
      }
    }
  }
  Element properties=(Element)idMapping.getXmlRelationMapping().clone();
  properties.addAttribute("name",propertyAuditingData.getName());
  MetadataTools.prefixNamesInPropertyElement(properties,lastPropertyPrefix,MetadataTools.getColumnNameIterator(value.getColumnIterator()),false,insertable);
  parent.add(properties);
  PropertyData propertyData=propertyAuditingData.getPropertyData();
  mapper.addComposite(propertyData,new ToOneIdMapper(relMapper,propertyData,referencedEntityName));
}
