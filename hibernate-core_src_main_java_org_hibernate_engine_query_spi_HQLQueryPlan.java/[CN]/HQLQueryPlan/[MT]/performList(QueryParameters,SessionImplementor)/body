{
  if (traceEnabled) {
    LOG.tracev("Find: {0}",getSourceQuery());
    queryParameters.traceParameters(session.getFactory());
  }
  final RowSelection rowSelection=queryParameters.getRowSelection();
  final boolean hasLimit=rowSelection != null && rowSelection.definesLimits();
  final boolean needsLimit=hasLimit && translators.length > 1;
  final QueryParameters queryParametersToUse;
  if (needsLimit) {
    LOG.needsLimit();
    final RowSelection selection=new RowSelection();
    selection.setFetchSize(queryParameters.getRowSelection().getFetchSize());
    selection.setTimeout(queryParameters.getRowSelection().getTimeout());
    queryParametersToUse=queryParameters.createCopyUsing(selection);
  }
 else {
    queryParametersToUse=queryParameters;
  }
  final int guessedResultSize=guessResultSize(rowSelection);
  final List combinedResults=new ArrayList(guessedResultSize);
  final IdentitySet distinction;
  if (needsLimit) {
    distinction=new IdentitySet(guessedResultSize);
  }
 else {
    distinction=null;
  }
  int includedCount=-1;
  translator_loop:   for (  QueryTranslator translator : translators) {
    final List tmp=translator.list(session,queryParametersToUse);
    if (needsLimit) {
      final int first=queryParameters.getRowSelection().getFirstRow() == null ? 0 : queryParameters.getRowSelection().getFirstRow();
      final int max=queryParameters.getRowSelection().getMaxRows() == null ? -1 : queryParameters.getRowSelection().getMaxRows();
      for (      final Object result : tmp) {
        if (!distinction.add(result)) {
          continue;
        }
        includedCount++;
        if (includedCount < first) {
          continue;
        }
        combinedResults.add(result);
        if (max >= 0 && includedCount > max) {
          break translator_loop;
        }
      }
    }
 else {
      combinedResults.addAll(tmp);
    }
  }
  return combinedResults;
}
