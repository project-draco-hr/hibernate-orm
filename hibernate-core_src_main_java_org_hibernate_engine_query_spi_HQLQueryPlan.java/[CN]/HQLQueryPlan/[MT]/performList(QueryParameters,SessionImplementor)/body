{
  if (LOG.isTraceEnabled()) {
    LOG.trace("Find: " + getSourceQuery());
    queryParameters.traceParameters(session.getFactory());
  }
  boolean hasLimit=queryParameters.getRowSelection() != null && queryParameters.getRowSelection().definesLimits();
  boolean needsLimit=hasLimit && translators.length > 1;
  QueryParameters queryParametersToUse;
  if (needsLimit) {
    LOG.needsLimit();
    RowSelection selection=new RowSelection();
    selection.setFetchSize(queryParameters.getRowSelection().getFetchSize());
    selection.setTimeout(queryParameters.getRowSelection().getTimeout());
    queryParametersToUse=queryParameters.createCopyUsing(selection);
  }
 else {
    queryParametersToUse=queryParameters;
  }
  List combinedResults=new ArrayList();
  IdentitySet distinction=new IdentitySet();
  int includedCount=-1;
  translator_loop:   for (int i=0; i < translators.length; i++) {
    List tmp=translators[i].list(session,queryParametersToUse);
    if (needsLimit) {
      int first=queryParameters.getRowSelection().getFirstRow() == null ? 0 : queryParameters.getRowSelection().getFirstRow().intValue();
      int max=queryParameters.getRowSelection().getMaxRows() == null ? -1 : queryParameters.getRowSelection().getMaxRows().intValue();
      final int size=tmp.size();
      for (int x=0; x < size; x++) {
        final Object result=tmp.get(x);
        if (!distinction.add(result)) {
          continue;
        }
        includedCount++;
        if (includedCount < first) {
          continue;
        }
        combinedResults.add(result);
        if (max >= 0 && includedCount > max) {
          break translator_loop;
        }
      }
    }
 else {
      combinedResults.addAll(tmp);
    }
  }
  return combinedResults;
}
