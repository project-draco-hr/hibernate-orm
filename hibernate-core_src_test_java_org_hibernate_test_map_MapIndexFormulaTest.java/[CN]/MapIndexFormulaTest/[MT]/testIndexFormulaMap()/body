{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  User gavin=new User("gavin","secret");
  User turin=new User("turin","tiger");
  Group g=new Group("developers");
  g.getUsers().put("gavin",gavin);
  g.getUsers().put("turin",turin);
  s.persist(g);
  gavin.getSession().put("foo",new SessionAttribute("foo","foo bar baz"));
  gavin.getSession().put("bar",new SessionAttribute("bar","foo bar baz 2"));
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  g=(Group)s.get(Group.class,"developers");
  assertEquals(g.getUsers().size(),2);
  g.getUsers().remove("turin");
  Map smap=((User)g.getUsers().get("gavin")).getSession();
  assertEquals(smap.size(),2);
  smap.remove("bar");
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  g=(Group)s.get(Group.class,"developers");
  assertEquals(g.getUsers().size(),1);
  smap=((User)g.getUsers().get("gavin")).getSession();
  assertEquals(smap.size(),1);
  gavin=(User)g.getUsers().put("gavin",turin);
  s.delete(gavin);
  assertEquals(s.createQuery("select count(*) from SessionAttribute").uniqueResult(),new Long(0));
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  g=(Group)s.get(Group.class,"developers");
  assertEquals(g.getUsers().size(),1);
  turin=(User)g.getUsers().get("turin");
  smap=turin.getSession();
  assertEquals(smap.size(),0);
  assertEquals(s.createQuery("select count(*) from User").uniqueResult(),Long.valueOf(1));
  s.delete(g);
  s.delete(turin);
  assertEquals(s.createQuery("select count(*) from User").uniqueResult(),Long.valueOf(0));
  t.commit();
  s.close();
}
