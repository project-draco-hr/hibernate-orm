{
  this.classInfo=info;
  this.parent=parent;
  this.isRoot=parent == null;
  this.hierarchyAccessType=hierarchyAccessType;
  this.inheritanceType=inheritanceType;
  this.clazz=serviceRegistry.getService(ClassLoaderService.class).classForName(info.toString());
  this.type=determineType();
  this.classAccessType=determineClassAccessType();
  this.hasOwnTable=definesItsOwnTable();
  this.primaryTableName=determinePrimaryTableName();
  List<MappedAttribute> properties=collectMappedProperties(resolvedType);
  Collections.sort(properties);
  Map<String,MappedAttribute> tmpMap=new LinkedHashMap<String,MappedAttribute>();
  for (  MappedAttribute property : properties) {
    tmpMap.put(property.getName(),property);
  }
  this.mappedAttributes=Collections.unmodifiableMap(tmpMap);
}
