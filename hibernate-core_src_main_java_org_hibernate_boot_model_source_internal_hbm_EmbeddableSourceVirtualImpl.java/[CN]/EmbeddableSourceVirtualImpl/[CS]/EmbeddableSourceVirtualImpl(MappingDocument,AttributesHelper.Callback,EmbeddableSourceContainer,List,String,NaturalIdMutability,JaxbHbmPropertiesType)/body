{
  super(mappingDocument);
  this.attributeRoleBase=container.getAttributeRoleBase();
  this.attributePathBase=container.getAttributePathBase();
  this.attributeSources=new ArrayList<AttributeSource>();
  AttributesHelper.processAttributes(mappingDocument,new AttributesHelper.Callback(){
    @Override public AttributeSourceContainer getAttributeSourceContainer(){
      return EmbeddableSourceVirtualImpl.this;
    }
    @Override public void addAttributeSource(    AttributeSource attributeSource){
      attributeSources.add(attributeSource);
    }
    @Override public void registerIndexColumn(    String constraintName,    String logicalTableName,    String columnName){
      containingCallback.registerIndexColumn(constraintName,logicalTableName,columnName);
    }
    @Override public void registerUniqueKeyColumn(    String constraintName,    String logicalTableName,    String columnName){
      containingCallback.registerUniqueKeyColumn(constraintName,logicalTableName,columnName);
    }
  }
,attributeJaxbMappings,logicalTableName,naturalIdMutability);
  this.isUnique=jaxbPropertiesGroup.isUnique();
  this.toolingHintContext=container.getToolingHintContextBaselineForEmbeddable();
}
