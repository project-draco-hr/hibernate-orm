{
  FastClass fastClass;
  BulkAccessor bulkAccessor;
  try {
    fastClass=FastClass.create(clazz);
    bulkAccessor=BulkAccessor.create(clazz,getterNames,setterNames,types);
    if (!clazz.isInterface() && !Modifier.isAbstract(clazz.getModifiers())) {
      if (fastClass == null) {
        bulkAccessor=null;
      }
 else {
        Object instance=fastClass.newInstance();
        bulkAccessor.setPropertyValues(instance,bulkAccessor.getPropertyValues(instance));
      }
    }
  }
 catch (  Throwable t) {
    fastClass=null;
    bulkAccessor=null;
    if (LOG.isDebugEnabled()) {
      int index=0;
      if (t instanceof BulkAccessorException)       index=((BulkAccessorException)t).getIndex();
      if (index >= 0)       LOG.reflectionOptimizerDisabledForBulkException(clazz.getName(),StringHelper.unqualify(t.getClass().getName()),t.getMessage(),setterNames[index]);
 else       LOG.reflectionOptimizerDisabled(clazz.getName(),StringHelper.unqualify(t.getClass().getName()),t.getMessage());
    }
  }
  if (fastClass != null && bulkAccessor != null) {
    return new ReflectionOptimizerImpl(new InstantiationOptimizerAdapter(fastClass),new AccessOptimizerAdapter(bulkAccessor,clazz));
  }
 else {
    return null;
  }
}
