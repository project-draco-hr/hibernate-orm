{
  final ClassLoader tccl=Thread.currentThread().getContextClassLoader();
  Thread.currentThread().setContextClassLoader(ClassLoaderHelper.getContextClassLoader());
  final Properties properties=cfg.getProperties();
  final ReflectionManager reflectionManager=cfg.getReflectionManager();
  this.globalCfg=new GlobalConfiguration(properties,classLoaderService);
  final RevisionInfoConfiguration revInfoCfg=new RevisionInfoConfiguration(globalCfg);
  final RevisionInfoConfigurationResult revInfoCfgResult=revInfoCfg.configure(cfg,reflectionManager);
  this.auditEntCfg=new AuditEntitiesConfiguration(properties,revInfoCfgResult.getRevisionInfoEntityName());
  this.auditProcessManager=new AuditProcessManager(revInfoCfgResult.getRevisionInfoGenerator());
  this.revisionInfoQueryCreator=revInfoCfgResult.getRevisionInfoQueryCreator();
  this.revisionInfoNumberReader=revInfoCfgResult.getRevisionInfoNumberReader();
  this.modifiedEntityNamesReader=revInfoCfgResult.getModifiedEntityNamesReader();
  this.classLoaderService=classLoaderService;
  this.auditStrategy=initializeAuditStrategy(revInfoCfgResult.getRevisionInfoClass(),revInfoCfgResult.getRevisionInfoTimestampData());
  this.entCfg=new EntitiesConfigurator().configure(cfg,reflectionManager,globalCfg,auditEntCfg,auditStrategy,classLoaderService,revInfoCfgResult.getRevisionInfoXmlMapping(),revInfoCfgResult.getRevisionInfoRelationMapping());
  Thread.currentThread().setContextClassLoader(tccl);
}
