{
  Throwable throwable=this.nestable;
  if (ExceptionUtils.isThrowableNested()) {
    if (throwable instanceof Nestable) {
      ((Nestable)throwable).printPartialStackTrace(out);
    }
 else {
      throwable.printStackTrace(out);
    }
    return;
  }
  List stacks=new ArrayList();
  while (throwable != null) {
    String[] st=getStackFrames(throwable);
    stacks.add(st);
    throwable=ExceptionUtils.getCause(throwable);
  }
  String separatorLine="Caused by: ";
  if (!topDown) {
    separatorLine="Rethrown as: ";
    Collections.reverse(stacks);
  }
  if (trimStackFrames)   trimStackFrames(stacks);
synchronized (out) {
    for (Iterator iter=stacks.iterator(); iter.hasNext(); ) {
      String[] st=(String[])iter.next();
      for (int i=0, len=st.length; i < len; i++) {
        out.println(st[i]);
      }
      if (iter.hasNext())       out.print(separatorLine);
    }
  }
}
