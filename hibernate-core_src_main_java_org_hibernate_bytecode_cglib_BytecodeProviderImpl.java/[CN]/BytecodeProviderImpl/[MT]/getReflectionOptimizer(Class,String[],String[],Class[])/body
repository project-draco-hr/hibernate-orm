{
  FastClass fastClass;
  BulkBean bulkBean;
  try {
    fastClass=FastClass.create(clazz);
    bulkBean=BulkBean.create(clazz,getterNames,setterNames,types);
    if (!clazz.isInterface() && !Modifier.isAbstract(clazz.getModifiers())) {
      if (fastClass == null) {
        bulkBean=null;
      }
 else {
        Object instance=fastClass.newInstance();
        bulkBean.setPropertyValues(instance,bulkBean.getPropertyValues(instance));
      }
    }
  }
 catch (  Throwable t) {
    fastClass=null;
    bulkBean=null;
    if (LOG.isDebugEnabled()) {
      int index=0;
      if (t instanceof BulkBeanException)       index=((BulkBeanException)t).getIndex();
      if (index >= 0)       LOG.debug("Reflection optimizer disabled for: " + clazz.getName() + " ["+ StringHelper.unqualify(t.getClass().getName())+ ": "+ t.getMessage()+ " (property "+ setterNames[index]+ ")");
 else       LOG.debug("Reflection optimizer disabled for: " + clazz.getName() + " ["+ StringHelper.unqualify(t.getClass().getName())+ ": "+ t.getMessage());
    }
  }
  if (fastClass != null && bulkBean != null)   return new ReflectionOptimizerImpl(new InstantiationOptimizerAdapter(fastClass),new AccessOptimizerAdapter(bulkBean,clazz));
  return null;
}
