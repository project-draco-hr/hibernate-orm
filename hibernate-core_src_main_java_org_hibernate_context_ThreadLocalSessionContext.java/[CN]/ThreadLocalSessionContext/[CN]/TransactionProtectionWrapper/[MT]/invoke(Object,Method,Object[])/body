{
  try {
    if ("close".equals(method.getName())) {
      unbind(realSession.getSessionFactory());
    }
 else     if ("toString".equals(method.getName()) || "equals".equals(method.getName()) || "hashCode".equals(method.getName())|| "getStatistics".equals(method.getName())|| "isOpen".equals(method.getName())|| "getListeners".equals(method.getName())) {
    }
 else     if (!realSession.isOpen()) {
    }
 else     if (!realSession.getTransaction().isActive()) {
      if ("beginTransaction".equals(method.getName()) || "getTransaction".equals(method.getName()) || "isTransactionInProgress".equals(method.getName())|| "setFlushMode".equals(method.getName())|| "getSessionFactory".equals(method.getName())) {
        LOG.allowingMethodInNonTransactedContext(method.getName());
      }
 else       if ("reconnect".equals(method.getName()) || "disconnect".equals(method.getName())) {
      }
 else {
        throw new HibernateException(method.getName() + " is not valid without active transaction");
      }
    }
    LOG.allowingProxiedMethodInSession(method.getName());
    return method.invoke(realSession,args);
  }
 catch (  InvocationTargetException e) {
    if (e.getTargetException() instanceof RuntimeException) {
      throw (RuntimeException)e.getTargetException();
    }
 else {
      throw e;
    }
  }
}
