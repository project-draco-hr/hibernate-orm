{
  final String sql=determineSql(timeout);
  final SessionFactoryImplementor factory=session.getFactory();
  try {
    final PreparedStatement st=session.getTransactionCoordinator().getJdbcCoordinator().getStatementPreparer().prepareStatement(sql);
    try {
      getLockable().getIdentifierType().nullSafeSet(st,id,1,session);
      if (getLockable().isVersioned()) {
        getLockable().getVersionType().nullSafeSet(st,version,getLockable().getIdentifierType().getColumnSpan(factory) + 1,session);
      }
      final ResultSet rs=session.getTransactionCoordinator().getJdbcCoordinator().getResultSetReturn().extract(st);
      try {
        if (!rs.next()) {
          if (factory.getStatistics().isStatisticsEnabled()) {
            factory.getStatisticsImplementor().optimisticFailure(getLockable().getEntityName());
          }
          throw new StaleObjectStateException(getLockable().getEntityName(),id);
        }
      }
  finally {
        session.getTransactionCoordinator().getJdbcCoordinator().release(rs,st);
      }
    }
  finally {
      session.getTransactionCoordinator().getJdbcCoordinator().release(st);
    }
  }
 catch (  SQLException sqle) {
    throw session.getFactory().getSQLExceptionHelper().convert(sqle,"could not lock: " + MessageHelper.infoString(getLockable(),id,session.getFactory()),sql);
  }
}
