{
  Item item1=new Item();
  item1.setName("item1 name");
  Category category=new Category();
  category.setName("category");
  item1.getColors().add("red");
  item1.setCategory(category);
  category.setExampleItem(item1);
  Session s=openSession();
  Transaction tx=s.beginTransaction();
  s.persist(item1);
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  Item item1_1=(Item)s.get(Item.class,item1.getId());
  tx.commit();
  s.close();
  item1.getColors().add("blue");
  item1.getCategory().setExampleItem(item1_1);
  s=openSession();
  tx=s.beginTransaction();
  Item item1Merged=(Item)s.merge(item1);
  assertEquals(2,item1Merged.getColors().size());
  assertTrue(item1Merged.getColors().contains("red"));
  assertTrue(item1Merged.getColors().contains("blue"));
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  item1=(Item)s.get(Item.class,item1.getId());
  assertEquals(2,item1.getColors().size());
  assertTrue(item1.getColors().contains("red"));
  assertTrue(item1.getColors().contains("blue"));
  Hibernate.initialize(item1.getCategory());
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  item1_1=(Item)s.get(Item.class,item1.getId());
  tx.commit();
  s.close();
  item1.getColors().clear();
  item1.getCategory().setExampleItem(item1_1);
  s=openSession();
  tx=s.beginTransaction();
  item1Merged=(Item)s.merge(item1);
  assertTrue(item1Merged.getColors().isEmpty());
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  item1=(Item)s.get(Item.class,item1.getId());
  assertTrue(item1.getColors().isEmpty());
  tx.commit();
  s.close();
  cleanup();
}
