{
  Item item1=new Item();
  item1.setName("item1 name");
  SubItem subItem1=new SubItem();
  subItem1.setName("subItem1 name");
  item1.getSubItemsBackref().add(subItem1);
  SubItem subItem2=new SubItem();
  subItem2.setName("subItem2 name");
  item1.getSubItemsBackref().add(subItem2);
  Session s=openSession();
  Transaction tx=s.beginTransaction();
  s.persist(item1);
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  Item item1_1=(Item)s.get(Item.class,item1.getId());
  tx.commit();
  s.close();
  assertFalse(Hibernate.isInitialized(item1_1.getSubItemsBackref()));
  Category category=new Category();
  category.setName("category");
  item1.setCategory(category);
  category.setExampleItem(item1_1);
  item1.getSubItemsBackref().remove(subItem1);
  s=openSession();
  tx=s.beginTransaction();
  Item item1Merged=(Item)s.merge(item1);
  assertEquals(1,item1Merged.getSubItemsBackref().size());
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  item1=(Item)s.get(Item.class,item1.getId());
  assertEquals(1,item1.getSubItemsBackref().size());
  subItem1=(SubItem)s.get(SubItem.class,subItem1.getId());
  assertNotNull(subItem1);
  tx.commit();
  cleanup();
}
