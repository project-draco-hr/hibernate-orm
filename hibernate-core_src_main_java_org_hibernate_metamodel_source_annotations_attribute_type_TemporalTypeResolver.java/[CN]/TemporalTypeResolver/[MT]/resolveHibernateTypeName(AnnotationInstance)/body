{
  if (isTemporalType(mappedAttribute.getAttributeType())) {
    if (temporalAnnotation == null) {
      throw new AnnotationException("Attribute " + mappedAttribute.getName() + " is a Temporal type, but no @Temporal annotation found.");
    }
    TemporalType temporalType=JandexHelper.getEnumValue(temporalAnnotation,"value",TemporalType.class);
    boolean isDate=Date.class.isAssignableFrom(mappedAttribute.getAttributeType());
    String type;
switch (temporalType) {
case DATE:
      type=isDate ? StandardBasicTypes.DATE.getName() : StandardBasicTypes.CALENDAR_DATE.getName();
    break;
case TIME:
  type=StandardBasicTypes.TIME.getName();
if (!isDate) {
  throw new NotYetImplementedException("Calendar cannot persist TIME only");
}
break;
case TIMESTAMP:
type=isDate ? StandardBasicTypes.TIMESTAMP.getName() : StandardBasicTypes.CALENDAR.getName();
break;
default :
throw new AssertionFailure("Unknown temporal type: " + temporalType);
}
return type;
}
 else {
if (temporalAnnotation != null) {
throw new AnnotationException("@Temporal should only be set on a java.util.Date or java.util.Calendar property: " + mappedAttribute.getName());
}
}
return null;
}
