{
  cls=getTargetClassIfProxied(cls);
  checkNotNull(cls,"Entity class");
  checkNotNull(entityName,"Entity name");
  checkNotNull(primaryKey,"Primary key");
  checkNotNull(revision,"Entity revision");
  checkPositive(revision,"Entity revision");
  checkSession();
  if (!verCfg.getEntCfg().isVersioned(entityName)) {
    throw new NotAuditedException(entityName,entityName + " is not versioned!");
  }
  if (firstLevelCache.contains(entityName,revision,primaryKey)) {
    return (T)firstLevelCache.get(entityName,revision,primaryKey);
  }
  Object result;
  try {
    result=createQuery().forEntitiesAtRevision(cls,entityName,revision).add(AuditEntity.id().eq(primaryKey)).getSingleResult();
  }
 catch (  NoResultException e) {
    result=null;
  }
catch (  NonUniqueResultException e) {
    throw new AuditException(e);
  }
  return (T)result;
}
