{
  if (theClass == Object.class || theClass == null) {
    return null;
  }
  Method method=setterMethod(theClass,propertyName);
  if (method != null) {
    method.setAccessible(true);
    return new BasicSetter(theClass,method,propertyName);
  }
 else {
    BasicSetter setter=getSetterOrNull(theClass.getSuperclass(),propertyName);
    if (setter == null) {
      Class[] interfaces=theClass.getInterfaces();
      for (int i=0; setter == null && i < interfaces.length; i++) {
        setter=getSetterOrNull(interfaces[i],propertyName);
      }
    }
    return setter;
  }
}
