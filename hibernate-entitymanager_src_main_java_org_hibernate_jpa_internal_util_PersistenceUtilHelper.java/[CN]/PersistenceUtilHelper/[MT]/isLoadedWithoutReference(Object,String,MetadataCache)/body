{
  boolean sureFromUs=false;
  if (entity instanceof HibernateProxy) {
    LazyInitializer li=((HibernateProxy)entity).getHibernateLazyInitializer();
    if (li.isUninitialized()) {
      return LoadState.NOT_LOADED;
    }
 else {
      entity=li.getImplementation();
    }
    sureFromUs=true;
  }
  if (FieldInterceptionHelper.isInstrumented(entity)) {
    FieldInterceptor interceptor=FieldInterceptionHelper.extractFieldInterceptor(entity);
    final boolean isInitialized=interceptor == null || interceptor.isInitialized(attributeName);
    LoadState state;
    if (isInitialized && interceptor != null) {
      try {
        final Class entityClass=entity.getClass();
        final Object attributeValue=cache.getClassMetadata(entityClass).getAttributeAccess(attributeName).extractValue(entity);
        state=isLoaded(attributeValue);
        if (state == LoadState.UNKNOWN) {
          state=LoadState.LOADED;
        }
      }
 catch (      AttributeExtractionException ignore) {
        state=LoadState.UNKNOWN;
      }
    }
 else     if (interceptor != null) {
      state=LoadState.NOT_LOADED;
    }
 else     if (sureFromUs) {
      try {
        final Class entityClass=entity.getClass();
        final Object attributeValue=cache.getClassMetadata(entityClass).getAttributeAccess(attributeName).extractValue(entity);
        state=isLoaded(attributeValue);
        if (state == LoadState.UNKNOWN) {
          state=LoadState.LOADED;
        }
      }
 catch (      AttributeExtractionException ignore) {
        state=LoadState.UNKNOWN;
      }
    }
 else {
      state=LoadState.UNKNOWN;
    }
    return state;
  }
 else {
    return LoadState.UNKNOWN;
  }
}
