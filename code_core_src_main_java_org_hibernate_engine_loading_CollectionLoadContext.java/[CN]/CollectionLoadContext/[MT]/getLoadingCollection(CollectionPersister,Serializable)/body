{
  final EntityMode em=loadContexts.getPersistenceContext().getSession().getEntityMode();
  final CollectionKey collectionKey=new CollectionKey(persister,key,em);
  if (log.isTraceEnabled()) {
    log.trace("starting attempt to find loading collection [" + MessageHelper.collectionInfoString(persister.getRole(),key) + "]");
  }
  final LoadingCollectionEntry loadingCollectionEntry=loadContexts.locateLoadingCollectionEntry(collectionKey);
  if (loadingCollectionEntry == null) {
    PersistentCollection collection=loadContexts.getPersistenceContext().getCollection(collectionKey);
    if (collection != null) {
      if (collection.wasInitialized()) {
        log.trace("collection already initialized; ignoring");
        return null;
      }
 else {
        log.trace("collection not yet initialized; initializing");
      }
    }
 else {
      Object owner=loadContexts.getPersistenceContext().getCollectionOwner(key,persister);
      final boolean newlySavedEntity=owner != null && loadContexts.getPersistenceContext().getEntry(owner).getStatus() != Status.LOADING && em != EntityMode.DOM4J;
      if (newlySavedEntity) {
        log.trace("owning entity already loaded; ignoring");
        return null;
      }
 else {
        if (log.isTraceEnabled()) {
          log.trace("instantiating new collection [key=" + key + ", rs="+ resultSet+ "]");
        }
        collection=persister.getCollectionType().instantiate(loadContexts.getPersistenceContext().getSession(),persister,key);
      }
    }
    collection.beforeInitialize(persister,-1);
    collection.beginRead();
    localLoadingCollectionKeys.add(collectionKey);
    loadContexts.registerLoadingCollectionXRef(collectionKey,new LoadingCollectionEntry(resultSet,persister,key,collection));
    return collection;
  }
 else {
    if (loadingCollectionEntry.getResultSet() == resultSet) {
      log.trace("found loading collection bound to current result set processing; reading row");
      return loadingCollectionEntry.getCollection();
    }
 else {
      log.trace("collection is already being initialized; ignoring row");
      return null;
    }
  }
}
