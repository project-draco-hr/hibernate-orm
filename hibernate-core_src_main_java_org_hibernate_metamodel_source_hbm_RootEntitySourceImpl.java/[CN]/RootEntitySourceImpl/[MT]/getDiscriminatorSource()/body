{
  final JaxbHibernateMapping.JaxbClass.JaxbDiscriminator discriminatorElement=entityElement().getDiscriminator();
  if (discriminatorElement == null) {
    return null;
  }
  return new DiscriminatorSource(){
    @Override public RelationalValueSource getDiscriminatorRelationalValueSource(){
      if (StringHelper.isNotEmpty(discriminatorElement.getColumnAttribute())) {
        return new ColumnAttributeSourceImpl(null,discriminatorElement.getColumnAttribute(),discriminatorElement.isInsert(),discriminatorElement.isInsert());
      }
 else       if (StringHelper.isNotEmpty(discriminatorElement.getFormulaAttribute())) {
        return new FormulaImpl(null,discriminatorElement.getFormulaAttribute());
      }
 else       if (discriminatorElement.getColumn() != null) {
        return new ColumnSourceImpl(null,discriminatorElement.getColumn(),discriminatorElement.isInsert(),discriminatorElement.isInsert());
      }
 else       if (StringHelper.isNotEmpty(discriminatorElement.getFormula())) {
        return new FormulaImpl(null,discriminatorElement.getFormula());
      }
 else {
        throw new MappingException("could not determine source of discriminator mapping",getOrigin());
      }
    }
    @Override public String getExplicitHibernateTypeName(){
      return discriminatorElement.getType();
    }
    @Override public boolean isForced(){
      return discriminatorElement.isForce();
    }
    @Override public boolean isInserted(){
      return discriminatorElement.isInsert();
    }
  }
;
}
