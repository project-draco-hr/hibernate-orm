{
  AuditEntitiesConfiguration verEntCfg=enversService.getAuditEntitiesConfiguration();
  if (!selectDeletedEntities) {
    qb.getRootParameters().addWhereWithParam(verEntCfg.getRevisionTypePropName(),"<>",RevisionType.DEL);
  }
  for (  AuditCriterion criterion : criterions) {
    criterion.addToQuery(enversService,versionsReader,entityName,QueryConstants.REFERENCED_ENTITY_ALIAS,qb,qb.getRootParameters());
  }
  if (!hasProjection() && !hasOrder) {
    String revisionPropertyPath=verEntCfg.getRevisionNumberPath();
    qb.addOrder(QueryConstants.REFERENCED_ENTITY_ALIAS,revisionPropertyPath,true);
  }
  if (!selectEntitiesOnly) {
    qb.addFrom(enversService.getAuditEntitiesConfiguration().getRevisionInfoEntityName(),"r",true);
    qb.getRootParameters().addWhere(enversService.getAuditEntitiesConfiguration().getRevisionNumberPath(),true,"=","r.id",false);
  }
  List<Object> queryResult=buildAndExecuteQuery();
  if (hasProjection()) {
    return queryResult;
  }
 else {
    List entities=new ArrayList();
    String revisionTypePropertyName=verEntCfg.getRevisionTypePropName();
    for (    Object resultRow : queryResult) {
      Map versionsEntity;
      Object revisionData;
      if (selectEntitiesOnly) {
        versionsEntity=(Map)resultRow;
        revisionData=null;
      }
 else {
        Object[] arrayResultRow=(Object[])resultRow;
        versionsEntity=(Map)arrayResultRow[0];
        revisionData=arrayResultRow[1];
      }
      Number revision=getRevisionNumber(versionsEntity);
      Object entity=entityInstantiator.createInstanceFromVersionsEntity(entityName,versionsEntity,revision);
      if (!selectEntitiesOnly) {
        entities.add(new Object[]{entity,revisionData,versionsEntity.get(revisionTypePropertyName)});
      }
 else {
        entities.add(entity);
      }
    }
    return entities;
  }
}
