{
  property.setName(propertySource.getName());
  if (StringHelper.isNotEmpty(propertySource.getXmlNodeName())) {
    DeprecationLogger.DEPRECATION_LOGGER.logDeprecationOfDomEntityModeSupport();
  }
  property.setPropertyAccessorName(StringHelper.isNotEmpty(propertySource.getPropertyAccessorName()) ? propertySource.getPropertyAccessorName() : mappingDocument.getMappingDefaults().getImplicitPropertyAccessorName());
  if (propertySource instanceof CascadeStyleSource) {
    final CascadeStyleSource cascadeStyleSource=(CascadeStyleSource)propertySource;
    property.setCascade(StringHelper.isNotEmpty(cascadeStyleSource.getCascadeStyleName()) ? cascadeStyleSource.getCascadeStyleName() : mappingDocument.getMappingDefaults().getImplicitCascadeStyleName());
  }
  property.setOptimisticLocked(propertySource.isIncludedInOptimisticLocking());
  if (propertySource.isSingular()) {
    final SingularAttributeSource singularAttributeSource=(SingularAttributeSource)propertySource;
    property.setInsertable(singularAttributeSource.isInsertable());
    property.setUpdateable(singularAttributeSource.isUpdatable());
    property.setLazy(singularAttributeSource.isBytecodeLazy());
    final GenerationTiming generationTiming=singularAttributeSource.getGenerationTiming();
    if (generationTiming == GenerationTiming.ALWAYS || generationTiming == GenerationTiming.INSERT) {
      property.setValueGenerationStrategy(new GeneratedValueGeneration(generationTiming));
      if (property.isInsertable()) {
        log.debugf("Property [%s] specified %s generation, setting insertable to false : %s",propertySource.getName(),generationTiming.name(),mappingDocument.getOrigin());
        property.setInsertable(false);
      }
      if (property.isUpdateable() && generationTiming == GenerationTiming.ALWAYS) {
        log.debugf("Property [%s] specified ALWAYS generation, setting updateable to false : %s",propertySource.getName(),mappingDocument.getOrigin());
        property.setUpdateable(false);
      }
    }
  }
  property.setMetaAttributes(propertySource.getToolingHintContext().getMetaAttributeMap());
  if (log.isDebugEnabled()) {
    final StringBuilder message=new StringBuilder().append("Mapped property: ").append(propertySource.getName()).append(" -> [");
    final Iterator itr=property.getValue().getColumnIterator();
    while (itr.hasNext()) {
      message.append(((Selectable)itr.next()).getText());
      if (itr.hasNext()) {
        message.append(", ");
      }
    }
    message.append("]");
    log.debug(message.toString());
  }
}
