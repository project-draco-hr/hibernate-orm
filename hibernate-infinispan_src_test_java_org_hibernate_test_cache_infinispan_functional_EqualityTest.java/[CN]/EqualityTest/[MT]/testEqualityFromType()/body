{
  Person john=new Person("John","Black",26);
  Person peter=new Person("Peter","White",32);
  withTx(tm,new Callable<Void>(){
    @Override public Void call() throws Exception {
      Session session=openSession();
      session.getTransaction().begin();
      session.persist(john);
      session.persist(peter);
      session.getTransaction().commit();
      session.close();
      return null;
    }
  }
);
  Statistics statistics=sessionFactory().getStatistics();
  statistics.clear();
  for (int i=0; i < 5; ++i) {
    withTx(tm,new Callable<Void>(){
      @Override public Void call() throws Exception {
        Session session=openSession();
        session.getTransaction().begin();
        Person p1=session.get(Person.class,john.name);
        assertPersonEquals(john,p1);
        Person p2=session.get(Person.class,peter.name);
        assertPersonEquals(peter,p2);
        Person p3=session.get(Person.class,new Name("Foo","Bar"));
        assertNull(p3);
        session.getTransaction().commit();
        session.close();
        return null;
      }
    }
);
  }
  assertTrue(statistics.getSecondLevelCacheHitCount() > 0);
  assertTrue(statistics.getSecondLevelCacheMissCount() > 0);
}
