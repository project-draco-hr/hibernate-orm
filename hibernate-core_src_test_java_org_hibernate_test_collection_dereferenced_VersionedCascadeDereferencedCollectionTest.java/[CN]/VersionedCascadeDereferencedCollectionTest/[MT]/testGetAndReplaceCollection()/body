{
  Session s=openSession();
  s.getTransaction().begin();
  VersionedCascadeOne one=new VersionedCascadeOne();
  assertNull(one.getManies());
  s.save(one);
  assertNull(one.getManies());
  EntityEntry eeOne=getEntityEntry(s,one);
  assertNull(eeOne.getLoadedValue("manies"));
  s.flush();
  assertNull(one.getManies());
  assertNull(eeOne.getLoadedValue("manies"));
  s.getTransaction().commit();
  s.close();
  final String role=VersionedCascadeOne.class.getName() + ".manies";
  s=openSession();
  s.getTransaction().begin();
  one=(VersionedCascadeOne)s.get(VersionedCascadeOne.class,one.getId());
  eeOne=getEntityEntry(s,one);
  assertNotNull(one.getManies());
  AbstractPersistentCollection maniesEEOneStateOrig=(AbstractPersistentCollection)eeOne.getLoadedValue("manies");
  assertSame(one.getManies(),maniesEEOneStateOrig);
  assertEquals(role,maniesEEOneStateOrig.getRole());
  assertEquals(one.getId(),maniesEEOneStateOrig.getKey());
  assertSame(s,maniesEEOneStateOrig.getSession());
  CollectionEntry ceManiesOrig=getCollectionEntry(s,maniesEEOneStateOrig);
  assertNotNull(ceManiesOrig);
  assertEquals(role,ceManiesOrig.getRole());
  assertSame(sessionFactory().getCollectionPersister(role),ceManiesOrig.getLoadedPersister());
  assertEquals(one.getId(),ceManiesOrig.getKey());
  one.setManies(new HashSet<Many>());
  s.flush();
  assertSame(eeOne,getEntityEntry(s,one));
  assertNull(getCollectionEntry(s,maniesEEOneStateOrig));
  assertNull(ceManiesOrig.getRole());
  assertNull(ceManiesOrig.getLoadedPersister());
  assertNull(ceManiesOrig.getKey());
  assertNull(maniesEEOneStateOrig.getKey());
  assertNull(maniesEEOneStateOrig.getRole());
  assertTrue(PersistentCollection.class.isInstance(one.getManies()));
  assertEquals(role,((PersistentCollection)one.getManies()).getRole());
  assertEquals(one.getId(),((PersistentCollection)one.getManies()).getKey());
  assertSame(s,((AbstractPersistentCollection)one.getManies()).getSession());
  assertSame(one.getManies(),eeOne.getLoadedValue("manies"));
  CollectionEntry ceManiesAfterReplace=getCollectionEntry(s,(PersistentCollection)one.getManies());
  assertNotNull(ceManiesAfterReplace);
  assertEquals(role,ceManiesAfterReplace.getRole());
  assertSame(sessionFactory().getCollectionPersister(role),ceManiesAfterReplace.getLoadedPersister());
  assertEquals(one.getId(),ceManiesAfterReplace.getKey());
  assertNull(maniesEEOneStateOrig.getSession());
  s.getTransaction().commit();
  s.close();
}
