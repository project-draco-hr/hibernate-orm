{
  if (isClosed) {
    LOG.trace("Already closed");
    return;
  }
  LOG.closing();
  isClosed=true;
  Iterator iter=entityPersisters.values().iterator();
  while (iter.hasNext()) {
    EntityPersister p=(EntityPersister)iter.next();
    if (p.hasCache()) {
      p.getCacheAccessStrategy().getRegion().destroy();
    }
  }
  iter=collectionPersisters.values().iterator();
  while (iter.hasNext()) {
    CollectionPersister p=(CollectionPersister)iter.next();
    if (p.hasCache()) {
      p.getCacheAccessStrategy().getRegion().destroy();
    }
  }
  if (settings.isQueryCacheEnabled()) {
    queryCache.destroy();
    iter=queryCaches.values().iterator();
    while (iter.hasNext()) {
      QueryCache cache=(QueryCache)iter.next();
      cache.destroy();
    }
    updateTimestampsCache.destroy();
  }
  settings.getRegionFactory().stop();
  if (settings.isAutoDropSchema()) {
    schemaExport.drop(false,true);
  }
  SessionFactoryObjectFactory.removeInstance(uuid,name,properties);
  observer.sessionFactoryClosed(this);
  eventListeners.destroyListeners();
}
