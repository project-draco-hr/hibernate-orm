{
  Properties properties=new Properties();
  properties.setProperty(SequenceGenerator.SEQUENCE,TEST_SEQUENCE);
  properties.setProperty(SequenceHiLoGenerator.MAX_LO,"3");
  properties.put(PersistentIdentifierGenerator.IDENTIFIER_NORMALIZER,new ObjectNameNormalizer(){
    @Override protected boolean isUseQuotedIdentifiersGlobally(){
      return false;
    }
    @Override protected NamingStrategy getNamingStrategy(){
      return cfg.getNamingStrategy();
    }
    @Override protected NamingStrategyDelegator getNamingStrategyDelegator(){
      return cfg.getNamingStrategyDelegator();
    }
  }
);
  Dialect dialect=TestingDatabaseInfo.DIALECT;
  generator=new SequenceHiLoGenerator();
  generator.configure(StandardBasicTypes.LONG,properties,dialect);
  cfg=TestingDatabaseInfo.buildBaseConfiguration().setProperty(Environment.HBM2DDL_AUTO,"create-drop");
  cfg.addAuxiliaryDatabaseObject(new SimpleAuxiliaryDatabaseObject(generator.sqlCreateStrings(dialect)[0],generator.sqlDropStrings(dialect)[0]));
  serviceRegistry=ServiceRegistryBuilder.buildServiceRegistry(cfg.getProperties());
  sessionFactory=(SessionFactoryImplementor)cfg.buildSessionFactory(serviceRegistry);
}
