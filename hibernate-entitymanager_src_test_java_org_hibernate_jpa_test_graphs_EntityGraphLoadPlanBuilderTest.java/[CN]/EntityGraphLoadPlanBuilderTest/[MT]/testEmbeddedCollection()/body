{
  EntityManager em=getOrCreateEntityManager();
  EntityGraph eg=em.createEntityGraph(ExpressCompany.class);
  eg.addAttributeNodes("shipAddresses");
  LoadPlan loadLoadPlan=buildLoadPlan(eg,Mode.LOAD,ExpressCompany.class);
  LoadPlanTreePrinter.INSTANCE.logTree(loadLoadPlan,new AliasResolutionContextImpl(sfi()));
  QuerySpace querySpace=loadLoadPlan.getQuerySpaces().getRootQuerySpaces().iterator().next();
  Iterator<Join> iterator=querySpace.getJoins().iterator();
  assertTrue(iterator.hasNext());
  Join collectionJoin=iterator.next();
  assertEquals(QuerySpace.Disposition.COLLECTION,collectionJoin.getRightHandSide().getDisposition());
  assertFalse(iterator.hasNext());
  iterator=collectionJoin.getRightHandSide().getJoins().iterator();
  assertTrue(iterator.hasNext());
  Join collectionElementJoin=iterator.next();
  assertFalse(iterator.hasNext());
  assertEquals(QuerySpace.Disposition.COMPOSITE,collectionElementJoin.getRightHandSide().getDisposition());
  iterator=collectionElementJoin.getRightHandSide().getJoins().iterator();
  assertTrue(iterator.hasNext());
  Join countryJoin=iterator.next();
  assertFalse(iterator.hasNext());
  assertEquals(QuerySpace.Disposition.ENTITY,countryJoin.getRightHandSide().getDisposition());
  LoadPlan fetchLoadPlan=buildLoadPlan(eg,Mode.FETCH,ExpressCompany.class);
  LoadPlanTreePrinter.INSTANCE.logTree(fetchLoadPlan,new AliasResolutionContextImpl(sfi()));
  querySpace=fetchLoadPlan.getQuerySpaces().getRootQuerySpaces().iterator().next();
  iterator=querySpace.getJoins().iterator();
  assertTrue(iterator.hasNext());
  collectionJoin=iterator.next();
  assertEquals(QuerySpace.Disposition.COLLECTION,collectionJoin.getRightHandSide().getDisposition());
  assertFalse(iterator.hasNext());
  iterator=collectionJoin.getRightHandSide().getJoins().iterator();
  assertTrue(iterator.hasNext());
  collectionElementJoin=iterator.next();
  assertFalse(iterator.hasNext());
  assertEquals(QuerySpace.Disposition.COMPOSITE,collectionElementJoin.getRightHandSide().getDisposition());
  iterator=collectionElementJoin.getRightHandSide().getJoins().iterator();
  assertFalse(iterator.hasNext());
  em.close();
}
