{
  ConnectionProvider cp=ConnectionProviderFactory.newConnectionProvider(Environment.getProperties());
  for (int n=2; n < 4000; n*=2) {
    Session s=openSession();
    s.delete("from Simple");
    s.flush();
    Simple[] simples=new Simple[n];
    Serializable[] ids=new Serializable[n];
    for (int i=0; i < n; i++) {
      simples[i]=new Simple();
      simples[i].init();
      simples[i].setCount(i);
      ids[i]=new Long(i);
      s.save(simples[i],ids[i]);
    }
    s.flush();
    s.connection().commit();
    s.close();
    s=openSession();
    hibernate(s,simples,ids,n,"h0");
    s.close();
    Connection c=cp.getConnection();
    directJDBC(c,simples,ids,n,"j0");
    cp.closeConnection(c);
    s=openSession();
    hibernate(s,simples,ids,n,"h0");
    s.close();
    c=cp.getConnection();
    directJDBC(c,simples,ids,n,"j0");
    cp.closeConnection(c);
    s=openSession();
    long time=System.currentTimeMillis();
    hibernate(s,simples,ids,n,"h1");
    long hiber=System.currentTimeMillis() - time;
    s.close();
    c=cp.getConnection();
    time=System.currentTimeMillis();
    directJDBC(c,simples,ids,n,"j1");
    long jdbc=System.currentTimeMillis() - time;
    cp.closeConnection(c);
    s=openSession();
    time=System.currentTimeMillis();
    hibernate(s,simples,ids,n,"h2");
    hiber+=System.currentTimeMillis() - time;
    s.close();
    c=cp.getConnection();
    time=System.currentTimeMillis();
    directJDBC(c,simples,ids,n,"j2");
    jdbc+=System.currentTimeMillis() - time;
    cp.closeConnection(c);
    s=openSession();
    time=System.currentTimeMillis();
    hibernate(s,simples,ids,n,"h2");
    hiber+=System.currentTimeMillis() - time;
    s.close();
    c=cp.getConnection();
    time=System.currentTimeMillis();
    directJDBC(c,simples,ids,n,"j2");
    jdbc+=System.currentTimeMillis() - time;
    cp.closeConnection(c);
    System.out.println("Objects: " + n + " - Hibernate: "+ hiber+ "ms / Direct JDBC: "+ jdbc+ "ms = Ratio: "+ ((float)hiber) / jdbc);
  }
  cp.close();
  System.gc();
}
