{
  createData();
  EntityManager em=getOrCreateEntityManager();
  em.getTransaction().begin();
  List results=em.createQuery("from Tranchenmodell").getResultList();
  assertEquals(1,results.size());
  results=em.createQuery("from Preisregelung").getResultList();
  assertEquals(1,results.size());
  Preisregelung preisregelung=(Preisregelung)results.get(0);
  Tranchenmodell tranchenmodell=preisregelung.getTranchenmodell();
  assertNotNull(tranchenmodell);
  assertNotNull(tranchenmodell.getX());
  assertEquals(2,tranchenmodell.getTranchen().size());
  assertNotNull(tranchenmodell.getTranchen().get(0).getY());
  Tranchenmodell tranchenmodellNew=new Tranchenmodell();
  X xNew=new X();
  tranchenmodellNew.setX(xNew);
  xNew.setTranchenmodell(tranchenmodellNew);
  Tranche trancheNew=new Tranche();
  tranchenmodellNew.getTranchen().add(trancheNew);
  trancheNew.setTranchenmodell(tranchenmodellNew);
  Y yNew=new Y();
  trancheNew.setY(yNew);
  yNew.setTranche(trancheNew);
  preisregelung.setTranchenmodell(tranchenmodellNew);
  tranchenmodellNew.setPreisregelung(preisregelung);
  em.getTransaction().commit();
  em.close();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  results=em.createQuery("from Tranche").getResultList();
  assertEquals(1,results.size());
  results=em.createQuery("from Tranchenmodell").getResultList();
  assertEquals(1,results.size());
  results=em.createQuery("from X").getResultList();
  assertEquals(1,results.size());
  results=em.createQuery("from Y").getResultList();
  assertEquals(1,results.size());
  results=em.createQuery("from Preisregelung").getResultList();
  assertEquals(1,results.size());
  preisregelung=(Preisregelung)results.get(0);
  tranchenmodell=preisregelung.getTranchenmodell();
  assertNotNull(tranchenmodell);
  assertEquals(tranchenmodellNew.getId(),tranchenmodell.getId());
  assertNotNull(tranchenmodell.getX());
  assertEquals(xNew.getId(),tranchenmodell.getX().getId());
  assertEquals(1,tranchenmodell.getTranchen().size());
  assertEquals(trancheNew.getId(),tranchenmodell.getTranchen().get(0).getId());
  assertEquals(yNew.getId(),tranchenmodell.getTranchen().get(0).getY().getId());
  tranchenmodellNew=new Tranchenmodell();
  preisregelung.setTranchenmodell(tranchenmodellNew);
  tranchenmodellNew.setPreisregelung(preisregelung);
  em.getTransaction().commit();
  em.close();
  em=getOrCreateEntityManager();
  em.getTransaction().begin();
  results=em.createQuery("from Tranchenmodell").getResultList();
  assertEquals(1,results.size());
  tranchenmodell=(Tranchenmodell)results.get(0);
  assertEquals(tranchenmodellNew.getId(),tranchenmodell.getId());
  results=em.createQuery("from Preisregelung").getResultList();
  assertEquals(1,results.size());
  preisregelung=(Preisregelung)results.get(0);
  assertEquals(tranchenmodell,preisregelung.getTranchenmodell());
  results=em.createQuery("from Tranche").getResultList();
  assertEquals(0,results.size());
  results=em.createQuery("from X").getResultList();
  assertEquals(0,results.size());
  results=em.createQuery("from Y").getResultList();
  assertEquals(0,results.size());
  em.getTransaction().commit();
  em.close();
  cleanupData();
}
