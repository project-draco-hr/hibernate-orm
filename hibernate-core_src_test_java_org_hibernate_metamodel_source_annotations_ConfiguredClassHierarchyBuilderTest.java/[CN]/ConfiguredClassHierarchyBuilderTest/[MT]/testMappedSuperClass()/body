{
@MappedSuperclass class MappedSuperClass {
    @Id @GeneratedValue private int id;
  }
class UnmappedSubClass extends MappedSuperClass {
    private String unmappedProperty;
  }
@Entity class MappedSubClass extends UnmappedSubClass {
    private String mappedProperty;
  }
  Index index=indexForClass(MappedSubClass.class,MappedSuperClass.class,UnmappedSubClass.class);
  ConfiguredClassHierarchyBuilder builder=new ConfiguredClassHierarchyBuilder();
  Set<ConfiguredClassHierarchy> hierarchies=builder.createEntityHierarchies(index);
  assertEquals("There should be only one hierarchy",1,hierarchies.size());
  Iterator<ConfiguredClass> iter=hierarchies.iterator().next().iterator();
  ClassInfo info=iter.next().getClassInfo();
  assertEquals("wrong class",DotName.createSimple(MappedSuperClass.class.getName()),info.name());
  info=iter.next().getClassInfo();
  assertEquals("wrong class",DotName.createSimple(UnmappedSubClass.class.getName()),info.name());
  info=iter.next().getClassInfo();
  assertEquals("wrong class",DotName.createSimple(MappedSubClass.class.getName()),info.name());
  assertFalse(iter.hasNext());
}
