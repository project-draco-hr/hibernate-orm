{
  Session s=openSession();
  Transaction tx=s.beginTransaction();
  Flight firstOne=new Flight();
  firstOne.setId(new Long(1));
  firstOne.setName("AF3202");
  firstOne.setDuration(new Long(1000000));
  firstOne.setDurationInSec(2000);
  s.save(firstOne);
  s.flush();
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  firstOne=new Flight();
  firstOne.setId(new Long(1));
  firstOne.setName(null);
  try {
    s.save(firstOne);
    tx.commit();
    fail("Name column should be not null");
  }
 catch (  HibernateException e) {
  }
 finally {
    s.close();
  }
  s=openSession();
  tx=s.beginTransaction();
  firstOne=new Flight();
  firstOne.setId(new Long(1));
  firstOne.setName("AF3202");
  firstOne.setTriggeredData("should not be insertable");
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  firstOne=(Flight)s.get(Flight.class,new Long(1));
  assertNotNull(firstOne);
  assertEquals(new Long(1),firstOne.getId());
  assertEquals("AF3202",firstOne.getName());
  assertFalse("should not be insertable".equals(firstOne.getTriggeredData()));
  firstOne.setName("BA1234");
  firstOne.setTriggeredData("should not be updatable");
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  firstOne=(Flight)s.get(Flight.class,new Long(1));
  assertNotNull(firstOne);
  assertEquals(new Long(1),firstOne.getId());
  assertEquals("AF3202",firstOne.getName());
  assertFalse("should not be updatable".equals(firstOne.getTriggeredData()));
  tx.commit();
  s.close();
}
