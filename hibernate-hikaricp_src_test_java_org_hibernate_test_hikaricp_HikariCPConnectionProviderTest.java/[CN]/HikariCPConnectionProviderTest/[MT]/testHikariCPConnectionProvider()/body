{
  JdbcServices jdbcServices=serviceRegistry().getService(JdbcServices.class);
  ConnectionProvider provider=jdbcServices.getConnectionProvider();
  assertTrue(provider instanceof HikariCPConnectionProvider);
  HikariCPConnectionProvider hikariCP=(HikariCPConnectionProvider)provider;
  final List<Connection> conns=new ArrayList<Connection>();
  for (int i=0; i < 2; i++) {
    Connection conn=hikariCP.getConnection();
    assertNotNull(conn);
    assertFalse(conn.isClosed());
    conns.add(conn);
  }
  try {
    hikariCP.getConnection();
    fail("SQLException expected -- no more connections should have been available in the pool.");
  }
 catch (  SQLException e) {
    assertTrue(e.getMessage().contains("Timeout"));
  }
  for (  Connection conn : conns) {
    hikariCP.closeConnection(conn);
    assertTrue(conn.isClosed());
  }
  releaseSessionFactory();
  try {
    hikariCP.getConnection();
    fail("Exception expected -- the pool should have been shutdown.");
  }
 catch (  Exception e) {
    assertTrue(e.getMessage().contains("shutdown"));
  }
}
