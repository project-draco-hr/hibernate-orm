{
  List<? extends AnnotationMirror> annotationMirrors=element.getAnnotationMirrors();
  for (  AnnotationMirror mirror : annotationMirrors) {
    if (element.getKind() == ElementKind.CLASS) {
      if (TypeUtils.isAnnotationMirrorOfType(mirror,Entity.class)) {
        AnnotationMetaEntity metaEntity=new AnnotationMetaEntity((TypeElement)element,context);
        context.getMetaEntitiesToProcess().put(metaEntity.getQualifiedName(),metaEntity);
      }
 else       if (TypeUtils.isAnnotationMirrorOfType(mirror,MappedSuperclass.class) || TypeUtils.isAnnotationMirrorOfType(mirror,Embeddable.class)) {
        AnnotationMetaEntity metaEntity=new AnnotationMetaEntity((TypeElement)element,context);
        context.getMetaSuperclassAndEmbeddableToProcess().put(metaEntity.getQualifiedName(),metaEntity);
      }
    }
  }
}
