{
  int result;
  int rows;
  do {
    SQL_STATEMENT_LOGGER.logStatement(selectQuery,FormatStyle.BASIC);
    PreparedStatement selectPS=conn.prepareStatement(selectQuery);
    try {
      selectPS.setString(1,segmentValue);
      ResultSet selectRS=selectPS.executeQuery();
      if (!selectRS.next()) {
        PreparedStatement insertPS=null;
        try {
          result=initialValue;
          SQL_STATEMENT_LOGGER.logStatement(insertQuery,FormatStyle.BASIC);
          insertPS=conn.prepareStatement(insertQuery);
          insertPS.setString(1,segmentValue);
          insertPS.setLong(2,result);
          insertPS.execute();
        }
  finally {
          if (insertPS != null) {
            insertPS.close();
          }
        }
      }
 else {
        result=selectRS.getInt(1);
      }
      selectRS.close();
    }
 catch (    SQLException sqle) {
      log.error("could not read or init a hi value",sqle);
      throw sqle;
    }
 finally {
      selectPS.close();
    }
    SQL_STATEMENT_LOGGER.logStatement(updateQuery,FormatStyle.BASIC);
    PreparedStatement updatePS=conn.prepareStatement(updateQuery);
    try {
      long newValue=optimizer.applyIncrementSizeToSourceValues() ? result + incrementSize : result + 1;
      updatePS.setLong(1,newValue);
      updatePS.setLong(2,result);
      updatePS.setString(3,segmentValue);
      rows=updatePS.executeUpdate();
    }
 catch (    SQLException sqle) {
      log.error("could not updateQuery hi value in: " + tableName,sqle);
      throw sqle;
    }
 finally {
      updatePS.close();
    }
  }
 while (rows == 0);
  accessCount++;
  return new Integer(result);
}
