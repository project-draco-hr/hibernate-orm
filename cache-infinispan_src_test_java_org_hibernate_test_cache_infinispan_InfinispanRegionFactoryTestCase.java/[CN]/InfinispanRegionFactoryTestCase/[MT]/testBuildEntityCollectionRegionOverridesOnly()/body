{
  CacheAdapter cache=null;
  Properties p=new Properties();
  p.setProperty("hibernate.cache.infinispan.entity.eviction.strategy","FIFO");
  p.setProperty("hibernate.cache.infinispan.entity.eviction.wake_up_interval","3000");
  p.setProperty("hibernate.cache.infinispan.entity.eviction.max_entries","30000");
  p.setProperty("hibernate.cache.infinispan.collection.eviction.strategy","LRU");
  p.setProperty("hibernate.cache.infinispan.collection.eviction.wake_up_interval","3500");
  p.setProperty("hibernate.cache.infinispan.collection.eviction.max_entries","35000");
  InfinispanRegionFactory factory=new InfinispanRegionFactory();
  factory.start(null,p);
  CacheManager manager=factory.getCacheManager();
  manager.getGlobalConfiguration().setTransportClass(null);
  try {
    EntityRegionImpl region=(EntityRegionImpl)factory.buildEntityRegion("com.acme.Address",p,null);
    assertNull(factory.getTypeOverrides().get("com.acme.Address"));
    cache=region.getCacheAdapter();
    Configuration cacheCfg=cache.getConfiguration();
    assertEquals(EvictionStrategy.FIFO,cacheCfg.getEvictionStrategy());
    assertEquals(3000,cacheCfg.getEvictionWakeUpInterval());
    assertEquals(30000,cacheCfg.getEvictionMaxEntries());
    assertEquals(100000,cacheCfg.getExpirationMaxIdle());
    CollectionRegionImpl collectionRegion=(CollectionRegionImpl)factory.buildCollectionRegion("com.acme.Person.addresses",p,null);
    assertNull(factory.getTypeOverrides().get("com.acme.Person.addresses"));
    cache=collectionRegion.getCacheAdapter();
    cacheCfg=cache.getConfiguration();
    assertEquals(EvictionStrategy.LRU,cacheCfg.getEvictionStrategy());
    assertEquals(3500,cacheCfg.getEvictionWakeUpInterval());
    assertEquals(35000,cacheCfg.getEvictionMaxEntries());
    assertEquals(100000,cacheCfg.getExpirationMaxIdle());
  }
  finally {
    factory.stop();
  }
}
