{
  Session s=getFactory().openSession();
  Transaction t=s.beginTransaction();
  Owner o=new Owner();
  Document doc=new Document();
  Folder fol=new Folder();
  o.setName("gavin");
  doc.setName("Hibernate in Action");
  doc.setSummary("blah");
  doc.updateText("blah blah");
  fol.setName("books");
  doc.setOwner(o);
  doc.setFolder(fol);
  fol.getDocuments().add(doc);
  Assert.assertTrue(Hibernate.isPropertyInitialized(doc,"summary"));
  s.persist(o);
  s.persist(fol);
  t.commit();
  s.close();
  s=getFactory().openSession();
  s.getTransaction().begin();
  doc.setName("Doc Name");
  doc.setSummary("u");
  s.update(doc);
  s.getTransaction().commit();
  s.close();
  s=getFactory().openSession();
  s.getTransaction().begin();
  doc.setName("Doc Name 1");
  doc.setSummary("v");
  Document docManaged=(Document)s.merge(doc);
  try {
    Assert.assertEquals("v",docManaged.getSummary());
    Assert.assertTrue(Hibernate.isPropertyInitialized(docManaged,"summary"));
    s.getTransaction().commit();
  }
 catch (  Exception e) {
    s.getTransaction().rollback();
    throw e;
  }
 finally {
    s.close();
  }
  s=getFactory().openSession();
  s.getTransaction().begin();
  docManaged=(Document)s.get(Document.class,doc.getId());
  Assert.assertFalse(Hibernate.isPropertyInitialized(docManaged,"summary"));
  doc.setSummary("w");
  Assert.assertSame(docManaged,s.merge(doc));
  Assert.assertEquals("w",docManaged.getSummary());
  s.getTransaction().commit();
  s.close();
  s=getFactory().openSession();
  s.getTransaction().begin();
  docManaged=(Document)s.get(Document.class,doc.getId());
  Assert.assertFalse(Hibernate.isPropertyInitialized(docManaged,"summary"));
  Assert.assertEquals("w",docManaged.getSummary());
  Assert.assertTrue(Hibernate.isPropertyInitialized(docManaged,"summary"));
  doc.setSummary("x");
  Assert.assertSame(docManaged,s.merge(doc));
  Assert.assertTrue(Hibernate.isPropertyInitialized(docManaged,"summary"));
  Assert.assertEquals("x",docManaged.getSummary());
  s.getTransaction().commit();
  s.close();
  s=getFactory().openSession();
  s.getTransaction().begin();
  Document docWithLazySummary=(Document)s.get(Document.class,doc.getId());
  Assert.assertFalse(Hibernate.isPropertyInitialized(docWithLazySummary,"summary"));
  s.getTransaction().commit();
  s.close();
  s=getFactory().openSession();
  s.getTransaction().begin();
  Assert.assertFalse(Hibernate.isPropertyInitialized(docWithLazySummary,"summary"));
  docWithLazySummary.setName("new name");
  docManaged=(Document)s.merge(docWithLazySummary);
  Assert.assertFalse(Hibernate.isPropertyInitialized(docManaged,"summary"));
  s.getTransaction().commit();
  s.close();
  s=getFactory().openSession();
  s.getTransaction().begin();
  docManaged=(Document)s.get(Document.class,doc.getId());
  Assert.assertFalse(Hibernate.isPropertyInitialized(docManaged,"summary"));
  Assert.assertEquals("x",docManaged.getSummary());
  Assert.assertTrue(Hibernate.isPropertyInitialized(docManaged,"summary"));
  Assert.assertFalse(Hibernate.isPropertyInitialized(docWithLazySummary,"summary"));
  docManaged=(Document)s.merge(docWithLazySummary);
  Assert.assertTrue(Hibernate.isPropertyInitialized(docManaged,"summary"));
  Assert.assertEquals("x",docManaged.getSummary());
  s.getTransaction().commit();
  s.close();
}
