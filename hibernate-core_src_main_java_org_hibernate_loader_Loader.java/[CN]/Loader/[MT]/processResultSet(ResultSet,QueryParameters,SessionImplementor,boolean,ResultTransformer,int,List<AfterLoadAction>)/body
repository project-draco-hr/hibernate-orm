{
  final int entitySpan=getEntityPersisters().length;
  final EntityKey optionalObjectKey=getOptionalObjectKey(queryParameters,session);
  final LockMode[] lockModesArray=getLockModes(queryParameters.getLockOptions());
  final boolean createSubselects=isSubselectLoadingEnabled();
  final List subselectResultKeys=createSubselects ? new ArrayList() : null;
  final ArrayList hydratedObjects=entitySpan == 0 ? null : new ArrayList(entitySpan * 10);
  final List results=new ArrayList();
  handleEmptyCollections(queryParameters.getCollectionKeys(),rs,session);
  EntityKey[] keys=new EntityKey[entitySpan];
  LOG.trace("Processing result set");
  int count;
  boolean isDebugEnabled=LOG.isDebugEnabled();
  for (count=0; count < maxRows && rs.next(); count++) {
    if (isDebugEnabled)     LOG.debugf("Result set row: %s",count);
    Object result=getRowFromResultSet(rs,session,queryParameters,lockModesArray,optionalObjectKey,hydratedObjects,keys,returnProxies,forcedResultTransformer);
    results.add(result);
    if (createSubselects) {
      subselectResultKeys.add(keys);
      keys=new EntityKey[entitySpan];
    }
  }
  if (LOG.isTraceEnabled())   LOG.tracev("Done processing result set ({0} rows)",count);
  initializeEntitiesAndCollections(hydratedObjects,rs,session,queryParameters.isReadOnly(session),afterLoadActions);
  if (createSubselects) {
    createSubselects(subselectResultKeys,queryParameters,session);
  }
  return results;
}
