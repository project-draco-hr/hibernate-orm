{
  boolean match=getDialect() instanceof DB2Dialect || getDialect() instanceof SybaseDialect || getDialect() instanceof HSQLDialect|| getDialect() instanceof Oracle8iDialect;
  if (!match) {
    return;
  }
  Session s=openSession();
  Transaction txn=s.beginTransaction();
  s.save(new Foo());
  s.save(new Foo());
  s.save(new Foo());
  s.save(new Bar());
  Query query=s.createQuery("select f, f.integer from Foo f");
  assertTrue(query.getReturnTypes().length == 2);
  ScrollableResults iter=query.scroll();
  assertTrue(iter.next());
  assertTrue(iter.scroll(1));
  FooProxy f2=(FooProxy)iter.get()[0];
  assertTrue(f2 != null);
  assertTrue(iter.scroll(-1));
  Object f1=iter.get(0);
  iter.next();
  assertTrue(f1 != null && iter.get(0) == f2);
  iter.getInteger(1);
  assertTrue(!iter.scroll(100));
  assertTrue(iter.first());
  assertTrue(iter.scroll(3));
  Object f4=iter.get(0);
  assertTrue(f4 != null);
  assertTrue(!iter.next());
  assertTrue(iter.first());
  assertTrue(iter.get(0) == f1);
  assertTrue(iter.last());
  assertTrue(iter.get(0) == f4);
  assertTrue(iter.previous());
  txn.commit();
  s.close();
  s=openSession();
  txn=s.beginTransaction();
  query=s.createQuery("select f, f.integer from Foo f");
  assertTrue(query.getReturnTypes().length == 2);
  iter=query.scroll();
  assertTrue(iter.next());
  assertTrue(iter.scroll(1));
  f2=(FooProxy)iter.get()[0];
  assertTrue(f2 != null);
  assertTrue(f2.getString() != null && f2.getComponent().getImportantDates().length > 0);
  assertTrue(iter.scroll(-1));
  f1=iter.get(0);
  iter.next();
  assertTrue(f1 != null && iter.get(0) == f2);
  iter.getInteger(1);
  assertTrue(!iter.scroll(100));
  assertTrue(iter.first());
  assertTrue(iter.scroll(3));
  f4=iter.get(0);
  assertTrue(f4 != null);
  assertTrue(!iter.next());
  assertTrue(iter.first());
  assertTrue(iter.get(0) == f1);
  assertTrue(iter.last());
  assertTrue(iter.get(0) == f4);
  assertTrue(iter.previous());
  assertTrue(s.delete("from Foo") == 4);
  s.flush();
  assertTrue(s.find("from java.lang.Object").size() == 0);
  txn.commit();
  s.close();
}
