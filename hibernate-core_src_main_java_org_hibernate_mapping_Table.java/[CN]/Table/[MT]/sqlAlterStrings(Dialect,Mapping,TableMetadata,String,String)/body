{
  StringBuilder root=new StringBuilder("alter table ").append(getQualifiedName(dialect,defaultCatalog,defaultSchema)).append(' ').append(dialect.getAddColumnString());
  Iterator iter=getColumnIterator();
  List results=new ArrayList();
  while (iter.hasNext()) {
    Column column=(Column)iter.next();
    ColumnMetadata columnInfo=tableInfo.getColumnMetadata(column.getName());
    if (columnInfo == null) {
      StringBuilder alter=new StringBuilder(root.toString()).append(' ').append(column.getQuotedName(dialect)).append(' ').append(column.getSqlType(dialect,p));
      String defaultValue=column.getDefaultValue();
      if (defaultValue != null) {
        alter.append(" default ").append(defaultValue);
      }
      if (column.isNullable()) {
        alter.append(dialect.getNullColumnString());
      }
 else {
        alter.append(" not null");
      }
      if (column.isUnique()) {
        dialect.getUniqueDelegate().generateUniqueKey(this,column);
        alter.append(dialect.getUniqueDelegate().applyUniqueToColumn());
      }
      if (column.hasCheckConstraint() && dialect.supportsColumnCheck()) {
        alter.append(" check(").append(column.getCheckConstraint()).append(")");
      }
      String columnComment=column.getComment();
      if (columnComment != null) {
        alter.append(dialect.getColumnComment(columnComment));
      }
      results.add(alter.toString());
    }
  }
  return results.iterator();
}
