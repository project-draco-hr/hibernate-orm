{
  if (CompositeQuerySpace.class.isInstance(join.getRightHandSide())) {
    handleCompositeJoin(join,joinFragment);
  }
 else   if (EntityQuerySpace.class.isInstance(join.getRightHandSide())) {
    if (join.getLeftHandSide().getDisposition() == QuerySpace.Disposition.COLLECTION && CollectionQuerySpace.class.cast(join.getLeftHandSide()).getCollectionPersister().isManyToMany()) {
      final CollectionQuerySpace leftHandSide=(CollectionQuerySpace)join.getLeftHandSide();
      final CollectionReferenceAliases aliases=aliasResolutionContext.resolveCollectionReferenceAliases(leftHandSide.getUid());
      renderManyToManyJoin(aliases,leftHandSide,join,joinFragment);
    }
 else     if (join.getLeftHandSide().getDisposition() != QuerySpace.Disposition.COLLECTION || !CollectionQuerySpace.class.cast(join.getLeftHandSide()).getCollectionPersister().isOneToMany()) {
      renderEntityJoin(join,joinFragment);
    }
  }
 else   if (CollectionQuerySpace.class.isInstance(join.getRightHandSide())) {
    renderCollectionJoin(join,joinFragment);
  }
}
