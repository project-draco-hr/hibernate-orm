{
  if (DEBUGGING) {
    LOG.debugf("Checking cached query results in region: %s",cacheRegion.getName());
  }
  final List cacheable=getCachedResults(key,session);
  logCachedResultDetails(key,spaces,returnTypes,cacheable);
  if (cacheable == null) {
    if (DEBUGGING) {
      LOG.debug("Query results were not found in cache");
    }
    return null;
  }
  final Long timestamp=(Long)cacheable.get(0);
  if (!isNaturalKeyLookup && !isUpToDate(spaces,timestamp,session)) {
    if (DEBUGGING) {
      LOG.debug("Cached query results were not up-to-date");
    }
    return null;
  }
  if (DEBUGGING) {
    LOG.debug("Returning cached query results");
  }
  final boolean singleResult=returnTypes.length == 1;
  for (int i=1; i < cacheable.size(); i++) {
    if (singleResult) {
      returnTypes[0].beforeAssemble((Serializable)cacheable.get(i),session);
    }
 else {
      TypeHelper.beforeAssemble((Serializable[])cacheable.get(i),returnTypes,session);
    }
  }
  final List result=new ArrayList(cacheable.size() - 1);
  for (int i=1; i < cacheable.size(); i++) {
    try {
      if (singleResult) {
        result.add(returnTypes[0].assemble((Serializable)cacheable.get(i),session,null));
      }
 else {
        result.add(TypeHelper.assemble((Serializable[])cacheable.get(i),returnTypes,session,null));
      }
      logCachedResultRowDetails(returnTypes,result.get(i - 1));
    }
 catch (    RuntimeException ex) {
      if (isNaturalKeyLookup) {
        if (UnresolvableObjectException.class.isInstance(ex) || EntityNotFoundException.class.isInstance(ex)) {
          if (DEBUGGING) {
            LOG.debug("Unable to reassemble cached natural-id query result");
          }
          cacheRegion.evict(key);
          return null;
        }
      }
      throw ex;
    }
  }
  return result;
}
