{
  this(sourceMappingDocument,embeddedAttributeMapping,new EmbeddableSourceImpl(sourceMappingDocument,new EmbeddableSourceContainer(){
    final AttributeRole role=container.getAttributeRoleBase().append(embeddedAttributeMapping.getName());
    final AttributePath path=container.getAttributePathBase().append(embeddedAttributeMapping.getName());
    final ToolingHintContext toolingHintContext=Helper.collectToolingHints(sourceMappingDocument.getToolingHintContext(),embeddedAttributeMapping);
    @Override public AttributeRole getAttributeRoleBase(){
      return role;
    }
    @Override public AttributePath getAttributePathBase(){
      return path;
    }
    @Override public ToolingHintContext getToolingHintContextBaselineForEmbeddable(){
      return toolingHintContext;
    }
    @Override public void registerIndexConstraintColumn(    String constraintName,    String logicalTableName,    String columnName){
    }
    @Override public void registerUniqueKeyConstraintColumn(    String constraintName,    String logicalTableName,    String columnName){
    }
  }
,embeddedAttributeMapping.getEmbeddableMapping(),nestedAttributeMappings,isDynamic,embeddedAttributeMapping.isUnique(),logicalTableName,naturalIdMutability),naturalIdMutability);
}
