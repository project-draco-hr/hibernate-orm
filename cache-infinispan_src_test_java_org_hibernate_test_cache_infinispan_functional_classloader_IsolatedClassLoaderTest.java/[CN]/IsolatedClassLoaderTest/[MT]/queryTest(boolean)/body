{
  CacheManager localManager=ClusterAwareRegionFactory.getCacheManager(AbstractDualNodeTestCase.LOCAL);
  localQueryCache=localManager.getCache("local-query");
  localQueryListener=new CacheAccessListener();
  localQueryCache.addListener(localQueryListener);
  TransactionManager localTM=DualNodeJtaTransactionManagerImpl.getInstance(AbstractDualNodeTestCase.LOCAL);
  CacheManager remoteManager=ClusterAwareRegionFactory.getCacheManager(AbstractDualNodeTestCase.REMOTE);
  remoteQueryCache=remoteManager.getCache("local-query");
  remoteQueryListener=new CacheAccessListener();
  remoteQueryCache.addListener(remoteQueryListener);
  TransactionManager remoteTM=DualNodeJtaTransactionManagerImpl.getInstance(AbstractDualNodeTestCase.REMOTE);
  SessionFactory localFactory=getEnvironment().getSessionFactory();
  SessionFactory remoteFactory=getSecondNodeEnvironment().getSessionFactory();
  ClassLoaderTestDAO dao0=new ClassLoaderTestDAO(localFactory,localTM);
  ClassLoaderTestDAO dao1=new ClassLoaderTestDAO(remoteFactory,remoteTM);
  setupEntities(dao0);
  assertEquals("63088 has correct # of accounts",6,dao0.getCountForBranch("63088",useNamedRegion));
  assertTrue("Query cache used ",localQueryListener.getSawRegionModification("???"));
  localQueryListener.getSawRegionAccess("???");
  log.info("First query on node0 done");
  sleep(SLEEP_TIME);
  assertFalse("Query cache remotely modified",remoteQueryListener.getSawRegionModification("???"));
  remoteQueryListener.getSawRegionAccess("???");
  assertTrue("Query cache remotely modified ",remoteQueryListener.getSawRegionModification("???"));
  remoteQueryListener.getSawRegionAccess("???");
  assertEquals("63088 has correct # of accounts",6,dao1.getCountForBranch("63088",useNamedRegion));
  assertTrue("Query cache modified ",remoteQueryListener.getSawRegionModification("???"));
  remoteQueryListener.getSawRegionAccess("???");
  log.info("First query on node 1 done");
  sleep(SLEEP_TIME);
  assertEquals("Correct branch for Smith","94536",dao0.getBranch(dao0.getSmith(),useNamedRegion));
  assertEquals("Correct high balances for Jones",40,dao0.getTotalBalance(dao0.getJones(),useNamedRegion));
  assertTrue("Query cache used ",localQueryListener.getSawRegionModification("???"));
  localQueryListener.getSawRegionAccess("???");
  log.info("Second set of queries on node0 done");
  sleep(SLEEP_TIME);
  assertTrue("Query cache remotely modified ",remoteQueryListener.getSawRegionModification("???"));
  remoteQueryListener.getSawRegionAccess("???");
  assertEquals("Correct branch for Smith","94536",dao1.getBranch(dao1.getSmith(),useNamedRegion));
  assertEquals("Correct high balances for Jones",40,dao1.getTotalBalance(dao1.getJones(),useNamedRegion));
  assertFalse("Query cache modified ",remoteQueryListener.getSawRegionModification("???"));
  assertTrue("Query cache accessed ",remoteQueryListener.getSawRegionAccess("???"));
  log.info("Second set of queries on node1 done");
  sleep(SLEEP_TIME);
  modifyEntities(dao1);
  sleep(SLEEP_TIME);
  assertEquals("63088 has correct # of accounts",7,dao0.getCountForBranch("63088",useNamedRegion));
  assertEquals("Correct branch for Smith","63088",dao0.getBranch(dao0.getSmith(),useNamedRegion));
  assertEquals("Correct high balances for Jones",50,dao0.getTotalBalance(dao0.getJones(),useNamedRegion));
  log.info("Third set of queries on node0 done");
}
