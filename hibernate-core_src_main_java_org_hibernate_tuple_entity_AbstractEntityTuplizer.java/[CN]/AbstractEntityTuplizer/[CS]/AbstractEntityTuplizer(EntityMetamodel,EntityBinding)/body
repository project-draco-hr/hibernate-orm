{
  this.entityMetamodel=entityMetamodel;
  if (!entityMetamodel.getIdentifierProperty().isVirtual()) {
    idGetter=buildPropertyGetter(mappingInfo.getHierarchyDetails().getEntityIdentifier().getValueBinding());
    idSetter=buildPropertySetter(mappingInfo.getHierarchyDetails().getEntityIdentifier().getValueBinding());
  }
 else {
    idGetter=null;
    idSetter=null;
  }
  propertySpan=entityMetamodel.getPropertySpan();
  getters=new Getter[propertySpan];
  setters=new Setter[propertySpan];
  boolean foundCustomAccessor=false;
  int i=0;
  for (  AttributeBinding property : mappingInfo.getAttributeBindingClosure()) {
    if (property == mappingInfo.getHierarchyDetails().getEntityIdentifier().getValueBinding()) {
      continue;
    }
    getters[i]=buildPropertyGetter(property);
    setters[i]=buildPropertySetter(property);
    if (!property.isBasicPropertyAccessor()) {
      foundCustomAccessor=true;
    }
    i++;
  }
  hasCustomAccessors=foundCustomAccessor;
  instantiator=buildInstantiator(mappingInfo);
  if (entityMetamodel.isLazy()) {
    proxyFactory=buildProxyFactory(mappingInfo,idGetter,idSetter);
    if (proxyFactory == null) {
      entityMetamodel.setLazy(false);
    }
  }
 else {
    proxyFactory=null;
  }
  Component mapper=null;
  if (mapper == null) {
    identifierMapperType=null;
    mappedIdentifierValueMarshaller=null;
  }
 else {
    identifierMapperType=(CompositeType)mapper.getType();
    mappedIdentifierValueMarshaller=buildMappedIdentifierValueMarshaller((ComponentType)entityMetamodel.getIdentifierProperty().getType(),(ComponentType)identifierMapperType);
  }
}
