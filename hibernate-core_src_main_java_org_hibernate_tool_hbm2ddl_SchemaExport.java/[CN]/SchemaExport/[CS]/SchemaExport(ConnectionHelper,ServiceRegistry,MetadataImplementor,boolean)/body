{
  this.connectionHelper=connectionHelper;
  this.sqlStatementLogger=serviceRegistry.getService(JdbcServices.class).getSqlStatementLogger();
  this.formatter=(sqlStatementLogger.isFormat() ? FormatStyle.DDL : FormatStyle.NONE).getFormatter();
  this.sqlExceptionHelper=serviceRegistry.getService(JdbcEnvironment.class).getSqlExceptionHelper();
  this.classLoaderService=serviceRegistry.getService(ClassLoaderService.class);
  this.importFiles=ConfigurationHelper.getString(AvailableSettings.HBM2DDL_IMPORT_FILES,serviceRegistry.getService(ConfigurationService.class).getSettings(),DEFAULT_IMPORT_FILE);
  SchemaManagementTool schemaManagementTool=serviceRegistry.getService(SchemaManagementTool.class);
  final List<String> commands=new ArrayList<String>();
  final org.hibernate.tool.schema.spi.Target target=new org.hibernate.tool.schema.spi.Target(){
    @Override public boolean acceptsImportScriptActions(){
      return false;
    }
    @Override public void prepare(){
      commands.clear();
    }
    @Override public void accept(    String command){
      commands.add(command);
    }
    @Override public void release(){
    }
  }
;
  final Map settings=serviceRegistry.getService(ConfigurationService.class).getSettings();
  schemaManagementTool.getSchemaDropper(settings).doDrop(metadata,createNamespaces,target);
  this.dropSQL=commands.toArray(new String[commands.size()]);
  schemaManagementTool.getSchemaCreator(settings).doCreation(metadata,createNamespaces,target);
  this.createSQL=commands.toArray(new String[commands.size()]);
}
