{
  CollectionPersister persister=getPersister(session);
  final PersistenceContext persistenceContext=session.getPersistenceContext();
  final EntityMode entityMode=persister.getOwnerEntityPersister().getEntityMode();
  PersistentCollection collection=persistenceContext.getLoadContexts().locateLoadingCollection(persister,key);
  if (collection == null) {
    collection=persistenceContext.useUnownedCollection(new CollectionKey(persister,key,entityMode));
    if (collection == null) {
      collection=instantiate(session,persister,key);
      collection.setOwner(owner);
      persistenceContext.addUninitializedCollection(persister,collection,key);
      if (initializeImmediately()) {
        session.initializeCollection(collection,false);
      }
 else       if (!persister.isLazy()) {
        persistenceContext.addNonLazyCollection(collection);
      }
      if (hasHolder()) {
        session.getPersistenceContext().addCollectionHolder(collection);
      }
    }
    if (LOG.isTraceEnabled()) {
      LOG.tracef("Created collection wrapper: %s",MessageHelper.collectionInfoString(persister,collection,key,session));
    }
  }
  collection.setOwner(owner);
  return collection.getValue();
}
