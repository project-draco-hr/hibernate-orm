{
  final String methodName=method.getName();
  try {
    if ("close".equals(methodName)) {
      unbind(realSession.getSessionFactory());
    }
 else     if ("toString".equals(methodName) || "equals".equals(methodName) || "hashCode".equals(methodName)|| "getStatistics".equals(methodName)|| "isOpen".equals(methodName)|| "getListeners".equals(methodName)) {
    }
 else     if (!realSession.isOpen()) {
    }
 else     if (!realSession.getTransaction().isActive()) {
      if ("beginTransaction".equals(methodName) || "getTransaction".equals(methodName) || "isTransactionInProgress".equals(methodName)|| "setFlushMode".equals(methodName)|| "getFactory".equals(methodName)|| "getSessionFactory".equals(methodName)|| "getTenantIdentifier".equals(methodName)) {
        LOG.tracev("Allowing method [{0}] in non-transacted context",methodName);
      }
 else       if ("reconnect".equals(methodName) || "disconnect".equals(methodName)) {
      }
 else {
        throw new HibernateException(methodName + " is not valid without active transaction");
      }
    }
    LOG.tracev("Allowing proxied method [{0}] to proceed to real session",methodName);
    return method.invoke(realSession,args);
  }
 catch (  InvocationTargetException e) {
    if (e.getTargetException() instanceof RuntimeException)     throw (RuntimeException)e.getTargetException();
    throw e;
  }
}
