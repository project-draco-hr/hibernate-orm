{
  Statistics stats=getSessions().getStatistics();
  stats.clear();
  Session s=openSession();
  Transaction tx=s.beginTransaction();
  fillDb(s);
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  final String continents="from Continent";
  int results=s.createQuery(continents).list().size();
  QueryStatistics continentStats=stats.getQueryStatistics(continents);
  assertNotNull("stats were null",continentStats);
  assertEquals("unexpected execution count",1,continentStats.getExecutionCount());
  assertEquals("unexpected row count",results,continentStats.getExecutionRowCount());
  long maxTime=continentStats.getExecutionMaxTime();
  assertEquals(maxTime,stats.getQueryExecutionMaxTime());
  Iterator itr=s.createQuery(continents).iterate();
  assertEquals("unexpected execution count",2,continentStats.getExecutionCount());
  assertEquals("unexpected row count",results,continentStats.getExecutionRowCount());
  Hibernate.close(itr);
  ScrollableResults scrollableResults=s.createQuery(continents).scroll();
  assertEquals("unexpected execution count",3,continentStats.getExecutionCount());
  assertEquals("unexpected row count",results,continentStats.getExecutionRowCount());
  scrollableResults.close();
  tx.commit();
  s.close();
  stats.clear();
  s=openSession();
  tx=s.beginTransaction();
  final String localities="from Locality";
  results=s.createQuery(localities).list().size();
  QueryStatistics localityStats=stats.getQueryStatistics(localities);
  assertNotNull("stats were null",localityStats);
  assertEquals("unexpected execution count",2,localityStats.getExecutionCount());
  assertEquals("unexpected row count",results,localityStats.getExecutionRowCount());
  maxTime=localityStats.getExecutionMaxTime();
  assertEquals(maxTime,stats.getQueryExecutionMaxTime());
  tx.commit();
  s.close();
  assertFalse(s.isOpen());
  stats.clear();
  s=openSession();
  tx=s.beginTransaction();
  final String sql="select id, name from Country";
  results=s.createSQLQuery(sql).addEntity(Country.class).list().size();
  QueryStatistics sqlStats=stats.getQueryStatistics(sql);
  assertNotNull("sql stats were null",sqlStats);
  assertEquals("unexpected execution count",1,sqlStats.getExecutionCount());
  assertEquals("unexpected row count",results,sqlStats.getExecutionRowCount());
  maxTime=sqlStats.getExecutionMaxTime();
  assertEquals(maxTime,stats.getQueryExecutionMaxTime());
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  cleanDb(s);
  tx.commit();
  s.close();
}
