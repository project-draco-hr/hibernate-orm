{
  checkForCorrelatedSubquery("dereferenceEntity");
  DotNode parentAsDotNode=null;
  String property=propertyName;
  final boolean joinIsNeeded;
  if (isDotNode(parent)) {
    parentAsDotNode=(DotNode)parent;
    property=parentAsDotNode.propertyName;
    joinIsNeeded=generateJoin && !isReferenceToPrimaryKey(parentAsDotNode.propertyName,entityType);
  }
 else   if (!getWalker().isSelectStatement()) {
    joinIsNeeded=getWalker().getCurrentStatementType() == SqlTokenTypes.SELECT && getWalker().isInFrom();
  }
 else   if (regressionStyleJoinSuppression) {
    joinIsNeeded=generateJoin && (!getWalker().isInSelect() || !getWalker().isShallowQuery());
  }
 else {
    joinIsNeeded=generateJoin || (getWalker().isInSelect() || getWalker().isInFrom());
  }
  if (joinIsNeeded) {
    dereferenceEntityJoin(classAlias,entityType,implicitJoin,parent);
  }
 else {
    dereferenceEntityIdentifier(property,parentAsDotNode);
  }
}
