{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Location mel=new Location("Melbourne, Australia");
  Location mars=new Location("Mars");
  s.save(mel);
  s.save(mars);
  Human gavin=new Human();
  gavin.setIdentity("gavin");
  gavin.setSex('M');
  gavin.setLocation(mel);
  mel.addBeing(gavin);
  Alien x23y4=new Alien();
  x23y4.setIdentity("x23y4$$hu%3");
  x23y4.setLocation(mars);
  x23y4.setSpecies("martian");
  mars.addBeing(x23y4);
  Hive hive=new Hive();
  hive.setLocation(mars);
  hive.getMembers().add(x23y4);
  x23y4.setHive(hive);
  s.persist(hive);
  Thing thing=new Thing();
  thing.setDescription("some thing");
  thing.setOwner(gavin);
  gavin.getThings().add(thing);
  s.save(thing);
  s.flush();
  s.clear();
  thing=(Thing)s.createQuery("from Thing t left join fetch t.owner").uniqueResult();
  assertTrue(Hibernate.isInitialized(thing.getOwner()));
  assertEquals(thing.getOwner().getIdentity(),"gavin");
  s.clear();
  thing=(Thing)s.createQuery("select t from Thing t left join t.owner where t.owner.identity='gavin'").uniqueResult();
  assertFalse(Hibernate.isInitialized(thing.getOwner()));
  assertEquals(thing.getOwner().getIdentity(),"gavin");
  s.clear();
  gavin=(Human)s.createQuery("from Human h left join fetch h.things").uniqueResult();
  assertTrue(Hibernate.isInitialized(gavin.getThings()));
  assertEquals(((Thing)gavin.getThings().get(0)).getDescription(),"some thing");
  s.clear();
  assertTrue(s.createQuery("from Being b left join fetch b.things").list().size() == 2);
  s.clear();
  gavin=(Human)s.createQuery("from Being b join fetch b.things").uniqueResult();
  assertTrue(Hibernate.isInitialized(gavin.getThings()));
  assertEquals(((Thing)gavin.getThings().get(0)).getDescription(),"some thing");
  s.clear();
  gavin=(Human)s.createQuery("select h from Human h join h.things t where t.description='some thing'").uniqueResult();
  assertFalse(Hibernate.isInitialized(gavin.getThings()));
  assertEquals(((Thing)gavin.getThings().get(0)).getDescription(),"some thing");
  s.clear();
  gavin=(Human)s.createQuery("select b from Being b join b.things t where t.description='some thing'").uniqueResult();
  assertFalse(Hibernate.isInitialized(gavin.getThings()));
  assertEquals(((Thing)gavin.getThings().get(0)).getDescription(),"some thing");
  s.clear();
  thing=(Thing)s.get(Thing.class,new Long(thing.getId()));
  assertFalse(Hibernate.isInitialized(thing.getOwner()));
  assertEquals(thing.getOwner().getIdentity(),"gavin");
  thing.getOwner().getThings().remove(thing);
  thing.setOwner(x23y4);
  x23y4.getThings().add(thing);
  s.flush();
  s.clear();
  thing=(Thing)s.get(Thing.class,new Long(thing.getId()));
  assertFalse(Hibernate.isInitialized(thing.getOwner()));
  assertEquals(thing.getOwner().getIdentity(),"x23y4$$hu%3");
  s.delete(thing);
  x23y4=(Alien)s.createCriteria(Alien.class).uniqueResult();
  s.delete(x23y4.getHive());
  s.delete(s.get(Location.class,new Long(mel.getId())));
  s.delete(s.get(Location.class,new Long(mars.getId())));
  assertTrue(s.createQuery("from Being").list().isEmpty());
  t.commit();
  s.close();
}
