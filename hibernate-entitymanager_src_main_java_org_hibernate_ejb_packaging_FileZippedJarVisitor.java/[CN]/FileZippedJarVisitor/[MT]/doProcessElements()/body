{
  JarFile jarFile;
  try {
    String filePart=jarUrl.getFile();
    if (filePart != null && filePart.indexOf(' ') != -1) {
      jarFile=new JarFile(jarUrl.getFile());
    }
 else {
      jarFile=new JarFile(jarUrl.toURI().getSchemeSpecificPart());
    }
  }
 catch (  IOException ze) {
    LOG.unableToFindFile(jarUrl,ze);
    return;
  }
catch (  URISyntaxException e) {
    LOG.malformedUrlWarning(jarUrl,e);
    return;
  }
  if (entry != null && entry.length() == 1)   entry=null;
  if (entry != null && entry.startsWith("/"))   entry=entry.substring(1);
  Enumeration<? extends ZipEntry> entries=jarFile.entries();
  while (entries.hasMoreElements()) {
    ZipEntry zipEntry=entries.nextElement();
    String name=zipEntry.getName();
    if (entry != null && !name.startsWith(entry))     continue;
    if (!zipEntry.isDirectory()) {
      if (name.equals(entry)) {
        InputStream is=null;
        try {
          is=new BufferedInputStream(jarFile.getInputStream(zipEntry));
          JarInputStream jis=new JarInputStream(is);
          ZipEntry subZipEntry=jis.getNextEntry();
          while (subZipEntry != null) {
            if (!subZipEntry.isDirectory()) {
              byte[] entryBytes=JarVisitorFactory.getBytesFromInputStream(jis);
              String subname=subZipEntry.getName();
              if (subname.startsWith("/"))               subname=subname.substring(1);
              addElement(subname,new ByteArrayInputStream(entryBytes),new ByteArrayInputStream(entryBytes));
            }
            subZipEntry=jis.getNextEntry();
          }
        }
  finally {
          if (is != null)           is.close();
        }
      }
 else {
        if (entry != null)         name=name.substring(entry.length());
        if (name.startsWith("/"))         name=name.substring(1);
        addElement(name,new BufferedInputStream(jarFile.getInputStream(zipEntry)),new BufferedInputStream(jarFile.getInputStream(zipEntry)));
      }
    }
  }
}
