{
  NaturalIdOnManyToOne singleManyToOne=new NaturalIdOnManyToOne();
  Citizen c1=new Citizen();
  c1.setFirstname("Emmanuel");
  c1.setLastname("Bernard");
  c1.setSsn("1234");
  State france=new State();
  france.setName("Ile de France");
  c1.setState(france);
  singleManyToOne.setCitizen(c1);
  Session s=openSession();
  Transaction tx=s.beginTransaction();
  s.persist(france);
  s.persist(c1);
  s.persist(singleManyToOne);
  tx.commit();
  s.close();
  s.getSessionFactory().getCache().evictNaturalIdRegions();
  s=openSession();
  tx=s.beginTransaction();
  Criteria criteria=s.createCriteria(NaturalIdOnManyToOne.class);
  criteria.add(Restrictions.naturalId().set("citizen",c1));
  criteria.setCacheable(true);
  Statistics stats=sessionFactory().getStatistics();
  stats.setStatisticsEnabled(true);
  stats.clear();
  assertEquals("NaturalId cache puts should be zero",0,stats.getNaturalIdCachePutCount());
  assertEquals("NaturalId cache hits should be zero",0,stats.getNaturalIdCacheHitCount());
  assertEquals("NaturalId Cache Puts",0,stats.getNaturalIdCachePutCount());
  assertEquals("NaturalId cache misses should be zero",0,stats.getNaturalIdCacheMissCount());
  List results=criteria.list();
  assertEquals(1,results.size());
  assertEquals("NaturalId Cache Hits",0,stats.getNaturalIdCacheHitCount());
  assertEquals("NaturalId Cache Misses",1,stats.getNaturalIdCacheMissCount());
  assertEquals("NaturalId Cache Puts",2,stats.getNaturalIdCachePutCount());
  assertEquals("NaturalId Cache Queries",1,stats.getNaturalIdQueryExecutionCount());
  criteria.list();
  assertEquals("NaturalId Cache Hits",0,stats.getNaturalIdCacheHitCount());
  assertEquals("NaturalId Cache Misses",1,stats.getNaturalIdCacheMissCount());
  assertEquals("NaturalId Cache Puts",2,stats.getNaturalIdCachePutCount());
  assertEquals("NaturalId Cache Queries",1,stats.getNaturalIdQueryExecutionCount());
  tx.rollback();
  s.close();
}
