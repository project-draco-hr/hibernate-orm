{
  boolean wasAutoCommit=false;
  try {
    Connection connection=session.getFactory().getConnectionProvider().getConnection();
    try {
      if (transacted) {
        if (connection.getAutoCommit()) {
          wasAutoCommit=true;
          connection.setAutoCommit(false);
        }
      }
      work.doWork(connection);
      if (transacted) {
        connection.commit();
      }
    }
 catch (    Exception e) {
      try {
        if (transacted && !connection.isClosed()) {
          connection.rollback();
        }
      }
 catch (      Exception ignore) {
        LOG.unableToRollbackConnection(ignore);
      }
      if (e instanceof HibernateException) {
        throw (HibernateException)e;
      }
 else       if (e instanceof SQLException) {
        throw sqlExceptionHelper().convert((SQLException)e,"error performing isolated work");
      }
 else {
        throw new HibernateException("error performing isolated work",e);
      }
    }
 finally {
      if (transacted && wasAutoCommit) {
        try {
          connection.setAutoCommit(true);
        }
 catch (        Exception ignore) {
          LOG.trace("Unable to reset connection back to auto-commit");
        }
      }
      try {
        session.getFactory().getConnectionProvider().closeConnection(connection);
      }
 catch (      Exception ignore) {
        LOG.unableToReleaseIsolatedConnection(ignore);
      }
    }
  }
 catch (  SQLException sqle) {
    throw sqlExceptionHelper().convert(sqle,"unable to obtain isolated JDBC connection");
  }
}
