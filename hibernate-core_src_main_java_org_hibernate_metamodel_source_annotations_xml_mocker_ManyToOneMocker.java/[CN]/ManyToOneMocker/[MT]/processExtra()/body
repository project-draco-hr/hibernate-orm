{
  List<AnnotationValue> annotationValueList=new ArrayList<AnnotationValue>();
  MockHelper.classValue("targetEntity",manyToOne.getTargetEntity(),annotationValueList,indexBuilder.getServiceRegistry());
  MockHelper.enumValue("fetch",FETCH_TYPE,manyToOne.getFetch(),annotationValueList);
  MockHelper.booleanValue("optional",manyToOne.isOptional(),annotationValueList);
  MockHelper.cascadeValue("cascade",manyToOne.getCascade(),isDefaultCascadePersist(),annotationValueList);
  create(MANY_TO_ONE,annotationValueList);
  parserJoinColumnList(manyToOne.getJoinColumn(),getTarget());
  parserJoinTable(manyToOne.getJoinTable(),getTarget());
  if (manyToOne.getMapsId() != null) {
    create(MAPS_ID,MockHelper.stringValueArray("value",manyToOne.getMapsId()));
  }
  if (manyToOne.isId() != null && manyToOne.isId()) {
    create(ID);
  }
}
