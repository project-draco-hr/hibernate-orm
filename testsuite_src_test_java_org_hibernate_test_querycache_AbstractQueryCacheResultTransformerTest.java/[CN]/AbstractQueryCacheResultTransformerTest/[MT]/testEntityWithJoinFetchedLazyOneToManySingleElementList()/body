{
  CriteriaExecutor criteriaExecutorUnaliased=new CriteriaExecutor(){
    protected Criteria getCriteria(    Session s){
      return s.createCriteria(Student.class,"s").setFetchMode("enrolments",FetchMode.JOIN).addOrder(Order.asc("s.studentNumber"));
    }
  }
;
  HqlExecutor hqlExecutorUnaliased=new HqlExecutor(){
    public Query getQuery(    Session s){
      return s.createQuery("from Student s left join fetch s.enrolments order by s.studentNumber");
    }
  }
;
  CriteriaExecutor criteriaExecutorAliased1=new CriteriaExecutor(){
    protected Criteria getCriteria(    Session s){
      return s.createCriteria(Student.class,"s").createAlias("s.enrolments","e",Criteria.LEFT_JOIN).setFetchMode("enrolments",FetchMode.JOIN).addOrder(Order.asc("s.studentNumber"));
    }
  }
;
  CriteriaExecutor criteriaExecutorAliased2=new CriteriaExecutor(){
    protected Criteria getCriteria(    Session s){
      return s.createCriteria(Student.class,"s").createAlias("s.enrolments","e",Criteria.LEFT_JOIN).setFetchMode("e",FetchMode.JOIN).addOrder(Order.asc("s.studentNumber"));
    }
  }
;
  CriteriaExecutor criteriaExecutorAliased3=new CriteriaExecutor(){
    protected Criteria getCriteria(    Session s){
      return s.createCriteria(Student.class,"s").createCriteria("s.enrolments","e",Criteria.LEFT_JOIN).setFetchMode("enrolments",FetchMode.JOIN).addOrder(Order.asc("s.studentNumber"));
    }
  }
;
  CriteriaExecutor criteriaExecutorAliased4=new CriteriaExecutor(){
    protected Criteria getCriteria(    Session s){
      return s.createCriteria(Student.class,"s").createCriteria("s.enrolments","e",Criteria.LEFT_JOIN).setFetchMode("e",FetchMode.JOIN).addOrder(Order.asc("s.studentNumber"));
    }
  }
;
  HqlExecutor hqlExecutorAliased=new HqlExecutor(){
    public Query getQuery(    Session s){
      return s.createQuery("from Student s left join fetch s.enrolments e order by s.studentNumber");
    }
  }
;
  ResultChecker checker=new ResultChecker(){
    public void check(    Object results){
      List resultList=(List)results;
      assertEquals(2,resultList.size());
      assertEquals(yogiExpected,resultList.get(0));
      assertEquals(shermanExpected,resultList.get(1));
      if (areDynamicNonLazyAssociationsChecked()) {
        assertTrue(Hibernate.isInitialized(((Student)resultList.get(0)).getEnrolments()));
        assertEquals(yogiExpected.getEnrolments(),((Student)resultList.get(0)).getEnrolments());
        assertTrue(Hibernate.isInitialized(((Student)resultList.get(1)).getEnrolments()));
        assertEquals(shermanExpected.getEnrolments(),((Student)resultList.get(1)).getEnrolments());
      }
    }
  }
;
  runTest(hqlExecutorUnaliased,criteriaExecutorUnaliased,checker,false);
  runTest(hqlExecutorAliased,criteriaExecutorAliased1,checker,false);
  runTest(null,criteriaExecutorAliased2,checker,false);
  runTest(null,criteriaExecutorAliased3,checker,false);
  runTest(null,criteriaExecutorAliased4,checker,false);
}
