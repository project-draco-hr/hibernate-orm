{
  if (!useTombstones) {
    super.runInvalidation(inTransaction);
    return;
  }
  boolean startedTx=false;
  if (!inTransaction && requiresTransaction) {
    try {
      tm.begin();
      startedTx=true;
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  try {
    AdvancedCache localCache=Caches.localCache(cache);
    CloseableIterator<CacheEntry> it=Caches.entrySet(localCache,Tombstone.EXCLUDE_TOMBSTONES).iterator();
    try {
      while (it.hasNext()) {
        CacheEntry entry=it.next();
        localCache.remove(entry.getKey(),entry.getValue());
      }
    }
  finally {
      it.close();
    }
  }
  finally {
    if (startedTx) {
      try {
        tm.commit();
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
}
