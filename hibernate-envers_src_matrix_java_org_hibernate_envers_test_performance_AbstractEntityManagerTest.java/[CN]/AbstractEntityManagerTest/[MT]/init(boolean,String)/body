{
  this.audited=audited;
  Properties configurationProperties=new Properties();
  configurationProperties.putAll(Environment.getProperties());
  if (!audited) {
    configurationProperties.setProperty(EnversIntegrator.AUTO_REGISTER,"false");
  }
  if (createSchema()) {
    configurationProperties.setProperty(Environment.HBM2DDL_AUTO,"create-drop");
    configurationProperties.setProperty(Environment.USE_NEW_ID_GENERATOR_MAPPINGS,"true");
    configurationProperties.setProperty("org.hibernate.envers.use_revision_entity_with_native_id","false");
  }
  if (auditStrategy != null && !"".equals(auditStrategy)) {
    configurationProperties.setProperty("org.hibernate.envers.audit_strategy",auditStrategy);
  }
  addConfigurationProperties(configurationProperties);
  cfg=new Ejb3Configuration();
  configure(cfg);
  cfg.configure(configurationProperties);
  emf=(EntityManagerFactoryImpl)cfg.buildEntityManagerFactory(createBootstrapRegistryBuilder());
  serviceRegistry=(StandardServiceRegistryImpl)((SessionFactoryImpl)emf.getSessionFactory()).getServiceRegistry().getParentServiceRegistry();
  newEntityManager();
}
