{
  final LoadQueryInfluencers influencers=LoadQueryInfluencers.NONE;
  final LockMode lockMode=LockMode.NONE;
  final int batchSize=1;
  final EntityJoinWalker walker=new EntityJoinWalker(persister,persister.getKeyColumnNames(),batchSize,lockMode,sf,influencers);
  SingleRootReturnLoadPlanBuilderStrategy strategy=new SingleRootReturnLoadPlanBuilderStrategy(sf,influencers);
  LoadPlan plan=MetadataDrivenLoadPlanBuilder.buildRootEntityLoadPlan(strategy,persister);
  EntityLoadQueryDetails details=EntityLoadQueryDetails.makeForBatching(plan,persister.getKeyColumnNames(),new QueryBuildingParameters(){
    @Override public LoadQueryInfluencers getQueryInfluencers(){
      return influencers;
    }
    @Override public int getBatchSize(){
      return batchSize;
    }
    @Override public LockMode getLockMode(){
      return null;
    }
    @Override public LockOptions getLockOptions(){
      return null;
    }
  }
,sf);
  compare(walker,details);
}
