{
  JoinableAssociationAliasesImpl aliases=aliasesByJoinableAssociation.get(joinableAssociation);
  if (aliases == null) {
    final Fetch currentFetch=joinableAssociation.getCurrentFetch();
    final String lhsAlias;
    if (EntityReference.class.isInstance(currentFetch.getOwner())) {
      lhsAlias=resolveEntityTableAlias((EntityReference)currentFetch.getOwner());
    }
 else     if (CompositeElementGraph.class.isInstance(currentFetch.getOwner())) {
      CompositeElementGraph compositeElementGraph=(CompositeElementGraph)currentFetch.getOwner();
      lhsAlias=resolveCollectionTableAlias(compositeElementGraph.getCollectionReference());
    }
 else     if (CompositeIndexGraph.class.isInstance(currentFetch.getOwner())) {
      CompositeIndexGraph compositeIndexGraph=(CompositeIndexGraph)currentFetch.getOwner();
      lhsAlias=resolveCollectionTableAlias(compositeIndexGraph.getCollectionReference());
    }
 else {
      throw new NotYetImplementedException("Cannot determine LHS alias for FetchOwner.");
    }
    final String[] aliasedLhsColumnNames=StringHelper.qualify(lhsAlias,currentFetch.getColumnNames());
    final String rhsAlias;
    if (EntityReference.class.isInstance(currentFetch)) {
      rhsAlias=resolveEntityTableAlias((EntityReference)currentFetch);
    }
 else     if (CollectionReference.class.isInstance(joinableAssociation.getCurrentFetch())) {
      rhsAlias=resolveCollectionTableAlias((CollectionReference)currentFetch);
    }
 else {
      throw new NotYetImplementedException("Cannot determine RHS alis for a fetch that is not an EntityReference or CollectionReference.");
    }
    aliases=new JoinableAssociationAliasesImpl(lhsAlias,aliasedLhsColumnNames,rhsAlias);
    aliasesByJoinableAssociation.put(joinableAssociation,aliases);
  }
  return aliases;
}
