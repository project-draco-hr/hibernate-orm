{
  byte[] original=buildByteArray(BLOB_SIZE,true);
  byte[] changed=buildByteArray(BLOB_SIZE,false);
  byte[] empty=new byte[]{};
  Session s=openSession();
  s.beginTransaction();
  LobHolder entity=new LobHolder();
  entity.setBlobLocator(s.getLobHelper().createBlob(original));
  s.save(entity);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  entity=s.get(LobHolder.class,entity.getId());
  Assert.assertEquals(BLOB_SIZE,entity.getBlobLocator().length());
  assertEquals(original,extractData(entity.getBlobLocator()));
  s.getTransaction().commit();
  s.close();
  if (getDialect().supportsLobValueChangePropogation()) {
    s=openSession();
    s.beginTransaction();
    entity=(LobHolder)s.byId(LobHolder.class).with(LockOptions.UPGRADE).load(entity.getId());
    entity.getBlobLocator().truncate(1);
    entity.getBlobLocator().setBytes(1,changed);
    s.getTransaction().commit();
    s.close();
    s=openSession();
    s.beginTransaction();
    entity=(LobHolder)s.byId(LobHolder.class).with(LockOptions.UPGRADE).load(entity.getId());
    assertNotNull(entity.getBlobLocator());
    Assert.assertEquals(BLOB_SIZE,entity.getBlobLocator().length());
    assertEquals(changed,extractData(entity.getBlobLocator()));
    entity.getBlobLocator().truncate(1);
    entity.getBlobLocator().setBytes(1,original);
    s.getTransaction().commit();
    s.close();
  }
  s=openSession();
  s.beginTransaction();
  entity=(LobHolder)s.byId(LobHolder.class).with(LockOptions.UPGRADE).load(entity.getId());
  assertNotNull(entity.getBlobLocator());
  Assert.assertEquals(BLOB_SIZE,entity.getBlobLocator().length());
  assertEquals(original,extractData(entity.getBlobLocator()));
  entity.setBlobLocator(s.getLobHelper().createBlob(changed));
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  entity=s.get(LobHolder.class,entity.getId());
  Assert.assertEquals(BLOB_SIZE,entity.getBlobLocator().length());
  assertEquals(changed,extractData(entity.getBlobLocator()));
  entity.setBlobLocator(s.getLobHelper().createBlob(empty));
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  entity=s.get(LobHolder.class,entity.getId());
  if (entity.getBlobLocator() != null) {
    Assert.assertEquals(empty.length,entity.getBlobLocator().length());
    assertEquals(empty,extractData(entity.getBlobLocator()));
  }
  s.delete(entity);
  s.getTransaction().commit();
  s.close();
}
