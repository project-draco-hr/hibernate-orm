{
  String name=element.attributeValue("name");
  LOG.debugf("Parsing filter-def [%s]",name);
  String defaultCondition=element.getTextTrim();
  if (StringHelper.isEmpty(defaultCondition)) {
    defaultCondition=element.attributeValue("condition");
  }
  HashMap paramMappings=new HashMap();
  Iterator params=element.elementIterator("filter-param");
  while (params.hasNext()) {
    final Element param=(Element)params.next();
    final String paramName=param.attributeValue("name");
    final String paramType=param.attributeValue("type");
    LOG.debugf("Adding filter parameter : %s -> %s",paramName,paramType);
    final Type heuristicType=mappings.getTypeResolver().heuristicType(paramType);
    LOG.debugf("Parameter heuristic type : %s",heuristicType);
    paramMappings.put(paramName,heuristicType);
  }
  LOG.debugf("Parsed filter-def [%s]",name);
  FilterDefinition def=new FilterDefinition(name,defaultCondition,paramMappings);
  mappings.addFilterDefinition(def);
}
