{
  registerColumnType(PGGeometryTypeDescriptor.INSTANCE.getSqlType(),PGGeometryTypeDescriptor.INSTANCE.getTypeName());
  registerFunction("dimension",new StandardSQLFunction("st_dimension",StandardBasicTypes.INTEGER));
  registerFunction("geometrytype",new StandardSQLFunction("st_geometrytype",StandardBasicTypes.STRING));
  registerFunction("srid",new StandardSQLFunction("st_srid",StandardBasicTypes.INTEGER));
  registerFunction("envelope",new StandardSQLFunction("st_envelope"));
  registerFunction("astext",new StandardSQLFunction("st_astext",StandardBasicTypes.STRING));
  registerFunction("asbinary",new StandardSQLFunction("st_asbinary",StandardBasicTypes.BINARY));
  registerFunction("isempty",new StandardSQLFunction("st_isempty",StandardBasicTypes.BOOLEAN));
  registerFunction("issimple",new StandardSQLFunction("st_issimple",StandardBasicTypes.BOOLEAN));
  registerFunction("boundary",new StandardSQLFunction("st_boundary"));
  registerFunction("overlaps",new StandardSQLFunction("st_overlaps",StandardBasicTypes.BOOLEAN));
  registerFunction("intersects",new StandardSQLFunction("st_intersects",StandardBasicTypes.BOOLEAN));
  registerFunction("equals",new StandardSQLFunction("st_equals",StandardBasicTypes.BOOLEAN));
  registerFunction("contains",new StandardSQLFunction("st_contains",StandardBasicTypes.BOOLEAN));
  registerFunction("crosses",new StandardSQLFunction("st_crosses",StandardBasicTypes.BOOLEAN));
  registerFunction("disjoint",new StandardSQLFunction("st_disjoint",StandardBasicTypes.BOOLEAN));
  registerFunction("touches",new StandardSQLFunction("st_touches",StandardBasicTypes.BOOLEAN));
  registerFunction("within",new StandardSQLFunction("st_within",StandardBasicTypes.BOOLEAN));
  registerFunction("relate",new StandardSQLFunction("st_relate",StandardBasicTypes.BOOLEAN));
  registerFunction("distance",new StandardSQLFunction("st_distance",StandardBasicTypes.DOUBLE));
  registerFunction("buffer",new StandardSQLFunction("st_buffer"));
  registerFunction("convexhull",new StandardSQLFunction("st_convexhull"));
  registerFunction("difference",new StandardSQLFunction("st_difference"));
  registerFunction("intersection",new StandardSQLFunction("st_intersection"));
  registerFunction("symdifference",new StandardSQLFunction("st_symdifference"));
  registerFunction("geomunion",new StandardSQLFunction("st_union"));
  registerFunction("extent",new StandardSQLFunction("extent"));
  registerFunction("dwithin",new StandardSQLFunction("st_dwithin",StandardBasicTypes.BOOLEAN));
  registerFunction("transform",new StandardSQLFunction("st_transform"));
}
