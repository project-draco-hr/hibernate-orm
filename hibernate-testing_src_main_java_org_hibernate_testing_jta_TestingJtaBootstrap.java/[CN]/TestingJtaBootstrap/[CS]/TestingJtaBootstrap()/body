{
  BeanPopulator.getDefaultInstance(ObjectStoreEnvironmentBean.class).setObjectStoreType(VolatileStore.class.getName());
  BeanPopulator.getNamedInstance(ObjectStoreEnvironmentBean.class,"communicationStore").setObjectStoreType(VolatileStore.class.getName());
  BeanPopulator.getNamedInstance(ObjectStoreEnvironmentBean.class,"stateStore").setObjectStoreType(VolatileStore.class.getName());
  this.transactionManager=com.arjuna.ats.jta.TransactionManager.transactionManager();
  this.userTransaction=com.arjuna.ats.jta.UserTransaction.userTransaction();
  Properties environmentProperties=Environment.getProperties();
  JtaAwareDataSource dataSource=new JtaAwareDataSource();
  dataSource.setTransactionManager(transactionManager);
  try {
    dataSource.setDriverName(environmentProperties.getProperty(Environment.DRIVER));
  }
 catch (  SQLException e) {
    throw new RuntimeException("Unable to set DataSource JDBC driver name",e);
  }
  dataSource.setUrl(environmentProperties.getProperty(Environment.URL));
  dataSource.setUser(environmentProperties.getProperty(Environment.USER));
  dataSource.setPassword(environmentProperties.getProperty(Environment.PASS));
  environmentProperties.remove(Environment.USER);
  environmentProperties.remove(Environment.PASS);
  final String isolationString=environmentProperties.getProperty(Environment.ISOLATION);
  if (isolationString != null) {
    dataSource.setTransactionIsolation(Integer.valueOf(isolationString));
  }
  this.dataSource=dataSource;
}
