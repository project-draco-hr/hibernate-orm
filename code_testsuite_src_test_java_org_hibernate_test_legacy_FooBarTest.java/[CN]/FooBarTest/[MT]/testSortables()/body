{
  Session s=openSession();
  Baz b=new Baz();
  b.setName("name");
  SortedSet ss=new TreeSet();
  ss.add(new Sortable("foo"));
  ss.add(new Sortable("bar"));
  ss.add(new Sortable("baz"));
  b.setSortablez(ss);
  s.save(b);
  s.flush();
  s.connection().commit();
  s.close();
  s=openSession();
  Criteria cr=s.createCriteria(Baz.class);
  cr.setFetchMode("topGlarchez",FetchMode.LAZY);
  List result=cr.addOrder(Order.asc("name")).list();
  assertTrue(result.size() == 1);
  b=(Baz)result.get(0);
  assertTrue(b.getSortablez().size() == 3);
  assertEquals(((Sortable)b.getSortablez().iterator().next()).getName(),"bar");
  s.connection().commit();
  s.close();
  s=openSession();
  result=s.createQuery("from Baz baz left join fetch baz.sortablez order by baz.name asc").list();
  b=(Baz)result.get(0);
  assertTrue(b.getSortablez().size() == 3);
  assertEquals(((Sortable)b.getSortablez().iterator().next()).getName(),"bar");
  s.connection().commit();
  s.close();
  s=openSession();
  result=s.createQuery("from Baz baz order by baz.name asc").list();
  b=(Baz)result.get(0);
  assertTrue(b.getSortablez().size() == 3);
  assertEquals(((Sortable)b.getSortablez().iterator().next()).getName(),"bar");
  s.delete(b);
  s.flush();
  s.connection().commit();
  s.close();
}
