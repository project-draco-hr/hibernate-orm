{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  Bar bar=new Bar();
  String id=(String)s.save(bar);
  MoreStuff more=new MoreStuff();
  more.setName("More Stuff");
  more.setIntId(12);
  more.setStringId("id");
  Stuff stuf=new Stuff();
  stuf.setMoreStuff(more);
  more.setStuffs(new ArrayList());
  more.getStuffs().add(stuf);
  stuf.setFoo(bar);
  stuf.setId(1234);
  stuf.setProperty(TimeZone.getDefault());
  s.save(more);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  assertTrue(s.find("from Stuff as s where s.foo.id = ? and s.id.id = ? and s.moreStuff.id.intId = ? and s.moreStuff.id.stringId = ?",new Object[]{bar,new Long(1234),new Integer(12),"id"},new Type[]{Hibernate.entity(Foo.class),Hibernate.LONG,Hibernate.INTEGER,Hibernate.STRING}).size() == 1);
  assertTrue(s.find("from Stuff as s where s.foo.id = ? and s.id.id = ? and s.moreStuff.name = ?",new Object[]{bar,new Long(1234),"More Stuff"},new Type[]{Hibernate.entity(Foo.class),Hibernate.LONG,Hibernate.STRING}).size() == 1);
  s.find("from Stuff as s where s.foo.string is not null");
  assertTrue(s.find("from Stuff as s where s.foo > '0' order by s.foo").size() == 1);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  FooProxy foo=(FooProxy)s.load(Foo.class,id);
  s.load(more,more);
  t.commit();
  s.close();
  s=openSession();
  t=s.beginTransaction();
  Stuff stuff=new Stuff();
  stuff.setFoo(foo);
  stuff.setId(1234);
  stuff.setMoreStuff(more);
  s.load(stuff,stuff);
  assertTrue(stuff.getProperty().equals(TimeZone.getDefault()));
  assertTrue(stuff.getMoreStuff().getName().equals("More Stuff"));
  s.delete("from MoreStuff");
  s.delete("from Foo foo");
  t.commit();
  s.close();
}
