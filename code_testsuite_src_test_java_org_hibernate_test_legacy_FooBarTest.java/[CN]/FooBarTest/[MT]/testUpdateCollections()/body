{
  Session s=openSession();
  Holder baz=new Holder();
  baz.setName("123");
  Foo f1=new Foo();
  Foo f2=new Foo();
  Foo f3=new Foo();
  One o=new One();
  baz.setOnes(new ArrayList());
  baz.getOnes().add(o);
  Foo[] foos=new Foo[]{f1,null,f2};
  baz.setFooArray(foos);
  baz.setFoos(new HashSet());
  baz.getFoos().add(f1);
  s.save(f1);
  s.save(f2);
  s.save(f3);
  s.save(o);
  s.save(baz);
  s.flush();
  s.connection().commit();
  s.close();
  baz.getOnes().set(0,null);
  baz.getOnes().add(o);
  baz.getFoos().add(f2);
  foos[0]=f3;
  foos[1]=f1;
  s=openSession();
  s.saveOrUpdate(baz);
  s.flush();
  s.connection().commit();
  s.close();
  s=openSession();
  Holder h=(Holder)s.load(Holder.class,baz.getId());
  assertTrue(h.getOnes().get(0) == null);
  assertTrue(h.getOnes().get(1) != null);
  assertTrue(h.getFooArray()[0] != null);
  assertTrue(h.getFooArray()[1] != null);
  assertTrue(h.getFooArray()[2] != null);
  assertTrue(h.getFoos().size() == 2);
  s.connection().commit();
  s.close();
  baz.getFoos().remove(f1);
  baz.getFoos().remove(f2);
  baz.getFooArray()[0]=null;
  baz.getFooArray()[0]=null;
  baz.getFooArray()[0]=null;
  s=openSession();
  s.saveOrUpdate(baz);
  s.delete("from Foo");
  baz.getOnes().remove(o);
  s.delete("from One");
  s.delete(baz);
  s.flush();
  s.connection().commit();
  s.close();
}
