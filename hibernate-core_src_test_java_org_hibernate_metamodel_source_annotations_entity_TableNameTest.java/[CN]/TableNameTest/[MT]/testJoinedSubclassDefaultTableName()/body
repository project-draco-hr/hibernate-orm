{
@Entity @Inheritance(strategy=javax.persistence.InheritanceType.JOINED) @Table(name="FOO") class A {
    @Id @GeneratedValue private int id;
  }
@Entity class B extends A {
  }
  Index index=JandexHelper.indexForClass(service,B.class,A.class);
  AnnotationBindingContext context=new AnnotationBindingContext(index,serviceRegistry);
  Set<ConfiguredClassHierarchy<EntityClass>> hierarchies=ConfiguredClassHierarchyBuilder.createEntityHierarchies(context);
  assertEquals("There should be only one hierarchy",1,hierarchies.size());
  Iterator<EntityClass> iter=hierarchies.iterator().next().iterator();
  EntityClass entityClass=iter.next();
  ClassInfo info=entityClass.getClassInfo();
  assertEquals("wrong class",DotName.createSimple(A.class.getName()),info.name());
  assertTrue(entityClass.hasOwnTable());
  Assert.assertEquals("wrong inheritance type",InheritanceType.JOINED,entityClass.getInheritanceType());
  Assert.assertEquals("wrong table name","FOO",entityClass.getPrimaryTableName());
  assertTrue(iter.hasNext());
  entityClass=iter.next();
  info=entityClass.getClassInfo();
  assertEquals("wrong class",DotName.createSimple(B.class.getName()),info.name());
  assertTrue(entityClass.hasOwnTable());
  Assert.assertEquals("wrong inheritance type",InheritanceType.JOINED,entityClass.getInheritanceType());
  Assert.assertEquals("wrong table name","B",entityClass.getPrimaryTableName());
  assertFalse(iter.hasNext());
}
