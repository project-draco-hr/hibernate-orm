{
  Properties params=new Properties();
  params.putAll(properties);
  Schema schema=getValue().getTable().getSchema();
  if (schema != null) {
    if (schema.getName().getSchema() != null) {
      params.setProperty(PersistentIdentifierGenerator.SCHEMA,schema.getName().getSchema().getName());
    }
    if (schema.getName().getCatalog() != null) {
      params.setProperty(PersistentIdentifierGenerator.CATALOG,schema.getName().getCatalog().getName());
    }
  }
  params.setProperty(IdentifierGenerator.ENTITY_NAME,getEntityBinding().getEntity().getName());
  String tableName=getValue().getTable().getQualifiedName(identifierGeneratorFactory.getDialect());
  params.setProperty(PersistentIdentifierGenerator.TABLE,tableName);
  if (getSimpleValueSpan() > 1) {
    throw new MappingException("A SimpleAttributeBinding used for an identifier has a more than 1 Value: " + getAttribute().getName());
  }
  SimpleValue simpleValue=(SimpleValue)getValue();
  if (!Column.class.isInstance(simpleValue)) {
    throw new MappingException("Cannot create an IdentifierGenerator because the value is not a column: " + simpleValue.toLoggableString());
  }
  params.setProperty(PersistentIdentifierGenerator.PK,((Column)simpleValue).getColumnName().encloseInQuotesIfQuoted(identifierGeneratorFactory.getDialect()));
  params.setProperty(PersistentIdentifierGenerator.TABLES,tableName);
  params.putAll(idGenerator.getParameters());
  return identifierGeneratorFactory.createIdentifierGenerator(idGenerator.getStrategy(),getHibernateTypeDescriptor().getResolvedTypeMapping(),params);
}
