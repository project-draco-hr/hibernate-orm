{
  Attribute rsrc=subelement.attribute("resource");
  Attribute file=subelement.attribute("file");
  Attribute jar=subelement.attribute("jar");
  Attribute pckg=subelement.attribute("package");
  Attribute clazz=subelement.attribute("class");
  if (rsrc != null) {
    log.debug("{} <- {}",name,rsrc);
    addResource(rsrc.getValue());
  }
 else   if (jar != null) {
    log.debug("{} <- {}",name,jar);
    addJar(new File(jar.getValue()));
  }
 else   if (file != null) {
    log.debug("{} <- {}",name,file);
    addFile(file.getValue());
  }
 else   if (pckg != null) {
    log.debug("{} <- {}",name,pckg);
    addPackage(pckg.getValue());
  }
 else   if (clazz != null) {
    log.debug("{} <- {}",name,clazz);
    Class loadedClass;
    try {
      loadedClass=ReflectHelper.classForName(clazz.getValue());
    }
 catch (    ClassNotFoundException cnf) {
      throw new MappingException("Unable to load class declared as <mapping class=\"" + clazz.getValue() + "\"/> in the configuration:",cnf);
    }
catch (    NoClassDefFoundError ncdf) {
      throw new MappingException("Unable to load class declared as <mapping class=\"" + clazz.getValue() + "\"/> in the configuration:",ncdf);
    }
    addAnnotatedClass(loadedClass);
  }
 else {
    throw new MappingException("<mapping> element in configuration specifies no attributes");
  }
}
