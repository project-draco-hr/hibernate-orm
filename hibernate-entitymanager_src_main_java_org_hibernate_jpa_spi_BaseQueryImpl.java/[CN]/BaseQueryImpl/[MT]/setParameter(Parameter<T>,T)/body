{
  checkOpen(true);
  try {
    final ParameterRegistration<T> parameterRegistrationExisting=findParameterRegistration(param);
    if (value == null && param.getParameterType() != null && parameterRegistrationExisting.getParameterType() == null && NullTypeBindableParameterRegistration.class.isInstance(parameterRegistrationExisting)) {
      ((NullTypeBindableParameterRegistration)parameterRegistrationExisting).bindNullValue(param.getParameterType());
    }
 else {
      if (param.getParameterType() != null && parameterRegistrationExisting.getParameterType() != null && !parameterRegistrationExisting.getParameterType().isAssignableFrom(param.getParameterType())) {
        LOG.warnf("Parameter type [%s] is not assignment compatible with requested type [%s] for parameter %s",parameterRegistrationExisting.getParameterType().getName(),param.getParameterType().getName(),parameterRegistrationExisting.getName() == null ? "at position [" + param.getPosition() + "]" : "named [" + parameterRegistrationExisting.getName() + "]");
      }
      parameterRegistrationExisting.bindValue(value);
    }
  }
 catch (  QueryParameterException e) {
    entityManager().markForRollbackOnly();
    throw new IllegalArgumentException(e.getMessage(),e);
  }
catch (  HibernateException he) {
    throw entityManager.convert(he);
  }
  return this;
}
