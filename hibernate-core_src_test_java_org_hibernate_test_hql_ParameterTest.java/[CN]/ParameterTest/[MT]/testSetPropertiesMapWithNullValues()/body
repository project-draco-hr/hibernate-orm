{
  Session s=openSession();
  Transaction t=s.beginTransaction();
  try {
    Human human=new Human();
    human.setNickName("nick");
    s.save(human);
    Map parameters=new HashMap();
    parameters.put("nickName",null);
    Query q=s.createQuery("from Human h where h.nickName = :nickName or (h.nickName is null and :nickName is null)");
    q.setProperties((parameters));
    assertThat(q.list().size(),is(0));
    Human human1=new Human();
    human1.setNickName(null);
    s.save(human1);
    parameters=new HashMap();
    parameters.put("nickName",null);
    q=s.createQuery("from Human h where h.nickName = :nickName or (h.nickName is null and :nickName is null)");
    q.setProperties((parameters));
    assertThat(q.list().size(),is(1));
    Human found=(Human)q.list().get(0);
    assertThat(found.getId(),is(human1.getId()));
    parameters=new HashMap();
    parameters.put("nickName","nick");
    q=s.createQuery("from Human h where h.nickName = :nickName or (h.nickName is null and :nickName is null)");
    q.setProperties((parameters));
    assertThat(q.list().size(),is(1));
    found=(Human)q.list().get(0);
    assertThat(found.getId(),is(human.getId()));
    s.delete(human);
    s.delete(human1);
    t.commit();
  }
 catch (  Exception e) {
    if (session.getTransaction().getStatus() == TransactionStatus.ACTIVE) {
      session.getTransaction().rollback();
    }
    throw e;
  }
 finally {
    s.close();
  }
}
