{
  boolean retrieve=false;
  if (declaringClass != null) {
    final InheritanceState inheritanceState=inheritanceStatePerClass.get(declaringClass);
    if (inheritanceState == null) {
      throw new org.hibernate.annotations.common.AssertionFailure("Declaring class is not found in the inheritance state hierarchy: " + declaringClass);
    }
    if (inheritanceState.isEmbeddableSuperclass()) {
      retrieve=true;
    }
  }
  return retrieve ? mappings.getMappedSuperclass(mappings.getReflectionManager().toClass(declaringClass)) : null;
}
