{
  String entityName=event.getAffectedOwnerEntityName();
  if (!getAuditConfiguration().getGlobalCfg().isGenerateRevisionsForCollections()) {
    return;
  }
  if (getAuditConfiguration().getEntCfg().isVersioned(entityName)) {
    checkIfTransactionInProgress(event.getSession());
    AuditProcess auditProcess=getAuditConfiguration().getSyncManager().get(event.getSession());
    String ownerEntityName=((AbstractCollectionPersister)collectionEntry.getLoadedPersister()).getOwnerEntityName();
    String referencingPropertyName=collectionEntry.getRole().substring(ownerEntityName.length() + 1);
    RelationDescription rd=searchForRelationDescription(entityName,referencingPropertyName);
    if (rd != null && rd.getMappedByPropertyName() != null) {
      generateFakeBidirecationalRelationWorkUnits(auditProcess,newColl,oldColl,entityName,referencingPropertyName,event,rd);
    }
 else {
      PersistentCollectionChangeWorkUnit workUnit=new PersistentCollectionChangeWorkUnit(event.getSession(),entityName,getAuditConfiguration(),newColl,collectionEntry,oldColl,event.getAffectedOwnerIdOrNull(),referencingPropertyName);
      auditProcess.addWorkUnit(workUnit);
      if (workUnit.containsWork()) {
        auditProcess.addWorkUnit(new CollectionChangeWorkUnit(event.getSession(),event.getAffectedOwnerEntityName(),referencingPropertyName,getAuditConfiguration(),event.getAffectedOwnerIdOrNull(),event.getAffectedOwnerOrNull()));
        generateBidirectionalCollectionChangeWorkUnits(auditProcess,event,workUnit,rd);
      }
    }
  }
}
