{
  final Object value=properties.get(AvailableSettings.CUSTOM_ENTITY_DIRTINESS_STRATEGY);
  if (value != null) {
    if (CustomEntityDirtinessStrategy.class.isInstance(value)) {
      return CustomEntityDirtinessStrategy.class.cast(value);
    }
    Class<CustomEntityDirtinessStrategy> customEntityDirtinessStrategyClass;
    if (Class.class.isInstance(value)) {
      customEntityDirtinessStrategyClass=Class.class.cast(customEntityDirtinessStrategy);
    }
 else {
      try {
        customEntityDirtinessStrategyClass=serviceRegistry.getService(ClassLoaderService.class).classForName(value.toString());
      }
 catch (      Exception e) {
        LOG.debugf("Unable to locate CustomEntityDirtinessStrategy implementation class %s",value.toString());
        customEntityDirtinessStrategyClass=null;
      }
    }
    try {
      return customEntityDirtinessStrategyClass.newInstance();
    }
 catch (    Exception e) {
      LOG.debugf("Unable to instantiate CustomEntityDirtinessStrategy class %s",customEntityDirtinessStrategyClass.getName());
    }
  }
  return new CustomEntityDirtinessStrategy(){
    @Override public boolean canDirtyCheck(    Object entity,    Session session){
      return false;
    }
    @Override public boolean isDirty(    Object entity,    Session session){
      return false;
    }
    @Override public void resetDirty(    Object entity,    Session session){
    }
  }
;
}
