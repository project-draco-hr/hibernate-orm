{
  if (isClosed) {
    LOG.trace("Already closed");
    return;
  }
  LOG.closing();
  isClosed=true;
  settings.getMultiTableBulkIdStrategy().release(jdbcServices,buildLocalConnectionAccess());
  Iterator iter=entityPersisters.values().iterator();
  while (iter.hasNext()) {
    EntityPersister p=(EntityPersister)iter.next();
    if (p.hasCache()) {
      p.getCacheAccessStrategy().getRegion().destroy();
    }
  }
  iter=collectionPersisters.values().iterator();
  while (iter.hasNext()) {
    CollectionPersister p=(CollectionPersister)iter.next();
    if (p.hasCache()) {
      p.getCacheAccessStrategy().getRegion().destroy();
    }
  }
  cacheAccess.close();
  queryPlanCache.cleanup();
  if (delayedDropAction != null) {
    delayedDropAction.perform(serviceRegistry);
  }
  SessionFactoryRegistry.INSTANCE.removeSessionFactory(uuid,name,settings.isSessionFactoryNameAlsoJndiName(),serviceRegistry.getService(JndiService.class));
  observer.sessionFactoryClosed(this);
  serviceRegistry.destroy();
}
