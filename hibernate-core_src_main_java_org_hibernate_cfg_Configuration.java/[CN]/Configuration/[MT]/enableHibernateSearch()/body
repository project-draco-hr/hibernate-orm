{
  Class searchStartupClass;
  try {
    searchStartupClass=ReflectHelper.classForName(SEARCH_STARTUP_CLASS,getClass());
  }
 catch (  ClassNotFoundException e) {
    try {
      searchStartupClass=ReflectHelper.classForName(SEARCH_EVENT_LISTENER_REGISTERER_CLASS,getClass());
    }
 catch (    ClassNotFoundException cnfe) {
      LOG.debug("Search not present in classpath, ignoring event listener registration.");
      return;
    }
  }
  try {
    Object searchStartupInstance=searchStartupClass.newInstance();
    Method enableSearchMethod=searchStartupClass.getDeclaredMethod(SEARCH_STARTUP_METHOD,EventListeners.class,Properties.class);
    enableSearchMethod.invoke(searchStartupInstance,getEventListeners(),getProperties());
  }
 catch (  InstantiationException e) {
    LOG.debug("Unable to instantiate " + SEARCH_STARTUP_CLASS + ", ignoring event listener registration.");
  }
catch (  IllegalAccessException e) {
    LOG.debug("Unable to instantiate " + SEARCH_STARTUP_CLASS + ", ignoring event listener registration.");
  }
catch (  NoSuchMethodException e) {
    LOG.debug("Method " + SEARCH_STARTUP_METHOD + "() not found in "+ SEARCH_STARTUP_CLASS);
  }
catch (  InvocationTargetException e) {
    LOG.debug("Unable to execute " + SEARCH_STARTUP_METHOD + ", ignoring event listener registration.");
  }
}
