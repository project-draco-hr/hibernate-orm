{
  secondPassCompile();
  ArrayList<String> script=new ArrayList<String>(50);
  String defaultCatalog=properties.getProperty(Environment.DEFAULT_CATALOG);
  String defaultSchema=properties.getProperty(Environment.DEFAULT_SCHEMA);
  Iterator iter=getTableMappings();
  while (iter.hasNext()) {
    Table table=(Table)iter.next();
    if (table.isPhysicalTable()) {
      script.add(table.sqlCreateString(dialect,mapping,defaultCatalog,defaultSchema));
      Iterator<String> comments=table.sqlCommentStrings(dialect,defaultCatalog,defaultSchema);
      while (comments.hasNext()) {
        script.add(comments.next());
      }
    }
  }
  iter=getTableMappings();
  while (iter.hasNext()) {
    Table table=(Table)iter.next();
    if (table.isPhysicalTable()) {
      Iterator subIter=table.getUniqueKeyIterator();
      while (subIter.hasNext()) {
        UniqueKey uk=(UniqueKey)subIter.next();
        String constraintString=uk.sqlCreateString(dialect,mapping,defaultCatalog,defaultSchema);
        if (constraintString != null)         script.add(constraintString);
      }
      subIter=table.getIndexIterator();
      while (subIter.hasNext()) {
        Index index=(Index)subIter.next();
        script.add(index.sqlCreateString(dialect,mapping,defaultCatalog,defaultSchema));
      }
    }
  }
  iter=getTableMappings();
  while (iter.hasNext()) {
    Table table=(Table)iter.next();
    if (table.isPhysicalTable()) {
      if (dialect.hasAlterTable()) {
        Iterator subIter=table.getForeignKeyIterator();
        while (subIter.hasNext()) {
          ForeignKey fk=(ForeignKey)subIter.next();
          if (fk.isPhysicalConstraint()) {
            script.add(fk.sqlCreateString(dialect,mapping,defaultCatalog,defaultSchema));
          }
        }
      }
    }
  }
  iter=iterateGenerators(dialect);
  while (iter.hasNext()) {
    String[] lines=((PersistentIdentifierGenerator)iter.next()).sqlCreateStrings(dialect);
    script.addAll(Arrays.asList(lines));
  }
  for (  AuxiliaryDatabaseObject auxiliaryDatabaseObject : auxiliaryDatabaseObjects) {
    if (auxiliaryDatabaseObject.appliesToDialect(dialect)) {
      script.add(auxiliaryDatabaseObject.sqlCreateString(dialect,mapping,defaultCatalog,defaultSchema));
    }
  }
  return ArrayHelper.toStringArray(script);
}
