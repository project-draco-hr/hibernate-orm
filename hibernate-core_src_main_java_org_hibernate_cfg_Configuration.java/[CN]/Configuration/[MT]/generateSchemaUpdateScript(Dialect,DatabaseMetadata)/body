{
  secondPassCompile();
  String defaultCatalog=properties.getProperty(Environment.DEFAULT_CATALOG);
  String defaultSchema=properties.getProperty(Environment.DEFAULT_SCHEMA);
  ArrayList<String> script=new ArrayList<String>(50);
  Iterator iter=getTableMappings();
  while (iter.hasNext()) {
    Table table=(Table)iter.next();
    if (table.isPhysicalTable()) {
      TableMetadata tableInfo=databaseMetadata.getTableMetadata(table.getName(),(table.getSchema() == null) ? defaultSchema : table.getSchema(),(table.getCatalog() == null) ? defaultCatalog : table.getCatalog(),table.isQuoted());
      if (tableInfo == null) {
        script.add(table.sqlCreateString(dialect,mapping,defaultCatalog,defaultSchema));
      }
 else {
        Iterator<String> subiter=table.sqlAlterStrings(dialect,mapping,tableInfo,defaultCatalog,defaultSchema);
        while (subiter.hasNext()) {
          script.add(subiter.next());
        }
      }
      Iterator<String> comments=table.sqlCommentStrings(dialect,defaultCatalog,defaultSchema);
      while (comments.hasNext()) {
        script.add(comments.next());
      }
    }
  }
  iter=getTableMappings();
  while (iter.hasNext()) {
    Table table=(Table)iter.next();
    if (table.isPhysicalTable()) {
      TableMetadata tableInfo=databaseMetadata.getTableMetadata(table.getName(),table.getSchema(),table.getCatalog(),table.isQuoted());
      if (dialect.hasAlterTable()) {
        Iterator subIter=table.getForeignKeyIterator();
        while (subIter.hasNext()) {
          ForeignKey fk=(ForeignKey)subIter.next();
          if (fk.isPhysicalConstraint()) {
            boolean create=tableInfo == null || (tableInfo.getForeignKeyMetadata(fk) == null && (!(dialect instanceof MySQLDialect) || tableInfo.getIndexMetadata(fk.getName()) == null));
            if (create) {
              script.add(fk.sqlCreateString(dialect,mapping,defaultCatalog,defaultSchema));
            }
          }
        }
      }
      Iterator subIter=table.getIndexIterator();
      while (subIter.hasNext()) {
        final Index index=(Index)subIter.next();
        if (tableInfo != null && StringHelper.isNotEmpty(index.getName())) {
          final IndexMetadata meta=tableInfo.getIndexMetadata(index.getName());
          if (meta != null) {
            continue;
          }
        }
        script.add(index.sqlCreateString(dialect,mapping,defaultCatalog,defaultSchema));
      }
    }
  }
  iter=iterateGenerators(dialect);
  while (iter.hasNext()) {
    PersistentIdentifierGenerator generator=(PersistentIdentifierGenerator)iter.next();
    Object key=generator.generatorKey();
    if (!databaseMetadata.isSequence(key) && !databaseMetadata.isTable(key)) {
      String[] lines=generator.sqlCreateStrings(dialect);
      script.addAll(Arrays.asList(lines));
    }
  }
  return ArrayHelper.toStringArray(script);
}
