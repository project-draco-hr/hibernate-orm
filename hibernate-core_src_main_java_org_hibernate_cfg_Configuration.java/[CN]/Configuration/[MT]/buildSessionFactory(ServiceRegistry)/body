{
  log.debug("Building session factory using provided StandardServiceRegistry");
  final MetadataBuilder metadataBuilder=metadataSources.getMetadataBuilder((StandardServiceRegistry)serviceRegistry);
  if (implicitNamingStrategy != null) {
    metadataBuilder.applyImplicitNamingStrategy(implicitNamingStrategy);
  }
  if (physicalNamingStrategy != null) {
    metadataBuilder.applyPhysicalNamingStrategy(physicalNamingStrategy);
  }
  if (sharedCacheMode != null) {
    metadataBuilder.applySharedCacheMode(sharedCacheMode);
  }
  if (!typeContributorRegistrations.isEmpty()) {
    for (    TypeContributor typeContributor : typeContributorRegistrations) {
      metadataBuilder.applyTypes(typeContributor);
    }
  }
  if (!basicTypes.isEmpty()) {
    for (    BasicType basicType : basicTypes) {
      metadataBuilder.applyBasicType(basicType);
    }
  }
  if (sqlFunctions != null) {
    for (    Map.Entry<String,SQLFunction> entry : sqlFunctions.entrySet()) {
      metadataBuilder.applySqlFunction(entry.getKey(),entry.getValue());
    }
  }
  if (auxiliaryDatabaseObjectList != null) {
    for (    AuxiliaryDatabaseObject auxiliaryDatabaseObject : auxiliaryDatabaseObjectList) {
      metadataBuilder.applyAuxiliaryDatabaseObject(auxiliaryDatabaseObject);
    }
  }
  if (attributeConverterDefinitionsByClass != null) {
    for (    AttributeConverterDefinition attributeConverterDefinition : attributeConverterDefinitionsByClass.values()) {
      metadataBuilder.applyAttributeConverter(attributeConverterDefinition);
    }
  }
  final Metadata metadata=metadataBuilder.build();
  final SessionFactoryBuilder sessionFactoryBuilder=metadata.getSessionFactoryBuilder();
  if (interceptor != null && interceptor != EmptyInterceptor.INSTANCE) {
    sessionFactoryBuilder.applyInterceptor(interceptor);
  }
  if (getSessionFactoryObserver() != null) {
    sessionFactoryBuilder.addSessionFactoryObservers(getSessionFactoryObserver());
  }
  if (getEntityNotFoundDelegate() != null) {
    sessionFactoryBuilder.applyEntityNotFoundDelegate(getEntityNotFoundDelegate());
  }
  if (getEntityTuplizerFactory() != null) {
    sessionFactoryBuilder.applyEntityTuplizerFactory(getEntityTuplizerFactory());
  }
  if (getCurrentTenantIdentifierResolver() != null) {
    sessionFactoryBuilder.applyCurrentTenantIdentifierResolver(getCurrentTenantIdentifierResolver());
  }
  return sessionFactoryBuilder.build();
}
