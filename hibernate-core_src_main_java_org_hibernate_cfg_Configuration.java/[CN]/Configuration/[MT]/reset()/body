{
  metadataSourceQueue=new MetadataSourceQueue();
  createReflectionManager();
  classes=new HashMap<String,PersistentClass>();
  imports=new HashMap<String,String>();
  collections=new HashMap<String,Collection>();
  tables=new TreeMap<String,Table>();
  namedQueries=new HashMap<String,NamedQueryDefinition>();
  namedSqlQueries=new HashMap<String,NamedSQLQueryDefinition>();
  sqlResultSetMappings=new HashMap<String,ResultSetMappingDefinition>();
  namedEntityGraphMap=new HashMap<String,NamedEntityGraphDefinition>();
  namedProcedureCallMap=new HashMap<String,NamedProcedureCallDefinition>();
  typeDefs=new HashMap<String,TypeDef>();
  filterDefinitions=new HashMap<String,FilterDefinition>();
  fetchProfiles=new HashMap<String,FetchProfile>();
  auxiliaryDatabaseObjects=new ArrayList<AuxiliaryDatabaseObject>();
  tableNameBinding=new HashMap();
  columnNameBindingPerTable=new HashMap();
  secondPasses=new ArrayList<SecondPass>();
  propertyReferences=new ArrayList<Mappings.PropertyReference>();
  extendsQueue=new HashMap<ExtendsQueueEntry,String>();
  xmlHelper=new XMLHelper();
  interceptor=EmptyInterceptor.INSTANCE;
  properties=Environment.getProperties();
  entityResolver=XMLHelper.DEFAULT_DTD_RESOLVER;
  sqlFunctions=new HashMap<String,SQLFunction>();
  entityTuplizerFactory=new EntityTuplizerFactory();
  identifierGeneratorFactory=new DefaultIdentifierGeneratorFactory();
  mappedSuperClasses=new HashMap<Class<?>,MappedSuperclass>();
  metadataSourcePrecedence=Collections.emptyList();
  namedGenerators=new HashMap<String,IdGenerator>();
  joins=new HashMap<String,Map<String,Join>>();
  classTypes=new HashMap<String,AnnotatedClassType>();
  generatorTables=new HashMap<String,Properties>();
  defaultNamedQueryNames=new HashSet<String>();
  defaultNamedNativeQueryNames=new HashSet<String>();
  defaultSqlResultSetMappingNames=new HashSet<String>();
  defaultNamedGenerators=new HashSet<String>();
  uniqueConstraintHoldersByTable=new HashMap<Table,List<UniqueConstraintHolder>>();
  jpaIndexHoldersByTable=new HashMap<Table,List<JPAIndexHolder>>();
  mappedByResolver=new HashMap<String,String>();
  propertyRefResolver=new HashMap<String,String>();
  caches=new ArrayList<CacheHolder>();
  namingStrategy=EJB3NamingStrategy.INSTANCE;
  setEntityResolver(new EJB3DTDEntityResolver());
  anyMetaDefs=new HashMap<String,AnyMetaDef>();
  propertiesAnnotatedWithMapsId=new HashMap<XClass,Map<String,PropertyData>>();
  propertiesAnnotatedWithIdAndToOne=new HashMap<XClass,Map<String,PropertyData>>();
  specjProprietarySyntaxEnabled=System.getProperty("hibernate.enable_specj_proprietary_syntax") != null;
}
