{
  final QueryBuilder qb=new QueryBuilder(persistentCollectionChangeData.getEntityName(),"e");
  final String originalIdPropName=auditCfg.getAuditEntCfg().getOriginalIdPropName();
  final Map<String,Object> originalId=(Map<String,Object>)persistentCollectionChangeData.getData().get(originalIdPropName);
  for (  Map.Entry<String,Object> originalIdEntry : originalId.entrySet()) {
    if (!auditCfg.getAuditEntCfg().getRevisionFieldName().equals(originalIdEntry.getKey())) {
      qb.getRootParameters().addWhereWithParam(originalIdPropName + "." + originalIdEntry.getKey(),true,"=",originalIdEntry.getValue());
    }
  }
  addEndRevisionNullRestriction(auditCfg,qb);
  final List<Object> l=qb.toQuery(session).setLockOptions(LockOptions.UPGRADE).list();
  if (l.size() > 0) {
    updateLastRevision(session,auditCfg,l,originalId,persistentCollectionChangeData.getEntityName(),revision);
  }
  session.save(persistentCollectionChangeData.getEntityName(),persistentCollectionChangeData.getData());
  sessionCacheCleaner.scheduleAuditDataRemoval(session,persistentCollectionChangeData.getData());
}
