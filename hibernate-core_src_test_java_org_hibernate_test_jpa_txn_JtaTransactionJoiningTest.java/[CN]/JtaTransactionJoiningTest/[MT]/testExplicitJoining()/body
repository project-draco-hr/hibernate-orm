{
  assertFalse(JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager()));
  SessionImplementor session=(SessionImplementor)sessionFactory().withOptions().autoJoinTransactions(false).openSession();
  ExtraAssertions.assertTyping(JtaTransactionCoordinatorImpl.class,session.getTransactionCoordinator());
  JtaTransactionCoordinatorImpl transactionCoordinator=(JtaTransactionCoordinatorImpl)session.getTransactionCoordinator();
  assertFalse(transactionCoordinator.isSynchronizationRegistered());
  assertFalse(transactionCoordinator.isActive());
  assertFalse(transactionCoordinator.isJoined());
  session.getFlushMode();
  assertFalse(transactionCoordinator.isSynchronizationRegistered());
  assertFalse(transactionCoordinator.isActive());
  assertFalse(transactionCoordinator.isJoined());
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  assertTrue(JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager()));
  assertTrue(transactionCoordinator.isActive());
  assertFalse(transactionCoordinator.isJoined());
  assertFalse(transactionCoordinator.isSynchronizationRegistered());
  session.getFlushMode();
  assertTrue(JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager()));
  assertTrue(transactionCoordinator.isActive());
  assertFalse(transactionCoordinator.isSynchronizationRegistered());
  assertFalse(transactionCoordinator.isJoined());
  transactionCoordinator.explicitJoin();
  session.getFlushMode();
  assertTrue(JtaStatusHelper.isActive(TestingJtaPlatformImpl.INSTANCE.getTransactionManager()));
  assertTrue(transactionCoordinator.isActive());
  assertTrue(transactionCoordinator.isSynchronizationRegistered());
  assertTrue(transactionCoordinator.isJoined());
  ((Session)session).close();
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
}
