{
  Session s;
  Transaction tx;
  s=openSession();
  tx=s.beginTransaction();
  CommunityBid communityBid=new CommunityBid();
  communityBid.setId(new Integer(2));
  communityBid.setCommunityNote(Starred.OK);
  Bid bid=new Bid();
  bid.setId(new Integer(1));
  bid.setDescription("My best one");
  bid.setNote(Starred.OK);
  bid.setEditorsNote(Starred.GOOD);
  s.persist(bid);
  s.persist(communityBid);
  tx.commit();
  s.close();
  s=openSession();
  tx=s.beginTransaction();
  bid=(Bid)s.createQuery("select b from Bid b where b.note = " + Starred.class.getName() + ".OK and b.editorsNote = "+ Starred.class.getName()+ ".GOOD and b.id = :id").setParameter("id",bid.getId()).uniqueResult();
  assertEquals(Starred.OK,bid.getNote());
  assertEquals(Starred.GOOD,bid.getEditorsNote());
  bid=(Bid)s.createQuery("select b from Bid b where b.note = :note" + " and b.editorsNote = :editorNote " + " and b.id = :id").setParameter("id",bid.getId()).setParameter("note",Starred.OK).setParameter("editorNote",Starred.GOOD).uniqueResult();
  assertEquals(Starred.OK,bid.getNote());
  assertEquals(Starred.GOOD,bid.getEditorsNote());
  bid.setNote(null);
  tx.commit();
  s.clear();
  tx=s.beginTransaction();
  bid=(Bid)s.get(Bid.class,bid.getId());
  communityBid=(CommunityBid)s.get(CommunityBid.class,communityBid.getId());
  assertNull(bid.getNote());
  assertEquals(Starred.OK,communityBid.getCommunityNote());
  s.delete(bid);
  s.clear();
  communityBid=(CommunityBid)s.createSQLQuery("select {b.*} from Bid b where b.id = ?").addEntity("b",CommunityBid.class).setInteger(0,communityBid.getId()).uniqueResult();
  assertEquals(Starred.OK,communityBid.getCommunityNote());
  s.delete(communityBid);
  tx.commit();
  s.close();
}
