{
  functionsToRegister.put("dimension",new StandardSQLFunction("dimension",StandardBasicTypes.INTEGER));
  functionsToRegister.put("geometrytype",new StandardSQLFunction("geometrytype",StandardBasicTypes.STRING));
  functionsToRegister.put("srid",new StandardSQLFunction("srid",StandardBasicTypes.INTEGER));
  functionsToRegister.put("envelope",new StandardSQLFunction("envelope"));
  functionsToRegister.put("astext",new StandardSQLFunction("astext",StandardBasicTypes.STRING));
  functionsToRegister.put("asbinary",new StandardSQLFunction("asbinary",StandardBasicTypes.BINARY));
  functionsToRegister.put("isempty",new StandardSQLFunction("isempty",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("issimple",new StandardSQLFunction("issimple",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("overlaps",new StandardSQLFunction("overlaps",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("intersects",new StandardSQLFunction("intersects",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("equals",new StandardSQLFunction("equals",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("contains",new StandardSQLFunction("contains",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("crosses",new StandardSQLFunction("crosses",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("disjoint",new StandardSQLFunction("disjoint",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("touches",new StandardSQLFunction("touches",StandardBasicTypes.BOOLEAN));
  functionsToRegister.put("within",new StandardSQLFunction("within",StandardBasicTypes.BOOLEAN));
}
