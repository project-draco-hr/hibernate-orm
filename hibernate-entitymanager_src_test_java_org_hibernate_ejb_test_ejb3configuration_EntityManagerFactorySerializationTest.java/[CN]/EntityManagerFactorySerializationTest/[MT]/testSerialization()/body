{
  ByteArrayOutputStream stream=new ByteArrayOutputStream();
  ObjectOutput out=new ObjectOutputStream(stream);
  out.writeObject(entityManagerFactory());
  out.close();
  byte[] serialized=stream.toByteArray();
  stream.close();
  ByteArrayInputStream byteIn=new ByteArrayInputStream(serialized);
  ObjectInputStream in=new ObjectInputStream(byteIn);
  EntityManagerFactory serializedFactory=(EntityManagerFactory)in.readObject();
  in.close();
  byteIn.close();
  EntityManager em=serializedFactory.createEntityManager();
  Cat cat=new Cat();
  cat.setAge(3);
  cat.setDateOfBirth(new Date());
  cat.setLength(22);
  cat.setName("Kitty");
  em.persist(cat);
  Item item=new Item();
  item.setName("Train Ticket");
  item.setDescr("Paris-London");
  em.persist(item);
  item.setDescr("Paris-Bruxelles");
  ((HibernateEntityManager)em).getSession().disconnect();
  stream=new ByteArrayOutputStream();
  out=new ObjectOutputStream(stream);
  out.writeObject(em);
  out.close();
  serialized=stream.toByteArray();
  stream.close();
  byteIn=new ByteArrayInputStream(serialized);
  in=new ObjectInputStream(byteIn);
  em=(EntityManager)in.readObject();
  in.close();
  byteIn.close();
  em.getTransaction().begin();
  item=em.find(Item.class,item.getName());
  item.setDescr(item.getDescr() + "-Amsterdam");
  cat=(Cat)em.createQuery("select c from " + Cat.class.getName() + " c").getSingleResult();
  cat.setLength(34);
  em.flush();
  em.remove(item);
  em.remove(cat);
  em.flush();
  em.getTransaction().commit();
  em.close();
}
