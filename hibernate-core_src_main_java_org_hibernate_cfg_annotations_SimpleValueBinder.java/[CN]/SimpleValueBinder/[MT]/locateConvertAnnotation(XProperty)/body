{
  LOG.debugf("Attempting to locate Convert annotation for property [%s:%s]",persistentClassName,property.getName());
{
    Convert localConvertAnnotation=property.getAnnotation(Convert.class);
    if (localConvertAnnotation != null) {
      LOG.debugf("Found matching local @Convert annotation [disableConversion=%s]",localConvertAnnotation.disableConversion());
      return localConvertAnnotation.disableConversion() ? null : localConvertAnnotation;
    }
  }
{
    Converts localConvertsAnnotation=property.getAnnotation(Converts.class);
    if (localConvertsAnnotation != null) {
      for (      Convert localConvertAnnotation : localConvertsAnnotation.value()) {
        if (isLocalMatch(localConvertAnnotation,property)) {
          LOG.debugf("Found matching @Convert annotation as part local @Converts [disableConversion=%s]",localConvertAnnotation.disableConversion());
          return localConvertAnnotation.disableConversion() ? null : localConvertAnnotation;
        }
      }
    }
  }
  if (persistentClassName == null) {
    LOG.debug("Persistent Class name not known during attempt to locate @Convert annotations");
    return null;
  }
  final XClass owner;
  try {
    final Class ownerClass=ReflectHelper.classForName(persistentClassName);
    owner=mappings.getReflectionManager().classForName(persistentClassName,ownerClass);
  }
 catch (  ClassNotFoundException e) {
    throw new AnnotationException("Unable to resolve Class reference during attempt to locate @Convert annotations");
  }
  return lookForEntityDefinedConvertAnnotation(property,owner);
}
