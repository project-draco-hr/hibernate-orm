{
  LOG.debugf("Setting SimpleValue typeName for %s",propertyName);
  if (attributeConverterDefinition != null) {
    if (!BinderHelper.isEmptyAnnotationValue(explicitType)) {
      throw new AnnotationException(String.format("AttributeConverter and explicit Type cannot be applied to same attribute [%s.%s];" + "remove @Type or specify @Convert(disableConversion = true)",persistentClassName,propertyName));
    }
    simpleValue.setJpaAttributeConverterDefinition(attributeConverterDefinition);
  }
 else {
    String type=BinderHelper.isEmptyAnnotationValue(explicitType) ? returnedClassName : explicitType;
    org.hibernate.mapping.TypeDef typeDef=mappings.getTypeDef(type);
    if (typeDef != null) {
      type=typeDef.getTypeClass();
      simpleValue.setTypeParameters(typeDef.getParameters());
    }
    if (typeParameters != null && typeParameters.size() != 0) {
      simpleValue.setTypeParameters(typeParameters);
    }
    simpleValue.setTypeName(type);
  }
  if (persistentClassName != null || attributeConverterDefinition != null) {
    simpleValue.setTypeUsingReflection(persistentClassName,propertyName);
  }
  if (!simpleValue.isTypeSpecified() && isVersion()) {
    simpleValue.setTypeName("integer");
  }
  if (timeStampVersionType != null) {
    simpleValue.setTypeName(timeStampVersionType);
  }
}
