{
  this.resultSet=resultSet;
  this.session=session;
  this.loadPlan=loadPlan;
  this.readOnly=readOnly;
  this.shouldUseOptionalEntityInformation=shouldUseOptionalEntityInformation;
  this.forceFetchLazyAttributes=forceFetchLazyAttributes;
  this.shouldReturnProxies=shouldReturnProxies;
  this.queryParameters=queryParameters;
  this.namedParameterContext=namedParameterContext;
  this.hadSubselectFetches=hadSubselectFetches;
  if (shouldUseOptionalEntityInformation) {
    if (queryParameters.getOptionalId() != null) {
      if (loadPlan.getReturns().size() > 1) {
        throw new IllegalStateException("Cannot specify 'optional entity' values with multi-return load plans");
      }
    }
  }
  this.lockModeResolverDelegate=new LockModeResolver(){
    @Override public LockMode resolveLockMode(    EntityReference entityReference){
      if (queryParameters.getLockOptions() != null && queryParameters.getLockOptions().getLockMode() != null) {
        return queryParameters.getLockOptions().getLockMode();
      }
      return LockMode.READ;
    }
  }
;
}
