{
  IntegralDataTypeHolder value=buildHolder();
  int rows;
  do {
    sql=query;
    SQL_STATEMENT_LOGGER.logStatement(sql,FormatStyle.BASIC);
    PreparedStatement qps=conn.prepareStatement(query);
    try {
      ResultSet rs=qps.executeQuery();
      if (!rs.next()) {
        String err=LOG.unableToReadHiValue(tableName);
        LOG.error(err);
        throw new IdentifierGenerationException(err);
      }
      value.initialize(rs,1);
      rs.close();
    }
 catch (    SQLException sqle) {
      LOG.error(LOG.unableToReadHiValue(tableName),sqle);
      throw sqle;
    }
 finally {
      qps.close();
    }
    sql=update;
    SQL_STATEMENT_LOGGER.logStatement(sql,FormatStyle.BASIC);
    PreparedStatement ups=conn.prepareStatement(update);
    try {
      value.copy().increment().bind(ups,1);
      value.bind(ups,2);
      rows=ups.executeUpdate();
    }
 catch (    SQLException sqle) {
      LOG.error(LOG.unableToUpdateHiValue(tableName),sqle);
      throw sqle;
    }
 finally {
      ups.close();
    }
  }
 while (rows == 0);
  return value;
}
