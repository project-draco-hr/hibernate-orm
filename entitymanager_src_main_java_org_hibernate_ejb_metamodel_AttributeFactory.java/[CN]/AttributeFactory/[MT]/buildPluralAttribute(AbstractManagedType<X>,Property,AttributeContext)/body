{
  AttributeImplementor<X,Y> attribute;
  final Type<V> attrType=getType(ownerType,attrContext.getElementTypeStatus(),attrContext.getElementValue());
  final Class<Y> collectionClass=(Class<Y>)attrContext.getCollectionClass();
  if (java.util.Map.class.isAssignableFrom(collectionClass)) {
    final Type<K> keyType=getType(ownerType,attrContext.getKeyTypeStatus(),attrContext.getKeyValue());
    attribute=PluralAttributeImpl.create(ownerType,attrType,collectionClass,keyType).member(determineStandardJavaMember(ownerType,property)).property(property).persistentAttributeType(attrContext.getElementAttributeType()).build();
  }
 else {
    attribute=PluralAttributeImpl.create(ownerType,attrType,collectionClass,null).member(determineStandardJavaMember(ownerType,property)).property(property).persistentAttributeType(attrContext.getElementAttributeType()).build();
  }
  return attribute;
}
