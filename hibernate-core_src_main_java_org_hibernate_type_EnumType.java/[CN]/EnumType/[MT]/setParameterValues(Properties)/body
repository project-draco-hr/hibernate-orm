{
  ParameterType reader=(ParameterType)parameters.get(PARAMETER_TYPE);
  if (reader != null) {
    enumClass=reader.getReturnedClass().asSubclass(Enum.class);
    javax.persistence.EnumType enumType=getEnumType(reader);
    if (enumType != null) {
      if (javax.persistence.EnumType.ORDINAL.equals(enumType)) {
        sqlType=Types.INTEGER;
      }
 else       if (javax.persistence.EnumType.STRING.equals(enumType)) {
        sqlType=Types.VARCHAR;
      }
 else {
        throw new AssertionFailure("Unknown EnumType: " + enumType);
      }
    }
  }
 else {
    String enumClassName=(String)parameters.get(ENUM);
    try {
      enumClass=ReflectHelper.classForName(enumClassName,this.getClass()).asSubclass(Enum.class);
    }
 catch (    ClassNotFoundException exception) {
      throw new HibernateException("Enum class not found",exception);
    }
    String type=(String)parameters.get(TYPE);
    if (type != null) {
      sqlType=Integer.decode(type);
    }
  }
}
