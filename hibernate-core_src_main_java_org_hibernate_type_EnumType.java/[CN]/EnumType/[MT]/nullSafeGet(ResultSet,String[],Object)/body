{
  Object object=rs.getObject(names[0]);
  if (rs.wasNull()) {
    if (LOG.isTraceEnabled())     LOG.returningAsColumn(names[0]);
    return null;
  }
  if (object instanceof Number) {
    initEnumValues();
    int ordinal=((Number)object).intValue();
    if (ordinal < 0 || ordinal >= enumValues.length)     throw new IllegalArgumentException("Unknown ordinal value for enum " + enumClass + ": "+ ordinal);
    if (LOG.isTraceEnabled())     LOG.returningAsColumn(ordinal,names[0]);
    return enumValues[ordinal];
  }
 else {
    String name=(String)object;
    if (LOG.isTraceEnabled())     LOG.returningAsColumn(name,names[0]);
    try {
      return Enum.valueOf(enumClass,name);
    }
 catch (    IllegalArgumentException iae) {
      throw new IllegalArgumentException("Unknown name value for enum " + enumClass + ": "+ name,iae);
    }
  }
}
