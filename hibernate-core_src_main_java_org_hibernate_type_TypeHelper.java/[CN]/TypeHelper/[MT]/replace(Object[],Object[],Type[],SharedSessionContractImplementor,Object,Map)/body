{
  Object[] copied=new Object[original.length];
  for (int i=0; i < types.length; i++) {
    if (original[i] == LazyPropertyInitializer.UNFETCHED_PROPERTY || original[i] == PropertyAccessStrategyBackRefImpl.UNKNOWN) {
      copied[i]=target[i];
    }
 else     if (target[i] == LazyPropertyInitializer.UNFETCHED_PROPERTY) {
      if (types[i].isMutable()) {
        copied[i]=types[i].deepCopy(original[i],session.getFactory());
      }
 else {
        copied[i]=original[i];
      }
    }
 else {
      copied[i]=types[i].replace(original[i],target[i],session,owner,copyCache);
    }
  }
  return copied;
}
