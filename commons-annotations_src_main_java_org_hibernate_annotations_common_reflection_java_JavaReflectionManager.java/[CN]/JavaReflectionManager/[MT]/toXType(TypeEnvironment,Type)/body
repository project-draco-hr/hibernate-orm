{
  Type boundType=toApproximatingEnvironment(context).bind(propType);
  if (TypeUtils.isArray(boundType)) {
    return new JavaXArrayType(propType,context,this);
  }
  if (TypeUtils.isCollection(boundType)) {
    return new JavaXCollectionType(propType,context,this);
  }
  if (TypeUtils.isSimple(boundType)) {
    return new JavaXSimpleType(propType,context,this);
  }
  throw new IllegalArgumentException("No PropertyTypeExtractor available for type void ");
}
