{
  LOG.trace("Flushing entities and processing referenced collections");
  final EventSource source=event.getSession();
  final Map.Entry[] list=IdentityMap.concurrentEntries(source.getPersistenceContext().getEntityEntries());
  final int size=list.length;
  for (int i=0; i < size; i++) {
    Map.Entry me=list[i];
    EntityEntry entry=(EntityEntry)me.getValue();
    Status status=entry.getStatus();
    if (status != Status.LOADING && status != Status.GONE) {
      final FlushEntityEvent entityEvent=new FlushEntityEvent(source,me.getKey(),entry);
      final EventListenerGroup<FlushEntityEventListener> listenerGroup=source.getFactory().getServiceRegistry().getService(EventListenerRegistry.class).getEventListenerGroup(EventType.FLUSH_ENTITY);
      for (      FlushEntityEventListener listener : listenerGroup.listeners()) {
        listener.onFlushEntity(entityEvent);
      }
    }
  }
  source.getActionQueue().sortActions();
}
