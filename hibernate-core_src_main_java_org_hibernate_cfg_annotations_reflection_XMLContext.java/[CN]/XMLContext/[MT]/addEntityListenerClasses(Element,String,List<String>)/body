{
  List<String> localAddedClasses=new ArrayList<String>();
  Element listeners=element.element("entity-listeners");
  if (listeners != null) {
    @SuppressWarnings("unchecked") List<Element> elements=listeners.elements("entity-listener");
    for (    Element listener : elements) {
      String listenerClassName=buildSafeClassName(listener.attributeValue("class"),packageName);
      if (classOverriding.containsKey(listenerClassName)) {
        if ("entity-listener".equals(classOverriding.get(listenerClassName).getName())) {
          LOG.duplicateListener(listenerClassName);
          continue;
        }
 else {
          throw new IllegalStateException("Duplicate XML entry for " + listenerClassName);
        }
      }
      localAddedClasses.add(listenerClassName);
      classOverriding.put(listenerClassName,listener);
    }
  }
  LOG.addingListenerOverridingInformation(localAddedClasses);
  addedClasses.addAll(localAddedClasses);
  return localAddedClasses;
}
