{
  String propertyName=CriteriaTools.determinePropertyName(enversService,versionsReader,entityName,propertyNameGetter);
  CriteriaTools.checkPropertyNotARelation(enversService,entityName,propertyName);
  Parameters subParams=parameters.addSubParameters(Parameters.AND);
  QueryBuilder subQb=qb.newSubQueryBuilder();
  for (  AuditCriterion versionsCriteria : criterions) {
    versionsCriteria.addToQuery(enversService,versionsReader,entityName,qb,subParams);
    versionsCriteria.addToQuery(enversService,versionsReader,entityName,subQb,subQb.getRootParameters());
  }
switch (mode) {
case MIN:
    subQb.addProjection("min",propertyName,false);
  break;
case MAX:
subQb.addProjection("max",propertyName,false);
}
if (correlate) {
final String originalIdPropertyName=enversService.getAuditEntitiesConfiguration().getOriginalIdPropName();
enversService.getEntitiesConfigurations().get(entityName).getIdMapper().addIdsEqualToQuery(subQb.getRootParameters(),subQb.getRootAlias() + "." + originalIdPropertyName,qb.getRootAlias() + "." + originalIdPropertyName);
}
subParams.addWhere(propertyName,"=",subQb);
}
