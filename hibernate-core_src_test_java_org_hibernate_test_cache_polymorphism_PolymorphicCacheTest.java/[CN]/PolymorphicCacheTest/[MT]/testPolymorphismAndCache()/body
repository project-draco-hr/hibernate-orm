{
  final CachedItem1 item1=new CachedItem1("name 1");
  final CachedItem2 item2=new CachedItem2("name 2");
  Session s=openSession();
  s.beginTransaction();
  s.save(item1);
  s.save(item2);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  Object thisObjectShouldBeNull=s.get(CachedItem2.class,item1.getId());
  assertNull(thisObjectShouldBeNull);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  item1.setName("updated");
  s.update(item1);
  s.getTransaction().commit();
  s.clear();
  s.beginTransaction();
  CachedItem1 cachedItem1=(CachedItem1)s.get(CachedItem1.class,item1.getId());
  CachedItem2 cachedItem2=(CachedItem2)s.get(CachedItem2.class,item2.getId());
  assertEquals("updated",cachedItem1.getName());
  assertEquals(item2.getName(),cachedItem2.getName());
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  s.delete(item1);
  s.getTransaction().commit();
  s.clear();
  s.beginTransaction();
  cachedItem1=(CachedItem1)s.get(CachedItem1.class,item1.getId());
  cachedItem2=(CachedItem2)s.get(CachedItem2.class,item2.getId());
  assertNull(cachedItem1);
  assertNotNull(cachedItem2);
  assertEquals(item2.getName(),cachedItem2.getName());
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  s.createQuery("DELETE FROM AbstractCachedItem").executeUpdate();
  s.getTransaction().commit();
  s.close();
}
