{
  final Connection connection=createConnectionProxy(4,new JdbcLobBuilder(){
    public Blob createBlob(){
      return new JdbcBlob();
    }
    public Clob createClob(){
      return new JdbcClob();
    }
    public NClob createNClob(){
      return new JdbcNClob();
    }
  }
);
  final LobCreationContext lobCreationContext=new LobCreationContext(){
    public Object execute(    Callback callback){
      try {
        return callback.executeOnConnection(connection);
      }
 catch (      SQLException e) {
        throw new RuntimeException("Unexpected SQLException",e);
      }
    }
  }
;
  LobCreator lobCreator=JdbcSupportLoader.loadJdbcSupport(connection).getLobCreator(lobCreationContext);
  assertTrue(lobCreator instanceof ContextualLobCreator);
  Blob blob=lobCreator.createBlob(new byte[]{});
  assertTrue(blob instanceof JdbcBlob);
  blob=lobCreator.wrap(blob);
  assertTrue(blob instanceof WrappedBlob);
  Clob clob=lobCreator.createClob("Hi");
  assertTrue(clob instanceof JdbcClob);
  clob=lobCreator.wrap(clob);
  assertTrue(clob instanceof WrappedClob);
  Clob nclob=lobCreator.createNClob("Hi");
  assertTrue(nclob instanceof JdbcNClob);
  nclob=lobCreator.wrap(nclob);
  assertTrue(nclob instanceof WrappedClob);
  blob.free();
  clob.free();
  nclob.free();
  connection.close();
}
