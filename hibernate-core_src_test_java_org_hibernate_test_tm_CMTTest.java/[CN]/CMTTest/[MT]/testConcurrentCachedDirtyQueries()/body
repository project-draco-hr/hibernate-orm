{
  TestingJtaBootstrap.INSTANCE.getTransactionManager().begin();
  Session s=openSession();
  Map foo=new HashMap();
  foo.put("name","Foo");
  foo.put("description","a big foo");
  s.persist("Item",foo);
  Map bar=new HashMap();
  bar.put("name","Bar");
  bar.put("description","a small bar");
  s.persist("Item",bar);
  TestingJtaBootstrap.INSTANCE.getTransactionManager().commit();
synchronized (this) {
    wait(1000);
  }
  sessionFactory().getStatistics().clear();
  sessionFactory().evictEntity("Item");
  TestingJtaBootstrap.INSTANCE.getTransactionManager().begin();
  Session s4=openSession();
  Transaction tx4=TestingJtaBootstrap.INSTANCE.getTransactionManager().suspend();
  TestingJtaBootstrap.INSTANCE.getTransactionManager().begin();
  Session s1=openSession();
  List r1=s1.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list();
  assertEquals(r1.size(),2);
  foo=(Map)r1.get(0);
  foo.put("description","a big red foo");
  s1.flush();
  Transaction tx1=TestingJtaBootstrap.INSTANCE.getTransactionManager().suspend();
  TestingJtaBootstrap.INSTANCE.getTransactionManager().begin();
  Session s2=openSession();
  List r2=s2.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list();
  assertEquals(r2.size(),2);
  TestingJtaBootstrap.INSTANCE.getTransactionManager().commit();
  assertEquals(sessionFactory().getStatistics().getSecondLevelCacheHitCount(),0);
  assertEquals(sessionFactory().getStatistics().getSecondLevelCacheMissCount(),0);
  assertEquals(sessionFactory().getStatistics().getEntityLoadCount(),4);
  assertEquals(sessionFactory().getStatistics().getEntityFetchCount(),0);
  assertEquals(sessionFactory().getStatistics().getQueryExecutionCount(),2);
  assertEquals(sessionFactory().getStatistics().getQueryCachePutCount(),2);
  assertEquals(sessionFactory().getStatistics().getQueryCacheHitCount(),0);
  assertEquals(sessionFactory().getStatistics().getQueryCacheMissCount(),2);
  TestingJtaBootstrap.INSTANCE.getTransactionManager().resume(tx1);
  TestingJtaBootstrap.INSTANCE.getTransactionManager().commit();
  TestingJtaBootstrap.INSTANCE.getTransactionManager().begin();
  Session s3=openSession();
  s3.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list();
  TestingJtaBootstrap.INSTANCE.getTransactionManager().commit();
  assertEquals(sessionFactory().getStatistics().getSecondLevelCacheHitCount(),0);
  assertEquals(sessionFactory().getStatistics().getSecondLevelCacheMissCount(),0);
  assertEquals(sessionFactory().getStatistics().getEntityLoadCount(),6);
  assertEquals(sessionFactory().getStatistics().getEntityFetchCount(),0);
  assertEquals(sessionFactory().getStatistics().getQueryExecutionCount(),3);
  assertEquals(sessionFactory().getStatistics().getQueryCachePutCount(),3);
  assertEquals(sessionFactory().getStatistics().getQueryCacheHitCount(),0);
  assertEquals(sessionFactory().getStatistics().getQueryCacheMissCount(),3);
  TestingJtaBootstrap.INSTANCE.getTransactionManager().resume(tx4);
  List r4=s4.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list();
  assertEquals(r4.size(),2);
  TestingJtaBootstrap.INSTANCE.getTransactionManager().commit();
  assertEquals(sessionFactory().getStatistics().getSecondLevelCacheHitCount(),2);
  assertEquals(sessionFactory().getStatistics().getSecondLevelCacheMissCount(),0);
  assertEquals(sessionFactory().getStatistics().getEntityLoadCount(),6);
  assertEquals(sessionFactory().getStatistics().getEntityFetchCount(),0);
  assertEquals(sessionFactory().getStatistics().getQueryExecutionCount(),3);
  assertEquals(sessionFactory().getStatistics().getQueryCachePutCount(),3);
  assertEquals(sessionFactory().getStatistics().getQueryCacheHitCount(),1);
  assertEquals(sessionFactory().getStatistics().getQueryCacheMissCount(),3);
  TestingJtaBootstrap.INSTANCE.getTransactionManager().begin();
  s=openSession();
  s.createQuery("delete from Item").executeUpdate();
  TestingJtaBootstrap.INSTANCE.getTransactionManager().commit();
}
