{
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().begin();
  Session s=openSession();
  Map foo=new HashMap();
  foo.put("name","Foo");
  foo.put("description","a big foo");
  s.persist("Item",foo);
  Map bar=new HashMap();
  bar.put("name","Bar");
  bar.put("description","a small bar");
  s.persist("Item",bar);
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().commit();
synchronized (this) {
    wait(1000);
  }
  getSessions().getStatistics().clear();
  getSessions().evictEntity("Item");
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().begin();
  Session s4=openSession();
  Transaction tx4=sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().suspend();
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().begin();
  Session s1=openSession();
  List r1=s1.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list();
  assertEquals(r1.size(),2);
  Transaction tx1=sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().suspend();
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().begin();
  Session s2=openSession();
  List r2=s2.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list();
  assertEquals(r2.size(),2);
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().commit();
  assertEquals(getSessions().getStatistics().getSecondLevelCacheHitCount(),2);
  assertEquals(getSessions().getStatistics().getSecondLevelCacheMissCount(),0);
  assertEquals(getSessions().getStatistics().getEntityLoadCount(),2);
  assertEquals(getSessions().getStatistics().getEntityFetchCount(),0);
  assertEquals(getSessions().getStatistics().getQueryExecutionCount(),1);
  assertEquals(getSessions().getStatistics().getQueryCachePutCount(),1);
  assertEquals(getSessions().getStatistics().getQueryCacheHitCount(),1);
  assertEquals(getSessions().getStatistics().getQueryCacheMissCount(),1);
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().resume(tx1);
  tx1.commit();
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().begin();
  Session s3=openSession();
  s3.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list();
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().commit();
  assertEquals(getSessions().getStatistics().getSecondLevelCacheHitCount(),4);
  assertEquals(getSessions().getStatistics().getSecondLevelCacheMissCount(),0);
  assertEquals(getSessions().getStatistics().getEntityLoadCount(),2);
  assertEquals(getSessions().getStatistics().getEntityFetchCount(),0);
  assertEquals(getSessions().getStatistics().getQueryExecutionCount(),1);
  assertEquals(getSessions().getStatistics().getQueryCachePutCount(),1);
  assertEquals(getSessions().getStatistics().getQueryCacheHitCount(),2);
  assertEquals(getSessions().getStatistics().getQueryCacheMissCount(),1);
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().resume(tx4);
  List r4=s4.createCriteria("Item").addOrder(Order.asc("description")).setCacheable(true).list();
  assertEquals(r4.size(),2);
  tx4.commit();
  assertEquals(getSessions().getStatistics().getSecondLevelCacheHitCount(),6);
  assertEquals(getSessions().getStatistics().getSecondLevelCacheMissCount(),0);
  assertEquals(getSessions().getStatistics().getEntityLoadCount(),2);
  assertEquals(getSessions().getStatistics().getEntityFetchCount(),0);
  assertEquals(getSessions().getStatistics().getQueryExecutionCount(),1);
  assertEquals(getSessions().getStatistics().getQueryCachePutCount(),1);
  assertEquals(getSessions().getStatistics().getQueryCacheHitCount(),3);
  assertEquals(getSessions().getStatistics().getQueryCacheMissCount(),1);
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().begin();
  s=openSession();
  s.createQuery("delete from Item").executeUpdate();
  sfi().getServiceRegistry().getService(JtaPlatform.class).retrieveTransactionManager().commit();
}
