{
  Set<EmailAddress> emailAddresses=new HashSet<EmailAddress>();
  emailAddresses.add(new EmailAddress("test1@test.com"));
  emailAddresses.add(new EmailAddress("test2@test.com"));
  emailAddresses.add(new EmailAddress("test3@test.com"));
{
    Session session=openSession();
    session.beginTransaction();
    User user=new User();
    user.setName("john");
    Contact contact=new Contact();
    contact.setName("John Doe");
    contact.setEmailAddresses(emailAddresses);
    contact=(Contact)session.merge(contact);
    user.setContact(contact);
    user=(User)session.merge(user);
    session.getTransaction().commit();
    session.close();
  }
{
    Session session=openSession();
    session.beginTransaction();
    User user=(User)session.createQuery("SELECT user " + "FROM User user " + "LEFT OUTER JOIN FETCH user.contact "+ "LEFT OUTER JOIN FETCH user.contact.emailAddresses2 "+ "LEFT OUTER JOIN FETCH user.contact.emailAddresses").uniqueResult();
    session.getTransaction().commit();
    session.close();
    Assert.assertEquals(emailAddresses,user.getContact().getEmailAddresses());
    Assert.assertTrue(user.getContact().getEmailAddresses2().isEmpty());
  }
}
