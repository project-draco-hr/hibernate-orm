{
  EntityManager em=getEntityManager();
  uste1=new UnversionedStrTestEntity("str1");
  uste2=new UnversionedStrTestEntity("str2");
  em.getTransaction().begin();
  em.persist(uste1);
  em.persist(uste2);
  em.getTransaction().commit();
  em.getTransaction().begin();
  uste1=em.find(UnversionedStrTestEntity.class,uste1.getId());
  tnae1=new TargetNotAuditedEntity(1,"tnae1",uste1);
  em.persist(tnae1);
  em.getTransaction().commit();
  em.getTransaction().begin();
  uste2=em.find(UnversionedStrTestEntity.class,uste2.getId());
  mtonane1=new ManyToOneNotAuditedNullEntity(2,"mtonane1",uste2);
  mtmnane1=new ManyToManyNotAuditedNullEntity(3,"mtmnane1");
  mtmnane1.getReferences().add(uste2);
  otmnane1=new OneToManyNotAuditedNullEntity(4,"otmnane1");
  otmnane1.getReferences().add(uste2);
  em.persist(mtonane1);
  em.persist(mtmnane1);
  em.persist(otmnane1);
  em.getTransaction().commit();
  em.clear();
  em.getTransaction().begin();
  ManyToOneNotAuditedNullEntity tmp1=em.find(ManyToOneNotAuditedNullEntity.class,mtonane1.getId());
  tmp1.setReference(null);
  tmp1=em.merge(tmp1);
  ManyToManyNotAuditedNullEntity tmp2=em.find(ManyToManyNotAuditedNullEntity.class,mtmnane1.getId());
  tmp2.setReferences(null);
  tmp2=em.merge(tmp2);
  OneToManyNotAuditedNullEntity tmp3=em.find(OneToManyNotAuditedNullEntity.class,otmnane1.getId());
  tmp3.setReferences(null);
  tmp3=em.merge(tmp3);
  em.remove(em.getReference(UnversionedStrTestEntity.class,uste2.getId()));
  em.getTransaction().commit();
  em.close();
}
