{
  byte[] original=buildRecursively(ARRAY_SIZE,true);
  byte[] changed=buildRecursively(ARRAY_SIZE,false);
  Session s=openSession();
  s.beginTransaction();
  ImageHolder entity=new ImageHolder();
  s.save(entity);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  entity=(ImageHolder)s.get(ImageHolder.class,entity.getId());
  assertNull(entity.getLongByteArray());
  assertNull(entity.getDog());
  assertNull(entity.getPicByteArray());
  entity.setLongByteArray(original);
  Dog dog=new Dog();
  dog.setName("rabbit");
  entity.setDog(dog);
  entity.setPicByteArray(wrapPrimitive(original));
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  entity=(ImageHolder)s.get(ImageHolder.class,entity.getId());
  assertEquals(ARRAY_SIZE,entity.getLongByteArray().length);
  assertEquals(original,entity.getLongByteArray());
  assertEquals(ARRAY_SIZE,entity.getPicByteArray().length);
  assertEquals(original,unwrapNonPrimitive(entity.getPicByteArray()));
  assertNotNull(entity.getDog());
  assertEquals(dog.getName(),entity.getDog().getName());
  entity.setLongByteArray(changed);
  entity.setPicByteArray(wrapPrimitive(changed));
  dog.setName("papa");
  entity.setDog(dog);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  entity=(ImageHolder)s.get(ImageHolder.class,entity.getId());
  assertEquals(ARRAY_SIZE,entity.getLongByteArray().length);
  assertEquals(changed,entity.getLongByteArray());
  assertEquals(ARRAY_SIZE,entity.getPicByteArray().length);
  assertEquals(changed,unwrapNonPrimitive(entity.getPicByteArray()));
  assertNotNull(entity.getDog());
  assertEquals(dog.getName(),entity.getDog().getName());
  entity.setLongByteArray(null);
  entity.setPicByteArray(null);
  entity.setDog(null);
  s.getTransaction().commit();
  s.close();
  s=openSession();
  s.beginTransaction();
  entity=(ImageHolder)s.get(ImageHolder.class,entity.getId());
  assertNull(entity.getLongByteArray());
  assertNull(entity.getDog());
  assertNull(entity.getPicByteArray());
  s.delete(entity);
  s.getTransaction().commit();
  s.close();
}
