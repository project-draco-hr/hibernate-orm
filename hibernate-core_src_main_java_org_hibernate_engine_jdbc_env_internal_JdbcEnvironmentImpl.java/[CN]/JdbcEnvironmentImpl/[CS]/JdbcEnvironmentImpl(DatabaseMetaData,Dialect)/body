{
  this.dialect=dialect;
  this.sqlExceptionHelper=buildSqlExceptionHelper(dialect);
  this.extractedMetaDataSupport=new ExtractedDatabaseMetaDataImpl.Builder(this).apply(databaseMetaData).build();
  NameQualifierSupport nameQualifierSupport=dialect.getNameQualifierSupport();
  if (nameQualifierSupport == null) {
    nameQualifierSupport=determineNameQualifierSupport(databaseMetaData);
  }
  reservedWords.addAll(AnsiSqlKeywords.INSTANCE.sql2003());
  reservedWords.addAll(dialect.getKeywords());
  reservedWords.addAll(extractedMetaDataSupport.getExtraKeywords());
  final boolean globallyQuoteIdentifiers=false;
  this.identifierHelper=new NormalizingIdentifierHelperImpl(this,nameQualifierSupport,globallyQuoteIdentifiers,true,false,false,false,true,false);
  this.currentCatalog=null;
  this.currentSchema=null;
  this.qualifiedObjectNameFormatter=new QualifiedObjectNameFormatterStandardImpl(nameQualifierSupport,databaseMetaData);
  this.lobCreatorBuilder=LobCreatorBuilderImpl.makeLobCreatorBuilder();
}
