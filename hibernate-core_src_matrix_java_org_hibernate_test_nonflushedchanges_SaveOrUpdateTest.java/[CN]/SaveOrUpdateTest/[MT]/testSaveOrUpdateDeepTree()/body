{
  clearCounts();
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  Session s=openSession();
  Node root=new Node("root");
  Node child=new Node("child");
  Node grandchild=new Node("grandchild");
  root.addChild(child);
  child.addChild(grandchild);
  s.saveOrUpdate(root);
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  root=(Node)getOldToNewEntityRefMap().get(root);
  child=(Node)getOldToNewEntityRefMap().get(child);
  grandchild=(Node)getOldToNewEntityRefMap().get(grandchild);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
  assertInsertCount(3);
  assertUpdateCount(0);
  clearCounts();
  grandchild.setDescription("the grand child");
  Node grandchild2=new Node("grandchild2");
  child.addChild(grandchild2);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  s=openSession();
  s.saveOrUpdate(root);
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  root=(Node)getOldToNewEntityRefMap().get(root);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
  assertInsertCount(1);
  assertUpdateCount(1);
  clearCounts();
  Node child2=new Node("child2");
  Node grandchild3=new Node("grandchild3");
  child2.addChild(grandchild3);
  root.addChild(child2);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  s=openSession();
  s.saveOrUpdate(root);
  s=applyNonFlushedChangesToNewSessionCloseOldSession(s);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
  assertInsertCount(2);
  assertUpdateCount(0);
  clearCounts();
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().begin();
  s=openSession();
  s.delete(grandchild);
  s.delete(grandchild2);
  s.delete(grandchild3);
  s.delete(child);
  s.delete(child2);
  s.delete(root);
  TestingJtaPlatformImpl.INSTANCE.getTransactionManager().commit();
}
